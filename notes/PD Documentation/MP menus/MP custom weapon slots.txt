Displays name of weapon in slot, both predef and custom sets

7F188C3C:		display name of weapon in set
ADDIU	SP,SP,FFD8
SW	S2,0020 (SP)
SW	S0,0018 (SP)
SW	S1,001C (SP)
LUI	S0,8008
LUI	S2,8008
OR	S1,A0,R0	;S1=A0: 
SW	RA,0024 (SP)
ADDIU	S2,S2,73EE	;S2=800873EE: end of block
ADDIU	S0,S0,7268	;S0=80087268: start of block
LHU	A0,0004 (S0)	;A0=S0+4: halfword containing lock
ANDI	T6,A0,007F	;T6=lock byte
JAL	7F19C910	;V0=TRUE if unlocked
OR	A0,T6,R0	;A0=lock byte
BEQL	V0,R0,7F188CF0	;branch if locked
ADDIU	S0,S0,000A
BNEL	S1,R0,7F188CEC	;branch if S1 set
ADDIU	S1,S1,FFFF	;S1--
//7F188C84:
LBU	A0,0000 (S0)	;A0=item#
ADDIU	AT,R0,005B	;AT=0x5B
BNEZ	A0,7F188CA4	;branch if not 0 (nothing)
NOP
JAL	7F16E7C4
ADDIU	A0,R0,543A	;A0=text ID 543A: 
BEQ	R0,R0,7F188D04
LW	RA,0024 (SP)
//7F188CA4:
BNEL	A0,AT,7F188CC0	;branch if item not 5B: sheild
ADDIU	AT,R0,005C
JAL	7F16E7C4
ADDIU	A0,R0,543B	;A0=text ID 543B: 
BEQ	R0,R0,7F188D04
LW	RA,0024 (SP)
//7F188CBC:
ADDIU	AT,R0,005C	;AT=0x5C
BNE	A0,AT,7F188CD8	;branch if item not 5C: disabled (MP)
NOP
JAL	7F16E7C4
ADDIU	A0,R0,543C	;A0=text ID 543C: 
BEQ	R0,R0,7F188D04
LW	RA,0024 (SP)
//7F188CD8:
JAL	7F0A215C	;display name of item A0
NOP
BEQ	R0,R0,7F188D04
LW	RA,0024 (SP)
//7F188CE8:
ADDIU	S1,S1,FFFF	;S1--
ADDIU	S0,S0,000A	;S0+=A: next weapon
//7F188CF0:	loop per each slot until a hit is found
BNEL	S0,S2,7F188C68
LHU	A0,0004 (S0)
LUI	V0,7F1C
ADDIU	V0,V0,8A58	;V0=7F1C8A58: 
//7F188D00:	return
LW	RA,0024 (SP)
LW	S0,0018 (SP)
LW	S1,001C (SP)
LW	S2,0020 (SP)
JR	RA
ADDIU	SP,SP,0028


7F188D94:		
	accepts: A0=weapon# in set
ADDIU	SP,SP,FFD8
LUI	T6,800B
SW	S3,0020 (SP)
ADDIU	T6,T6,CB88	;T6=800ACB88: MP setup data.  +18 is current weapon config
ADDU	S3,A0,T6	;S3=800ACB88+offset: entry in table
LBU	T7,0018 (S3)	;T7=800ACBA0+offset: item# in current weapon config
SW	S2,001C (SP)
SW	S1,0018 (SP)
SW	RA,0024 (SP)
SW	S0,0014 (SP)
OR	S2,R0,R0	;S2=0
BLEZ	T7,7F188E04	;branch if invalid
OR	S1,R0,R0	;S1=0
LUI	S0,8008
ADDIU	S0,S0,7268	;S0=80087268: start of MP item block
//7F188DD0:
LHU	A0,0004 (S0)	;A0=halfword containing lock byte for weapon
ANDI	T8,A0,007F
JAL	7F19C910
OR	A0,T8,R0	;A0=lock
BEQL	V0,R0,7F188DF0	;branch if not available
LBU	T9,0018 (S3)
ADDIU	S2,S2,0001	;S2++: valid weapon count++
//7F188DEC
LBU	T9,0018 (S3)	;T9=item# in current weapon config
ADDIU	S1,S1,0001	;S1++	weapon count++
ADDIU	S0,S0,000A	;S0+=A: next MP weapon
SLT	AT,S1,T9	;TRUE if count < item#
BNEL	AT,R0,7F188DD4	;branch if true
LHU	A0,0004 (S0)
//7F188E04:	return
LW	RA,0024 (SP)
OR	V0,S2,R0
LW	S2,001C (SP)
LW	S0,0014 (SP)
LW	S1,0018 (SP)
LW	S3,0020 (SP)
JR	RA
ADDIU	SP,SP,0028


pull weapon from set
7F188E24:		V0=p->entry for MP item A0
	accepts: A0=MP set item #
ADDIU	A2,A0,0001	;A2=A0+1: item count
ADDIU	SP,SP,FFF0
OR	V0,A2,R0	;V0=A2: count of valid items
BLEZ	A2,7F188EAC	;return if invalid
OR	A1,R0,R0	;A1=0: count in set
LUI	T0,8008
LUI	A0,800B
ADDIU	A0,A0,CB88	;A0=800ABC88: MP settings; +18 to weapon set
ADDIU	T0,T0,7268	;T0=80087268: start of mp item list
ADDIU	T1,R0,000A	;T1=A: offset between each item entry
ADDIU	A3,R0,005C	;A3=5C: MP disabled
//7F188E50:
ADDU	T6,A0,A1	;T6=weapon set+offset
LBU	V1,0018 (T6)	;V1=MP item #
MULTU	V1,T1
MFLO	T7
ADDU	T8,T0,T7	;T8=start of item list + offset to entry
LBU	T9,0000 (T8)	;T9=item#
BEQ	A3,T9,7F188E74	;branch if item# is MP disabled
NOP
ADDIU	V0,V0,FFFF	;V0--	count--
//7F188E74:
BLEZ	V0,7F188EA0	;branch if invalid count
NOP
ADDIU	A1,A1,0001	;A1++	count in set
SLTI	AT,A1,0006	;TRUE if count < 6 (max # in set)
BNEZ	AT,7F188EA0	;branch if overrun
NOP
BNE	A2,V0,7F188E9C	;branch if count in set != count
OR	A1,R0,R0	;count=0
OR	V1,R0,R0	;V1=0	MP item#
OR	V0,R0,R0	;V0=0	count
OR	A2,V0,R0	;A2=count
//7F188EA0:
BGTZL	V0,7F188E54	;loop if count invalid
ADDU	T6,A0,A1
SB	V1,0003 (SP)	;SP+3= item#
//7F188EAC:	return
LBU	V1,0003 (SP)	;V1= item#
ADDIU	T1,R0,000A	;T1=A: size of entries
LUI	T0,8008
MULTU	V1,T1
ADDIU	T0,T0,7268	;T0=80087268: start of mp item list
ADDIU	SP,SP,0010
MFLO	T2
ADDU	V0,V0,T2	;V0=p->entry for item V1
JR	RA
NOP


called by subroutine 7F00D820:
7F00D820:		??? - part of MP weapon expansion
ADDIU	A0,A1,FF10
SW	A0,0018 (SP)
JAL	7F188E24	;V0=p->item entry
SW	A2,0030 (SP)	;SP+30=A2: p->object
LW	A0,0018 (SP)
LUI	AT,800A
LW	A2,0030 (SP)
SW	A0,CC30 (AT)	;A0=8009CC30: 
LBU	T7,0000 (V0)	;T7=item type
ADDIU	AT,R0,005B	;AT=0x5B
ADDIU	T2,R0,00F4	;T2=00F4: model for shield
SB	T7,005C (A2)	;object+5C= item type
LH	T8,0006 (V0)	;T8=model#
ADDIU	T3,R0,0015	;T3=0x15
OR	A0,A2,R0	;A0=A2: p->object
SH	T8,0004 (A2)	;object+4= model#
LH	T9,0008 (V0)	;T9=scale modifier
SH	T9,0000 (A2)	;object+0= scale
LBU	V1,0005 (V0)	;V1=flags
LBU	T1,0000 (V0)	;T1=item type
SRL	T0,V1,0x7	;T0=1 if weapon present
BNE	T1,AT,7F00D8CC	;branch if not body armor
OR	V1,T0,R0	;V1=T0: 1 if weapon present
//7F00D87C: body armor
LW	T4,0008 (A2)	;T4=bitflag field 1
LUI	AT,3F80
MTC1	AT,F0
LUI	AT,0102
LW	T6,000C (A2)	;T6=bitflag field 2
OR	T5,T4,AT	;T5=01020000 | bitflags1
LUI	AT,0020
ORI	AT,AT,4000
OR	T7,T6,AT	;T7=00204000 | bitflags2
SH	T2,0004 (A2)	;object+4= model for shield
SB	T3,0003 (A2)	;object type= 15: body armor
SW	T5,0008 (A2)	;object+8= bitflags1
SW	T7,000C (A2)	;object+C= bitflags2
SWC1	F0,005C (A2)	;object+5C= 1.0: max shield quality
SWC1	F0,0060 (A2)	;object+60= 1.0: cur shield quality
SW	A2,0030 (SP)	;SP+30= p->object
JAL	7F00CEE4
LW	A1,0034 (SP)
//7F000D8C4:
LW	A2,0030 (SP)	;A2=p->object
OR	V1,R0,R0	;V1=0
//7F00D8CC:	normal items...
LBU	A1,005C (A2)	;A1= item type
BEQL	A1,R0,7F00D8F8	;quit if zero
LW	RA,0014 (SP)
BEQ	V1,R0,7F00D8F4	;branch if shield found
OR	A0,A1,R0	;A0=A1: item type
JAL	7F011560
SW	A2,0030 (SP)	;SP+30=p->object
LW	A0,0030 (SP)	;A0=p->object
JAL	7F00CEE4
LW	A1,0034 (SP)	;A1=
//7F00D8F4:
LW	RA,0014 (SP)
ADDIU	SP,SP,0030
JR	RA
NOP


pulls ammo types:
//7F00FCE8:
