7F0CBFB0	100AE0	load and prepare global image bank 
ADDIU	SP,SP,FFD8
LUI	T6,0200
LUI	T7,0200
SW	S0,0014 (SP)
ADDIU	T7,T7,0000	;T7=02000000: base v.address
ADDIU	T6,T6,1400	;T6=02001400: final v.address
SW	RA,0024 (SP)
SUBU	S0,T6,T7	;S0=1400: size of block
SW	S3,0020 (SP)
SW	S2,001C (SP)
SW	S1,0018 (SP)
ADDIU	A0,S0,1000	;A0=2400: size of block + 0x1000 command doohick
JAL	70009720	;V0=p->A0 bytes allocated in bank A1
ADDIU	A1,R0,0004	;A1= bank 4
//7F0CBFE8:	load data and set pointers
LUI	S1,8009
ADDIU	S1,S1,D0B4	;S1=8008D0B4: 
ADDIU	T9,V0,0FFF	;T9=801649E0-FFF: 801659DF - actual end of block?
ADDIU	AT,R0,F000
SW	V0,0000 (S1)	;801649E0 -> 8008D0B4
AND	A0,T9,AT	;A0=801659DF & FFFFF000: 80165000
LUI	A1,002A
SW	A0,0000 (S1)	;8008D0B4= p->explosion DLs
ADDIU	A1,A1,D160	;A1=0x29D160: ROM address of global image table
JAL	70005C1C	;loads A2 bytes from ROM address A1 to A0
OR	A2,S0,R0	;A2=S0: size
LW	T1,0000 (S1)
LUI	AT,FE00
LUI	S0,8009
ADDU	V0,T1,AT
LUI	T3,0200
ADDIU	S0,S0,D0B0	;S0=8008D0B0
ADDIU	T3,T3,0AC8
SW	V0,0000 (S0)	;V0->8008D0B0: conversion value for global bank -> rdram address
ADDU	T4,V0,T3
LUI	AT,8009
LUI	T5,0200
SW	T4,D0B8 (AT)	;8008D0B8= conversion+02000AC8: default impact image
ADDIU	T5,T5,0AD4
ADDU	T6,V0,T5
LUI	AT,8009
SW	T6,D0BC (AT)	;8008D0BC= conversion+02000AD4: impact images
LUI	T7,0200
LUI	T9,0200
LUI	S2,8009
LUI	S3,8009
ADDIU	T7,T7,0BC4
ADDIU	T9,T9,0C0C
LUI	T1,0200
ADDIU	S3,S3,D0C4
ADDIU	S2,S2,D0C0
ADDU	T8,V0,T7
ADDU	T0,V0,T9
ADDIU	T1,T1,0C48
SW	T8,0000 (S2)	;8008D0C0= conversion+02000BC4: explosions and smoke
SW	T0,0000 (S3)	;8008D0C4= conversion+02000C0C: scattered explosions
ADDU	T2,V0,T1
LUI	AT,8009
LUI	T3,0200
SW	T2,D0C8 (AT)	;8008D0C8= conversion+02000C48: flare 1
ADDIU	T3,T3,0C54
ADDU	T4,V0,T3
LUI	AT,8009
LUI	T5,0200
SW	T4,D0CC (AT)	;8008D0CC= conversion+02000C54: flare 2
ADDIU	T5,T5,0C60
ADDU	T6,V0,T5
LUI	AT,8009
LUI	T7,0200
SW	T6,D0D0 (AT)	;8008D0D0= conversion+02000C60: flare 3
ADDIU	T7,T7,0C6C
ADDU	T8,V0,T7
LUI	AT,8009
LUI	T9,0200
SW	T8,D0D4 (AT)	;8008D0D4= conversion+02000C6C: flare 4
ADDIU	T9,T9,0C78
ADDU	T0,V0,T9
LUI	AT,8009
LUI	T1,0200
SW	T0,D0D8 (AT)	;8008D0D8= conversion+02000C78: flare 5
ADDIU	T1,T1,0C84
ADDU	T2,V0,T1
LUI	AT,8009
LUI	T3,0200
SW	T2,D0DC (AT)	;8008D0DC= conversion+02000C84: 9mm ammo counter
ADDIU	T3,T3,0C90
ADDU	T4,V0,T3
LUI	AT,8009
LUI	T5,0200
SW	T4,D0E0 (AT)	;8008D0E0= conversion+02000C90: rifle ammo counter
ADDIU	T5,T5,0C9C
ADDU	T6,V0,T5
LUI	AT,8009
LUI	T7,0200
SW	T6,D0E4 (AT)	;8008D0E4= conversion+02000C9C: shotgun shell ammo counter
ADDIU	T7,T7,0CA8
ADDU	T8,V0,T7
LUI	AT,8009
LUI	T9,0200
SW	T8,D0E8 (AT)	;8008D0E8= conversion+02000CA8: knife ammo counter
ADDIU	T9,T9,0CB4
ADDU	T0,V0,T9
LUI	AT,8009
LUI	T1,0200
SW	T0,D0EC (AT)	;8008D0EC= conversion+02000CB4: grenade launcher ammo counter
ADDIU	T1,T1,0CC0
ADDU	T2,V0,T1
LUI	AT,8009
LUI	T3,0200
SW	T2,D0F0 (AT)	;8008D0F0= conversion+02000CC0: rocket ammo counter
ADDIU	T3,T3,0CCC
ADDU	T4,V0,T3
LUI	AT,8009
LUI	T5,0200
SW	T4,D0F4 (AT)	;8008D0F4= conversion+02000CCC: generic mine ammo counter
ADDIU	T5,T5,0CD8
ADDU	T6,V0,T5
LUI	AT,8009
LUI	T7,0200
SW	T6,D0F8 (AT)	;8008D0F8= conversion+02000CD8: grenade ammo counter
ADDIU	T7,T7,0CE4
ADDU	T8,V0,T7
LUI	AT,8009
LUI	T9,0200
SW	T8,D0FC (AT)	;8008D0FC= conversion+02000CE4: magnum ammo counter
ADDIU	T9,T9,0CF0
ADDU	T0,V0,T9
LUI	AT,8009
LUI	T1,0200
SW	T0,D100 (AT)	;8008D100= conversion+02000CF0: golden gun ammo counter
ADDIU	T1,T1,0CFC
ADDU	T2,V0,T1
LUI	AT,8009
LUI	T3,0200
SW	T2,D104 (AT)	;8008D104= conversion+02000CFC: remote mine ammo counter
ADDIU	T3,T3,0D08
ADDU	T4,V0,T3
LUI	AT,8009
LUI	T5,0200
SW	T4,D108 (AT)	;8008D108= conversion+02000D08: timed mine ammo counter
ADDIU	T5,T5,0D14
ADDU	T6,V0,T5
LUI	AT,8009
LUI	T7,0200
SW	T6,D10C (AT)	;8008D10C= conversion+02000D14: proximity mine ammo counter
ADDIU	T7,T7,0D20
ADDU	T8,V0,T7
LUI	AT,8009
LUI	T9,0200
SW	T8,D110 (AT)	;8008D110= conversion+02000D20: tank ammo counter
ADDIU	T9,T9,0D2C
ADDU	T0,V0,T9
LUI	AT,8009
LUI	T1,0200
SW	T0,D114 (AT)	;8008D114= conversion+02000D2C: crosshair
ADDIU	T1,T1,0D38
ADDU	T2,V0,T1
LUI	AT,8009
LUI	T3,0200
SW	T2,D118 (AT)	;8008D118= conversion+02000D38: beta precision crosshair
ADDIU	T3,T3,0D44
ADDU	T4,V0,T3
LUI	AT,8009
LUI	T5,0200
SW	T4,D11C (AT)	;8008D11C= conversion+02000D44: glass overlay
ADDIU	T5,T5,0D5C
ADDU	T6,V0,T5
LUI	AT,8009
LUI	T7,0200
SW	T6,D120 (AT)	;8008D120= conversion+02000D5C: monitor images
ADDIU	T7,T7,0FB4
ADDU	T8,V0,T7
LUI	AT,8009
LUI	T9,0200
SW	T8,D124 (AT)	;8008D124= conversion+02000FB4: sky and water
ADDIU	T9,T9,0FD8
ADDU	T0,V0,T9
LUI	AT,8009
LUI	T1,0200
SW	T0,D128 (AT)	;8008D128= conversion+02000FD8: main folder icons
ADDIU	T1,T1,1020
ADDU	T2,V0,T1
LUI	AT,8009
LUI	T3,0200
SW	T2,D12C (AT)	;8008D12C= conversion+02001020: MP radar
ADDIU	T3,T3,102C
ADDU	T4,V0,T3
LUI	AT,8009
LUI	T5,0200
SW	T4,D130 (AT)	;8008D130= conversion+0200102C: MP character select (4 each char)
ADDIU	T5,T5,132C
LUI	T7,0200
ADDU	T6,V0,T5
LUI	AT,8009
ADDIU	T7,T7,0000
SW	T6,D134 (AT)	;8008D134= conversion+0200132C: MP stage select images
//7F0CC2BC:	convert texture offsets in display lists to pointers
ADDU	A0,V0,T7	;A0=conversion+02000000: p->DL
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
LW	T8,0000 (S0)	;T8=8008D0B0: conversion value
LUI	T9,0200
ADDIU	T9,T9,0078
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T8,T9	;A0= conversion+02000078: 
LW	T0,0000 (S0)	;T0=8008D0B0: conversion value
LUI	T1,0200
ADDIU	T1,T1,0120
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T0,T1	;A0= conversion+02000120: 
LW	T2,0000 (S0)	;T2=8008D0B0: conversion value
LUI	T3,0200
ADDIU	T3,T3,01C8
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T2,T3	;A0= conversion+020001C8: 
LW	T4,0000 (S0)	;T4=8008D0B0: conversion value
LUI	T5,0200
ADDIU	T5,T5,0270
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T4,T5	;A0= conversion+02000270: 
LW	T6,0000 (S0)	;T6=8008D0B0: conversion value
LUI	T7,0200
ADDIU	T7,T7,0318
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T6,T7	;A0= conversion+02000318: 
LW	T8,0000 (S0)	;T8=8008D0B0: conversion value
LUI	T9,0200
ADDIU	T9,T9,03C0
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T8,T9	;A0= conversion+020003C0: 
LW	T0,0000 (S0)	;T0=8008D0B0: conversion value
LUI	T1,0200
ADDIU	T1,T1,0468
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T0,T1	;A0= conversion+02000468: 
LW	T2,0000 (S0)	;T2=8008D0B0: conversion value
LUI	T3,0200
ADDIU	T3,T3,0510
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T2,T3	;A0= conversion+02000510: 
LW	T4,0000 (S0)	;T4=8008D0B0: conversion value
LUI	T5,0200
ADDIU	T5,T5,05B8
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T4,T5	;A0= conversion+020005B8: 
LW	T6,0000 (S0)	;T6=8008D0B0: conversion value
LUI	T7,0200
ADDIU	T7,T7,0660
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T6,T7	;A0= conversion+02000660: 
LW	T8,0000 (S0)	;T8=8008D0B0: conversion value
LUI	T9,0200
ADDIU	T9,T9,0708
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T8,T9	;A0= conversion+02000708: 
LW	T0,0000 (S0)	;T0=8008D0B0: conversion value
LUI	T1,0200
ADDIU	T1,T1,07B0
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T0,T1	;A0= conversion+020007B0: 
LW	T2,0000 (S0)	;T2=8008D0B0: conversion value
LUI	T3,0200
ADDIU	T3,T3,0858
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T2,T3	;A0= conversion+02000858: 
LW	T4,0000 (S0)	;T4=8008D0B0: conversion value
LUI	T5,0200
ADDIU	T5,T5,0900
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T4,T5	;A0= conversion+02000900: 
LW	T6,0000 (S0)	;T6=8008D0B0: conversion value
LUI	T7,0200
ADDIU	T7,T7,09A8
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T6,T7	;A0= conversion+020009A8: 
LW	T8,0000 (S0)	;T8=8008D0B0: conversion value
LUI	T9,0200
ADDIU	T9,T9,0A50
OR	A1,R0,R0	;A1=NULL (default buffer 8008C720)
JAL	7F0CBB74	;detects and handles rdp_settextureimage ABCD codes in microcode
ADDU	A0,T8,T9	;A0= conversion+02000A50: 
//7F0CC448:	load generic impact image
LUI	A0,8009
LW	A0,D0B8 (A0)	;A0=8008D0B8: p->generic impact image
JAL	7F0CBC18	;load image to buffer A1 using declaration at A0
OR	A1,R0,R0	;A1=NULL (buffer=8008C720)
OR	S0,R0,R0
//7F0CC45C:	load explosions & smoke images
LW	T0,0000 (S2)	;T0=conversion+02000BC4: explosions and smoke
OR	A1,R0,R0	;A1=NULL (buffer=8008C720)
JAL	7F0CBC18	;load image to buffer A1 using declaration at A0
ADDU	A0,S0,T0	;A0= block+offset: p->image declaration
ADDIU	S0,S0,000C	;S0+=C	offset to next entry
SLTI	AT,S0,0048
BNEL	AT,R0,7F0CC460	;loop for six entries
LW	T0,0000 (S2)
OR	S0,R0,R0
ADDIU	S1,R0,003C
//7F0CC484:	load scattered explosion images
LW	T1,0000 (S3)
OR	A1,R0,R0	;A1=NULL (buffer=8008C720)
JAL	7F0CBC18	;load image to buffer A1 using declaration at A0
ADDU	A0,S0,T1	;A0= block+offset: p->image declaration
ADDIU	S0,S0,000C	;S0+=C	offset to next entry
BNEL	S0,S1,7F0CC488	;loop for five entries
LW	T1,0000 (S3)
//7F0CC4A0:	return
LW	RA,0024 (SP)
LW	S0,0014 (SP)
LW	S1,0018 (SP)
LW	S2,001C (SP)
LW	S3,0020 (SP)
JR	RA
ADDIU	SP,SP,0028

+_+

7F0CBB74	1006A4	detects and handles rdp_settextureimage ABCD codes in microcode
	accepts: A0=p->display list, A1=p->buffer for image (NULL defaults to 8008C720)
ADDIU	SP,SP,FFD0
SW	RA,002C (SP)
SW	S5,0028 (SP)
SW	S4,0024 (SP)
SW	S3,0020 (SP)
SW	S2,001C (SP)
SW	S1,0018 (SP)
SW	S0,0014 (SP)
LBU	T6,0000 (A0)	;type of microcode command
ADDIU	S2,R0,00B8
OR	S1,A1,R0	;S1=A1: p->buffer
BEQ	S2,T6,7F0CBBF4	;branch if rsp_enddl command
OR	S0,A0,R0	;S0=A0: p->microcode commands
LBU	V0,0000 (A0)	;V0=command type
ADDIU	S5,R0,00CD
ADDIU	S4,R0,00AB
ADDIU	S3,R0,00FD
//7F0CBBB8:
BNEL	S3,V0,7F0CBBE8	;branch if not rdp_settextureimage command
LBU	V0,0008 (S0)
LBU	T7,0004 (S0)	;T7=segment
BNEL	S4,T7,7F0CBBE8	;branch if not segment AB
LBU	V0,0008 (S0)
LBU	T8,0005 (S0)	;T8=code after segment...
ADDIU	A0,S0,0004	;A0=S0+4: image offset/address
BNEL	S5,T8,7F0CBBE8	;branch if not code ABCD
LBU	V0,0008 (S0)
JAL	7F0CBC18	;load image to buffer A1 using declaration at A0
OR	A1,S1,R0	;A1=S1: p->buffer
//7F0CBBE4:
LBU	V0,0008 (S0)	;V0=next command type
ADDIU	S0,S0,0008
BNE	S2,V0,7F0CBBB8	;loop until rsp_enddl command
NOP
//7F0CBBF4:
LW	RA,002C (SP)
LW	S0,0014 (SP)
LW	S1,0018 (SP)
LW	S2,001C (SP)
LW	S3,0020 (SP)
LW	S4,0024 (SP)
LW	S5,0028 (SP)
JR	RA
ADDIU	SP,SP,0030
