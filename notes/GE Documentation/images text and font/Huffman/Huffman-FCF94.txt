7F0C8464 	0xFCF94	compression type 9
LW	S4,0080 (SP)	;S4=table (nibble#3)
ADDIU	A0,R0,0003
SLL	T7,S4,0x2
JAL	7F0CBF2C	;grab next 3 bits from data
OR	S4,T7,R0	;S4=table offset
//7F0C8478 	0xFCFA8
LUI	T4,8005
ADDIU	T4,T4,9178	;T4=80049178: t#1
ADDU	S3,S4,T4
LW	T9,0000 (S3)	;T9=t#1val
OR	S0,V0,R0	;S0=V0: 3bits
OR	A0,S8,R0	;A0=S8: p->samples
MULTU	T9,S6
MFLO	T8		;T8=t#1val * width
NOP
NOP
MULTU	T8,S7
MFLO	A1		;A1=t#1val * width * height
JAL	7F0C96BC	;get samples
NOP
//7F0C84B0 	0xFCFE0
LW	T5,0000 (S3)	;T5=t#1val
LUI	T6,8005
ADDU	T6,T6,S4
MULTU	T5,S7
LW	T6,91E0 (T6)	;T6=800491E0+offset: t#3val
OR	A0,S8,R0	;A0=S8: p->samples
OR	A1,S6,R0	;A1=width
OR	A3,S0,R0	;A3=3bits
SW	T6,0010 (SP)	;SP+10=t#3val
MFLO	A2		;A2=T3#val*height
JAL	7F0CB7E0	;image-specific doohick
NOP
//7F0C84E0 	0xFD010
LUI	T3,8005
ADDU	T3,T3,S4
LW	T3,91AC (T3)	;T3=800491AC+offset: t#2val
SLL	T7,S5,0x2
SUBU	T7,T7,S5	;T7=width*height*3
BEQ	T3,R0,0xFD034	;if not an alpha-bit type, branch
ADDU	A0,S8,T7	;A0=p->samples + width*height*3
JAL	7F0C9A48	;fetch alpha yo
OR	A1,S5,R0	;A1=width*height
//7F0C8504 	0xFD034
LW	T4,30AC (SP)	;T4=final target
LW	T9,0088 (SP)
LW	T8,0080 (SP)	;nibble3
OR	A0,S8,R0	;A0=p->samples
ADDU	S0,T4,T9	;S0=final target + ?
OR	A3,S0,R0	;A3=S0
OR	A1,S6,R0	;A1=width
OR	A2,S7,R0	;A2=height
JAL	7F0C9DA4	;generate and link final image
SW	T8,0010 (SP)	;SP+10=nibble3
BEQ	R0,R0,0xFD08C
OR	S1,V0,R0	;S1=V0: final size
