7F0C0268	F4D98	iterate ramrom entries until end, and handle camera out
ADDIU	SP,SP,FFE8
SW	RA,0014 (SP)
LUI	A0,8009
LUI	A1,8009
LW	A1,C5F4 (A1)	;A1=8008C5F4: p->hardware
ADDIU	A0,A0,C468	;A0=8008C468: 
JAL	70005C44	;align and read A2 bytes of data from hardware A1 to A0
ADDIU	A2,R0,0004	;A2=4
LUI	A1,8005
ADDIU	A1,A1,846C	;A1=8004846C
SW	V0,0000 (A1)	;V0->8004846C: save pointer to demo command entry in rdram
LBU	A3,0001 (V0)	;A3=entry+1: #commands
OR	V1,V0,R0	;V1=V0: p->entry
LUI	T6,8005
BLEZ	A3,7F0C02F0	;branch if not positive
OR	A0,A3,R0	;A0=A3: #commands
//7F0C02A8:
LW	T6,8468 (T6)	;T6=80048468: p->demo
LUI	A1,8009
LW	A1,C5F4 (A1)	;A1=8008C5F4: p->demo hardware address
LW	T7,0018 (T6)	;T7=demo+18: #controllers (command size)
LUI	A0,8009
ADDIU	A0,A0,C48E	;A0=8008C48E
SLL	T8,T7,0x2	;T8=command size * 4: #words per command
MULTU	T8,A3
ADDIU	A1,A1,0004	;A1+=4: p->next entry
MFLO	A2		;A2=size of command block
JAL	70005C44	;align and read A2 bytes of data from hardware A1 to A0
NOP
LUI	V1,8005
LW	V1,846C (V1)	;V1=8004846C: demo entry
LUI	AT,8005
SW	V0,8470 (AT)	;V0->80048470: update p->heading
LBU	A3,0001 (V1)	;A3=entry+1: #commands
OR	A0,A3,R0	;A0=A3: #commands
//7F0C02F0:	detect if still more demo to run
BNE	A0,R0,7F0C0318	;branch if commands present
LUI	T1,8005
LBU	T9,0000 (V1)	;T9=entry+0: clock span
BNE	T9,R0,7F0C0318	;branch if clock present
NOP
JAL	7F0C08C8	;set camera mode A
NOP
LUI	V1,8005
BEQ	R0,R0,7F0C034C
LW	V1,846C (V1)	;V1=8004846C: p->demo entry
//7F0C0318:	offset hardware to next command
LW	T1,8468 (T1)	;T1=80048468: p->demo
LUI	T0,8009
LW	T0,C5F4 (T0)	;T0=8008C5F4: p->hardware
LW	T2,0018 (T1)	;T2=demo+18: #controllers (command size)
LUI	AT,8009
SLL	T3,T2,0x2	;T3=T2*4: size of commands in words
MULTU	T3,A3
MFLO	T4		;T4=total size of command
ADDIU	T5,T4,0005
ORI	T6,T5,0001
XORI	T7,T6,0001	;T7=size+header, to nearest short
ADDU	T8,T0,T7	;T8=hardware+size: p->next command
SW	T8,C5F4 (AT)	;update p->hardware
//7F0C034C:	test if within 1 second of demo end
JAL	7F0C0AA0
LBU	A0,0000 (V1)	;A0=entry+0: clock
LUI	T9,8005
LW	T9,8468 (T9)	;T9=80048468: p->demo
LUI	V0,8005
LW	V0,837C (V0)	;V0=8004837C: cur.timer
LW	V1,007C (T9)	;V1=demo+7C: total time
LUI	T1,8005
ADDIU	V1,V1,FFC4	;V1-=0x3C	V1-=second
SLT	AT,V0,V1	;TRUE if not within 1 second of total time
BNEL	AT,R0,7F0C039C	;return if still running strong
LW	RA,0014 (SP)
//7F0C037C:	test if ending next loop
LW	T1,8374 (T1)	;T1=80048374: TRUE if running
SUBU	T2,V0,T1	;T2=time-clock
SLT	AT,T2,V1	;TRUE if not stopping next cycle
BEQL	AT,R0,7F0C039C	;return if still running strong
LW	RA,0014 (SP)
//7F0C0390:	if ending, switch cameras
JAL	7F0C08C8	;set camera mode A
NOP
//7F0C0398:	return
LW	RA,0014 (SP)
ADDIU	SP,SP,0018
JR	RA
NOP

+_+

7F0C08C8	F53F8	set to camera mode A if not already set
ADDIU	SP,SP,FFE8
SW	RA,0014 (SP)
JAL	7F07A528	;V0=current camera mode
NOP
ADDIU	AT,R0,000A
BEQL	V0,AT,7F0C08F0	;return if A
LW	RA,0014 (SP)
//7F0C08E4:
JAL	7F07A9B8	;use intro camera mode A0
ADDIU	A0,R0,000A	;A0=A: camera mode A: 
//7F0C08EC:	return
LW	RA,0014 (SP)
ADDIU	SP,SP,0018
JR	RA
NOP

7F0C0A70	F55A0	???
ADDIU	SP,SP,FFE8
SW	RA,0014 (SP)
JAL	7000D8E0
NOP
LW	RA,0014 (SP)
LUI	V1,8005
ADDIU	V1,V1,84B0	;V1=800484B0
SW	V0,0000 (V1)	;V0->800484B0: 
LUI	AT,8005
SW	V0,84AC (AT)	;V0->800484AC: 
JR	RA
ADDIU	SP,SP,0018
