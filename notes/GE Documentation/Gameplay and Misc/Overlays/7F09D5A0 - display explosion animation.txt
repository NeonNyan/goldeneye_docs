7F09D5A0		display explosion animation A0
	accepts: A0=p->, A1=p->DL, A2=???
ADDIU	SP,SP,FF70
SW	S0,001C (SP)
SW	RA,003C (SP)
SW	S7,0038 (SP)
SW	S6,0034 (SP)
SW	S5,0030 (SP)
SW	S4,002C (SP)
SW	S3,0028 (SP)
SW	S2,0024 (SP)
SW	S1,0020 (SP)
LBU	S1,002C (A0)
OR	S0,A0,R0	;S0=A0: 
LW	S5,0004 (A0)	;S5=A0+4: p->explody.buf
OR	S2,A2,R0	;S2=A2: 
OR	S4,A1,R0	;S4=A1: p->DL
JAL	7F0BCA14
OR	A0,S1,R0	;A0=S1: 
BNE	S2,R0,7F09D5F4
OR	S6,V0,R0
BEQ	R0,R0,7F09D800	;return
OR	V0,S4,R0	;V0=S4: p->DL
//7F09D5F4:
OR	A0,S0,R0	;A0=S0: 
JAL	7F054A64
ADDIU	A1,SP,0070	;A1=SP+70: p->buffer
BLEZ	V0,7F09D62C
NOP
LWC1	F4,007C (SP)
OR	A0,S4,R0	;A0=S4: p->DL
LW	A1,0070 (SP)
LW	A2,0074 (SP)
LW	A3,0078 (SP)
JAL	7F0B4FF4
SWC1	F4,0010 (SP)
BEQ	R0,R0,7F09D638
OR	S4,V0,R0	;S4=V0: p->DL
//7F09D62C:
JAL	7F0B4FB4
OR	A0,S4,R0	;A0=S4: p->DL
OR	S4,V0,R0	;S4=V0: p->DL
//7F09D638:
OR	V0,S4,R0	;V0=S4: p->DL
LUI	T7,0001
ORI	T7,T7,3000	;T7=00013000: fog, cull front, cull back
ADDIU	S4,S4,0008	;S4+=8: p->DL
LUI	T6,B600
LUI	T8,0103
SW	T6,0000 (V0)	;DL+0= cleargeometrymode.u
SW	T7,0004 (V0)	;DL+4= cleargeometrymode.l: fog, cull back, cull front
ORI	T8,T8,0040	;T8=01030040
OR	S0,S4,R0	;S0=S4: p->DL
SW	T8,0000 (S0)	;DL+0= matrix.u: projection, size=0x40?
JAL	7F078394	;V0= BONDdata+10E0
ADDIU	S4,S4,0008	;S4+=8: next DL
JAL	7000E8B0	;V0= offset corresponding to address A0
OR	A0,V0,R0
SW	V0,0004 (S0)	;DL+4= matrix.l: address
OR	A0,S4,R0	;A0=S4: p->DL
JAL	7F0BC9C4
OR	A1,S1,R0
LUI	T9,BC00
ORI	T9,T9,0806
SW	T9,0000 (V0)	;DL+0= moveword.u: matrix, 
LUI	A0,8009
LW	A0,D0B4 (A0)	;A0=8008D0B4: p->global image bank
OR	S0,V0,R0	;S0=V0: p->DL
JAL	7000E8B0	;V0= offset corresponding to address A0
ADDIU	S4,V0,0008	;S4=V0+8: p->next DL
LUI	S7,8004
LUI	S3,8004
SW	V0,0004 (S0)	;DL+4= moveword.l: address
ADDIU	S3,S3,0284	;S3=80040284: explody.data
ADDIU	S7,S7,07FC	;S7=800407FC: explosion frame display list offsets
ADDIU	S2,R0,000E	;S2=0xE
//7F09D6BC:	
OR	V0,S4,R0	;V0=S4: p->DL
LUI	T0,0600
SW	T0,0000 (V0)	;DL+0= displaylist.u: push DL
LW	T1,0000 (S7)
ADDIU	S4,S4,0008	;S4+=4: next DL op
OR	S1,R0,R0	;S1=0	count
OR	S0,S5,R0	;S0=S5: p->explody.buf
SW	T1,0004 (V0)	;DL+4= displaylist.l: 
//7F09D6DC:	display visible frames
LH	V0,001C (S0)	;V0=explody.buf+1C: frame 1 state
BLEZ	V0,7F09D72C	;skip if frame not active
ADDIU	T2,V0,FFFF	;T2=state-1
MTC1	T2,F6
LB	T3,03CC (S5)	;T3=explody.buf+3CC: explody.type
ADDIU	A0,S0,0008
CVT.S.W	F8,F6	;F8=(float) state-1
SLL	T4,T3,0x6	;T4=type*0x40: offset to entry
ADDU	T5,S3,T4	;T5=explody.data+offset
LWC1	F10,0020 (T5)	;F10=explody.data+20: animation speed
OR	A1,S4,R0	;A1=S4: p->DL
DIV.S	F16,F8,F10	;F16=(state-1)/speed
TRUNC.W.S	F18,F16
MFC1	T7,F18		;T7=(state-1)/speed
NOP
BNEL	S2,T7,7F09D730	;branch if not 0xE
ADDIU	S1,S1,0018
JAL	7F09D82C
OR	A2,S6,R0	;A2=S6: 
OR	S4,V0,R0
//7F09D72C:	loop for each frame
ADDIU	S1,S1,0018	;S1+=18: frame++
SLTI	AT,S1,03C0	;TRUE if count<0x3C0
BNE	AT,R0,7F09D6DC	;loop for each frame
ADDIU	S0,S0,0018	;S0+=18: p->next explody.buf frame
ADDIU	S2,S2,FFFF	;S2--
BGEZ	S2,7F09D6BC	;run for each image
ADDIU	S7,S7,FFFC	;S7-=4: o->next frame DL
//7F09D748:
LUI	T8,0103
ORI	T8,T8,0040	;T8=01030040
OR	S2,S4,R0
SW	T8,0000 (S2)	;DL+0= matrix.u: projection, size?
JAL	7F078374	;V0= BONDdata+10D8
ADDIU	S4,S4,0008	;S4+=8: next DL
JAL	7000E8B0	;V0= offset corresponding to address A0
OR	A0,V0,R0
SW	V0,0004 (S2)	;DL+4= matrix.l: address
LB	T9,03CC (S5)	;T9=explody.buf+3CC: explody.type
LUI	AT,4170
MTC1	AT,F6
SLL	T0,T9,0x6	;T0=type * 0x40: offset
ADDU	T1,S3,T0	;T1=explody.data+offset: p->explody.data for type
LWC1	F4,0020 (T1)	;F4=explody.data+20: speed
ADDIU	V0,R0,03C0	;V0=0x3C0: size of frame data
OR	S1,R0,R0	;S1=0	count
MUL.S	F8,F4,F6	;F8=speed * 15.0
OR	S0,S5,R0	;S0=S5: p->explody.buf
TRUNC.W.S	F10,F8
MFC1	V1,F10		;V1=speed * 15
NOP
//7F09D7A0:	test if next four frames are disappearing
LH	T3,001C (S0)	;T3=explody.buf+1C: playing flag
ADDIU	S1,S1,0060	;S1+=60: +4 frames
SLT	AT,V1,T3	;TRUE if speed*15 < flag
BEQL	AT,R0,7F09D7BC	;branch if not displayed
LH	T4,0034 (S0)
SH	R0,001C (S0)	;0->display flag
//7F09D7B8:
LH	T4,0034 (S0)	;T4=explody.buf+34: next playing flag
SLT	AT,V1,T4	;TRUE if speed*15 < flag
BEQL	AT,R0,7F09D7D0	;branch if not displayed
LH	T5,004C (S0)
SH	R0,0034 (S0)	;0->display flag
//7F09D7CC:
LH	T5,004C (S0)	;T5=explody.buf+4C: next playing flag
SLT	AT,V1,T5	;TRUE if speed*15 < flag
BEQL	AT,R0,7F09D7E4	;branch if not displayed
LH	T6,0064 (S0)
SH	R0,004C (S0)	;0->display flag
//7F09D7E0:
LH	T6,0064 (S0)	;T6=explody.buf+64: next playing flag
SLT	AT,V1,T6	;TRUE if speed*15 < flag
BEQ	AT,R0,7F09D7F4	;branch if not displayed
NOP
SH	R0,0064 (S0)
//7F09D7F4:
BNE	S1,V0,7F09D7A0	;loop for the whole set
ADDIU	S0,S0,0060	;S0+=60: p->next four explody.frame entries
OR	V0,S4,R0	;V0=S4: p->DL
//7F09D800:	return
LW	RA,003C (SP)
LW	S0,001C (SP)
LW	S1,0020 (SP)
LW	S2,0024 (SP)
LW	S3,0028 (SP)
LW	S4,002C (SP)
LW	S5,0030 (SP)
LW	S6,0034 (SP)
LW	S7,0038 (SP)
JR	RA
ADDIU	SP,SP,0090
