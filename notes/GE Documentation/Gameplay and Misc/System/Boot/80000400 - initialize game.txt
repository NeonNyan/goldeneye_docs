80000400	1000	inception point
LUI	T0,8006
LUI	T1,0003
ADDIU	T0,T0,D2E0	;T0=8005D2E0
ORI	T1,T1,1080	;T1=31080
//80000410:	initialize 31080 bytes at 8005D2E0
ADDI	T1,T1,FFF8
SW	R0,0000 (T0)
SW	R0,0004 (T0)
BNEZ	T1,80000410
ADDI	T0,T0,0008
//80000424:	set stack pointer and jump to 80000450
LUI	T2,8000
LUI	SP,803B
ADDIU	T2,T2,0450	;T2=80000450
JR	T2
ADDIU	SP,SP,B410	;SP=803AB410

80000450	1050	establish root TLB entry and proceed
ADDIU	V0,R0,0001
ADDIU	V1,R0,0000
ADDIU	A0,R0,0000
LUI	A1,7000
ADDIU	A2,R0,001F
ADDIU	A3,R0,0001
LUI	T0,007F
ORI	T0,T0,E000
MTC0	V0,Index
SRL	V1,V1,0xC
SLL	V1,V1,0x6
ADDU	V1,V1,A2	;V1=A2
MTC0	V1,EntryLo0
SRL	A0,A0,0xC
SLL	A0,A0,0x6
ADDU	A0,A0,A3	;A0=A3
MTC0	A0,EntryLo1
SRL	A0,A1,0xD
SLL	A0,A0,0xD	;A0=A1
MTC0	A0,EntryHi
MTC0	T0,PageMask
NOP
TLBWI
//800004AC:	jump to 70000510
LUI	T2,7000
ADDIU	T2,T2,0510	;T2=70000510
JR	T2
NOP

70000510	1110	decompress main compressed block, 
ADDIU	SP,SP,FFC0
SW	RA,0024 (SP)
SW	S1,0020 (SP)
JAL	700004BC	;V0=80020D90: target address for main compressed block (21990)
SW	S0,001C (SP)
JAL	700004C8	;V0=21990: ROM address of main compressed block
OR	S0,V0,R0	;S0=V0: 80020D90
JAL	700004D4	;V0=33590: ROM endpoint of main compressed block
SW	V0,0034 (SP)	;SP+34= main.pos
LW	T6,0034 (SP)
JAL	700004E0	;V0=33590: ROM address of 70200000 RareZip ASM [33590-34B30 ROM]
SUBU	S1,V0,T6	;S1=V0-T6: compressed size of main compressed block
JAL	700004EC	;V0=34B30: ROM endpoint of RareZip (address of 7F- TLB routines)
SW	V0,0028 (SP)	;SP+28= RareZip.pos
//70000548:
LW	T7,0028 (SP)
LUI	T2,7020		;T2=70200000: target vaddress for RareZip
OR	A1,S0,R0	;A1=S0: target address for main.bin
SUBU	T8,V0,T7	;T8=V0-T7: RareZip.sz = RareZip.end - RareZip.pos
ADDU	A0,S1,T8	;A0=S1+T8: main.cmp_sz + RareZip.sz
ADDIU	V1,A0,FFFF	;V1= total size - 1
BLTZ	V1,7000058C	;skip if nothing to copy
LUI	A2,8030		;A2=80300000: buffer for decompression tables
LUI	T9,7020
SUBU	A0,T9,S1	;A0=70200000 - main.cmp_sz: vaddr for main
ADDU	V0,S0,V1	;V0=S0+V1: target address + total size
//70000574:	loop to copy from source to virtual target instead of mapping...
LBU	T0,0000 (V0)
ADDU	T1,A0,V1
ADDIU	V1,V1,FFFF
ADDIU	V0,V0,FFFF
BGEZ	V1,70000574
SB	T0,0000 (T1)
//7000058C:	decompress main compressed block
JAL	700004F8	;redirect to 7020141C: decompress A0 to A1; A2=buffer
SUBU	A0,T2,S1	;A0=p->source: RareZip.vaddr - main.cmp_sz
//70000594:
LUI	T3,0003
LUI	T4,0000
ADDIU	T4,T4,1050	;T4=1050
ADDIU	T3,T3,3590	;T3=33590: ROM address of 70200000 RareZip ASM [33590-34B30 ROM]
LUI	AT,000F
ORI	AT,AT,FFB1	;AT=FFFB1
SUBU	V0,T3,T4	;V0=33590 - 1050: 32550
SLT	AT,V0,AT
BNEZ	AT,70000604	;branch if 32550 < FFFB1, which it always will be...
LUI	AT,FFF0
//700005BC:	on failure, presumes a 6103 CIC is present!?  Probably just alt address for uncompressed ROM structure.
ORI	AT,AT,0050	;AT= -FFFB0
LUI	A1,0010
LUI	A2,7010
ADDIU	A2,A2,0400	;A2=70100400
ADDIU	A1,A1,1000	;A1=101000
ADDU	A3,V0,AT	;A3= difference - FFFB0
JAL	7000CF90	;read (A0) A3 bytes from ROM A1 to A2
OR	A0,R0,R0	;A0=0 (read)
JAL	7000D070	;V0=PI status
NOP
ANDI	T5,V0,0001
BEQ	T5,V0,70000604	;branch if ready
NOP
//700005F0:	wait until PI ready
JAL	7000D070	;V0=PI status
NOP
ANDI	T6,V0,0001
BNEZ	T6,700005F0
NOP
//70000604:
JAL	7000D080
NOP
JAL	70001BB0
NOP
LUI	S0,8000
LUI	V0,7000
LUI	A0,8000
ADDIU	V0,V0,1B60
OR	V1,S0,R0
ORI	A0,A0,0080
//7000062C:
LW	T7,0000 (V0)
ADDIU	V1,V1,0010
ADDIU	V0,V0,0010
SW	T7,FFF0 (V1)
LW	T8,FFF4 (V0)
SW	T8,FFF4 (V1)
LW	T9,FFF8 (V0)
SW	T9,FFF8 (V1)
LW	T0,FFFC (V0)
BNE	V1,A0,7000062C
SW	T0,FFFC (V1)
//70000658:
JAL	7000D320
NOP
OR	A0,S0,R0
JAL	7000D350
ADDIU	A1,R0,4000
ADDIU	S0,R0,0002
ADDIU	S1,R0,0020
//70000674:
JAL	7000D3D0
OR	A0,S0,R0
ADDIU	S0,S0,0001
BNE	S0,S1,70000674
NOP
//70000688:
JAL	7000D410
NOP
JAL	7000D420
ORI	A0,V0,0E80
LUI	A0,803B
ADDIU	A0,A0,B950
JAL	700006F0
ORI	A1,R0,8000
//700006A8:
LUI	S0,8006
ADDIU	S0,S0,D640
LUI	A2,7000
ADDIU	T4,R0,000A
SW	T4,0014 (SP)
ADDIU	A2,A2,089C
OR	A0,S0,R0
ADDIU	A1,R0,0003
OR	A3,R0,R0
JAL	7000D430
SW	V0,0010 (SP)
JAL	7000D580
OR	A0,S0,R0
LW	RA,0024 (SP)
LW	S0,001C (SP)
LW	S1,0020 (SP)
JR	RA
ADDIU	SP,SP,0040

7000D080	DC80	
