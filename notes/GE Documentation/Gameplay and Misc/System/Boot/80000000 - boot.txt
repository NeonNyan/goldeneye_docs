80000000	4C0	Bootcode immediately following bootstrap, as opposed to BadVAddr handler
	this occurs just after the A4000040 - A40004C0 stuff
LUI	T3,B000
LW	T1,0008 (T3)	;T1=B0000008: p->boot address
LUI	T2,1FFF
ORI	T2,T2,FFFF
LUI	AT,A460
AND	T1,T1,T2	;T1=p->boot & 0x1FFFFFFF: remove address mask
SW	T1,0000 (AT)	;PI_RDRAM_ADDR = boot address (80000400)
//8000001C:
LUI	T0,A460
LW	T0,0010 (T0)	;T0=PI_STATUS
ANDI	T0,T0,0002
BNEL	T0,R0,80000020	;loop until ready
LUI	T0,A460
ADDIU	T0,R0,1000
ADD	T0,T0,T3	;T0=B0001000
AND	T0,T0,T2	;t0&=0x1FFFFFFF: remove address mask
LUI	AT,A460
SW	T0,0004 (AT)	;PI_CART_ADDR = 10001000: main memory region (70000400-70020D90)
LUI	T2,0010
ADDIU	T2,T2,FFFF	;T2=0xFFFFF: size=100000-1
LUI	AT,A460
SW	T2,000C (AT)	;PI_WR_LEN = 0xFFFFF
//80000054:
...	;no code present
//800000C4:
LUI	T3,A460
LW	T3,0010 (T3)	;T3=PI_STATUS
ANDI	T3,T3,0001
BNEZ	T3,80000054	;loop until transfer complete
NOP
//800000D8:
LUI	T3,B000
LW	A0,0008 (T3)	;A0=p->boot
OR	A1,S6,R0
LUI	AT,5D58
ORI	AT,AT,8B65
MULTU	A1,AT
ADDIU	SP,SP,FFE0
SW	RA,001C (SP)
SW	S0,0014 (SP)
LUI	RA,0010
OR	V1,R0,R0
OR	T0,R0,R0
OR	T1,A0,R0
ADDIU	T5,R0,0020
MFLO	V0
ADDIU	V0,V0,0001
OR	A3,V0,R0
OR	T2,V0,R0
OR	T3,V0,R0
OR	S0,V0,R0
OR	A2,V0,R0
OR	T4,V0,R0
//80000130:	calculate checksum
LW	V0,0000 (T1)
ADDU	V1,A3,V0
SLTU	AT,V1,A3
BEQ	AT,R0,80000148
OR	A1,V1,R0
ADDIU	T2,T2,0001
//80000148:
ANDI	V1,V0,001F
SUBU	T7,T5,V1
SRLV	T8,V0,T7
SLLV	T6,V0,V1
OR	A0,T6,T8
SLTU	AT,A2,V0
OR	A3,A1,R0
XOR	T3,T3,V0
BEQ	AT,R0,8000017C
ADDU	S0,S0,A0
XOR	T9,A3,V0
BEQ	R0,R0,80000180
XOR	A2,T9,A2
//8000017C:
XOR	A2,A2,A0
//80000180:
ADDIU	T0,T0,0004
XOR	T7,V0,S0
ADDIU	T1,T1,0004
BNE	T0,RA,80000130
ADDU	T4,T7,T4
XOR	T6,A3,T2
XOR	A3,T6,T3
XOR	T8,S0,A2
XOR	S0,T8,T4
LUI	T3,B000
LW	T0,0010 (T3)
BNE	A3,T0,800001C8
NOP
LW	T0,0014 (T3)
BNE	S0,T0,800001C8
NOP
BGEZAL	R0,800001D0	;branch if checksum okay
NOP
//800001C8:
BGEZAL	R0,800001C8
NOP
//800001D0:
LUI	T1,A408
LW	T1,0000 (T1)
LW	S0,0014 (SP)
LW	RA,001C (SP)
BEQ	T1,R0,800001FC
ADDIU	SP,SP,0020
ADDIU	T2,R0,0041
LUI	AT,A404
SW	T2,0010 (AT)
LUI	AT,A408
SW	R0,0000 (AT)
LUI	T3,00AA
ORI	T3,T3,AAAE
LUI	AT,A404
SW	T3,0010 (AT)
LUI	AT,A430
ADDIU	T0,R0,0555
SW	T0,000C (AT)
LUI	AT,A480
SW	R0,0018 (AT)
LUI	AT,A450
SW	R0,000C (AT)
LUI	AT,A430
ADDIU	T1,R0,0800
SW	T1,0000 (AT)
ADDIU	T1,R0,0002
LUI	AT,A460
LUI	T0,A000
ORI	T0,T0,0300
SW	T1,0010 (AT)
SW	S7,0014 (T0)
SW	S5,000C (T0)
SW	S3,0004 (T0)
BEQ	S3,R0,80000268
SW	S4,0000 (T0)
LUI	T1,A600
BEQ	R0,R0,80000270
ADDIU	T1,T1,0000
//80000268:
LUI	T1,B000
ADDIU	T1,T1,0000
SW	T1,0008 (T0)
LUI	T0,A400
ADDIU	T0,T0,0000
ADDI	T1,T0,1000
//80000280:
ADDIU	T0,T0,0004
BNE	T0,T1,80000280
SW	R0,FFFC (T0)
LUI	T0,A400
ADDIU	T0,T0,1000
ADDI	T1,T0,1000
//80000298:
ADDIU	T0,T0,0004
BNE	T0,T1,80000298
SW	R0,FFFC (T0)
LUI	T3,B000
LW	T1,0008 (T3)	;T1=p->boot addy
JR	T1		;jump to 80000400
NOP
//800002B4