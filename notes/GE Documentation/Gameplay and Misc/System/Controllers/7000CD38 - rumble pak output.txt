7000CD38	D938	generates rumble on/off commands for channel A2
	accepts: A0=p-> [80065350], A1=p->controller packet [800653F8+pl.*0x68], A2=controller#
ADDIU	SP,SP,FFA8
SW	S0,0020 (SP)
SW	RA,0024 (SP)
ADDIU	A3,R0,0080
OR	S0,A2,R0	;S0=A2: controller# (channel)
SW	A0,0004 (A1)	;A0->packet+4: p->???
SW	A2,0008 (A1)	;A2->packet+8: channel#
SW	R0,0000 (A1)	;0 ->packet+0: 
SB	A3,0065 (A1)	;80->packet+65: device type
ADDIU	V0,SP,0030	;V0=SP+30: start of buffer
ADDIU	V1,SP,0050	;A1=SP+50: end of buffer
//7000CD64:	fill buffer with 0x80's
ADDIU	V0,V0,0001	;V0++	buffer++
SLTU	AT,V0,V1
BNE	AT,R0,7000CD64
SB	A3,FFFF (V0)	;80->buffer
//7000CD74:
OR	A1,S0,R0	;A1=S0: channel#
ADDIU	A2,R0,0400	;A2=0x400: slot+0x8000 - device controller
ADDIU	A3,SP,0030	;A3=SP+30: p->data
SW	R0,0010 (SP)	;SP+10=0: 
JAL	70016100	;sends data A3 to controller slot A1 at address A2
SW	A0,0058 (SP)	;A0->SP+58: [80065350]
ADDIU	AT,R0,0002
BNE	V0,AT,7000CDB4	;branch if no problem
OR	V1,V0,R0	;V1=V0: error return...
LW	A0,0058 (SP)
OR	A1,S0,R0	;A1=S0: channel#
ADDIU	A2,R0,0400	;A2=0x400: device controller
ADDIU	A3,SP,0030	;A3=SP+30: p->data
JAL	70016100	;sends data A3 to controller slot A1 at address A2
SW	R0,0010 (SP)
//7000CDB0:	return if still invalid
OR	V1,V0,R0
BEQ	V0,R0,7000CDC4
LW	A0,0058 (SP)
BEQ	R0,R0,7000CE8C
OR	V0,V1,R0
//7000CDC4:
OR	A1,S0,R0	;A1=S0: channel#
ADDIU	A2,R0,0400	;A2=0x400: block#
JAL	700164B0	;read data from channel A1 at block A2 into buffer A3
ADDIU	A3,SP,0030	;A3=SP+30: p->data
BEQ	V0,R0,7000CDE4	;branch if no problem
LBU	T6,004F (SP)	;T6=last byte of data
BEQ	R0,R0,7000CE90
LW	RA,0024 (SP)
//7000CDE4:
ADDIU	AT,R0,0080
BEQ	T6,AT,7000CDF8	;branch if equals 0x80 (rumble paks always return 0x80)
LUI	A0,8006
BEQ	R0,R0,7000CE8C	;return 0xB: not a rumble pak
ADDIU	V0,R0,000B
//7000CDF8:
LUI	V1,8006
LUI	A1,8006
ADDIU	A1,A1,57C0	;A1=800657C0: end of stop.buffer
ADDIU	V1,V1,57A0	;V1=800657A0: start of stop.buffer
ADDIU	A0,A0,57C0	;A0=800657C0: start.buffer
ADDIU	V0,R0,0001
//7000CE10:	fill rumble buffers
ADDIU	V1,V1,0004	;V1+=4	next word in stop.buffer
SB	V0,0001 (A0)	;1->start.buffer
SB	R0,FFFD (V1)	;0->stop.buffer
SB	V0,0002 (A0)
SB	R0,FFFE (V1)
SB	V0,0003 (A0)
SB	R0,FFFF (V1)
ADDIU	A0,A0,0004
SB	V0,FFFC (A0)
BNE	V1,A1,7000CE10	;loop until buffers filled
SB	R0,FFFC (V1)
//7000CE3C:
LUI	T7,8006
ADDIU	T7,T7,56A0
LUI	A2,8006
SLL	V0,S0,0x6	;V0=S0*0x40: player#->offset
ADDU	A3,V0,T7	;A3=800656A0+offset: 
SW	V0,002C (SP)	;1->SP+2C: 
ADDIU	A2,A2,57C0	;A2=800657C0: start.buffer
OR	A0,S0,R0	;A0=S0: channel#
JAL	7000CBDC
ADDIU	A1,R0,0600	;A1=0x600: rumble activation block
LW	V0,002C (SP)
LUI	T8,8006
ADDIU	T8,T8,55A0
LUI	A2,8006
ADDIU	A2,A2,57A0
OR	A0,S0,R0	;A0=S0: channel#
ADDIU	A1,R0,0600	;A1=0x600: block# - rumble activation block
JAL	7000CBDC	;A3=p->PIF write command to channel A0, block A1, using data A2
ADDU	A3,V0,T8	;A3=V0+T8: 800655A0+0x40 channel offset: rumble off buffer
OR	V0,R0,R0
//7000CE8C:
LW	RA,0024 (SP)
LW	S0,0020 (SP)
ADDIU	SP,SP,0058
JR	RA
NOP
