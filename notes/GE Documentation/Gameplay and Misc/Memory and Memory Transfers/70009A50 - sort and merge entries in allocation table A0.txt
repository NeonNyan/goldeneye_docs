70009A50	A650	V0=TRUE if allocation table A0 altered during test
	accepts: A0=p->memory allocation table
	fries: AT,A0,A1,V1,T6,T7,T8
ADDIU	SP,SP,FFD0
SW	S4,0028 (SP)
SW	S0,0018 (SP)
ADDIU	S0,A0,0010	;S0=A0+10: p->next (target)
ADDIU	S4,A0,0FE8	;S4=A0+FE8: end
SW	S3,0024 (SP)
SW	S2,0020 (SP)
SW	S1,001C (SP)
SLTU	AT,S4,S0	;TRUE if end < start
SW	RA,002C (SP)
OR	S3,R0,R0	;S3=0	return FALSE
ADDIU	S1,A0,0008	;S1=A0+8: p->cur (source)
BNE	AT,R0,70009AF4	;return if something strange happened
OR	S2,R0,R0	;S2=0	NULL previous block address
//70009A88:
LW	T6,0004 (S0)	;T6=target+4: next size
BEQL	T6,R0,70009AE8	;loop if zero
ADDIU	S0,S0,0008
//70009A94:	swap entries if p->block < p->previous
LW	V0,0000 (S0)	;V0=target+0: p->start
OR	A0,S0,R0	;A0=S0: p->target
SLTU	AT,V0,S2	;TRUE if cur < previous
BEQL	AT,R0,70009AB8	;skip if no swapping necessary
LW	T7,0004 (S1)
JAL	70009A10	;swap entries A0 and A1
OR	A1,S1,R0	;A1=S1: p->source
LW	V0,0000 (S0)	;V0=target+0: p->block
//70009AB4:	if part of same segment, merge allocation entries
LW	T7,0004 (S1)	;T7=source+4: p->size
OR	A0,S1,R0	;A0=p->source
OR	A1,S0,R0	;A1=p->target
ADDU	T8,T7,S2	;T8=size + p->previous
BNEL	V0,T8,70009AE0	;branch if p->cur isn't same as calculated next entry
OR	S1,S0,R0
JAL	70009A34	;merge allocation entries
ADDIU	S3,R0,0001	;S3=return TRUE
OR	S0,S1,R0	;S0=S1: p->target=p->source
LW	V0,0000 (S1)	;V0=source+0: 
//70009ADC:	onward to the next entries
OR	S1,S0,R0	;S1=S0: p->source=p->target
OR	S2,V0,R0	;S2=V0: prev.value = cur.value
//70009AE4:	loop for all 0x200 entries
ADDIU	S0,S0,0008	;S0+=8: p->target+=8
SLTU	AT,S4,S0	;TRUE if final < cur
BEQL	AT,R0,70009A8C	;loop for each entry
LW	T6,0004 (S0)
//70009AF4:	return
LW	RA,002C (SP)
OR	V0,S3,R0	;V0=S3: return status
LW	S3,0024 (SP)
LW	S0,0018 (SP)
LW	S1,001C (SP)
LW	S2,0020 (SP)
LW	S4,0028 (SP)
JR	RA
ADDIU	SP,SP,0030

+_+

70009A10	A610	swap allocation entries A0 and A1
	accepts: A0=p->entry1, A1=p->entry2
	fries: V0,V1,T6,T7
LW	T6,0000 (A1)	;T6=A1+0: 
LW	V0,0000 (A0)	;V0=A0+0: 
LW	V1,0004 (A0)	;V1=A0+4: 
SW	T6,0000 (A0)	;A1+0->A0+0
LW	T7,0004 (A1)	;T7->A1+4
SW	T7,0004 (A0)	;A1+4->A0+4
SW	V0,0000 (A1)	;A0+0->A1+0
JR	RA
SW	V1,0004 (A1)	;A0+4->A1+4

70009A34	A634	merge allocation entries
	accepts: A0=p->target, A1=p->source
	fries: T6,T7,T8
LW	T6,0004 (A0)
LW	T7,0004 (A1)
ADDU	T8,T6,T7
SW	T8,0004 (A0)
SW	R0,0000 (A1)
JR	RA
SW	R0,0004 (A1)
