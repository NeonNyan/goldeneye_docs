70010B20	11720	cache prior to PI read
	accepts: A0=p->rdram, A1=size
BLEZ	A1,70010BA0	;return if size invalid
NOP
ADDIU	T3,R0,2000
SLTU	AT,A1,T3	;TRUE if size < 0x2000
BEQ	AT,R0,70010BA8	;branch if small packet
NOP
OR	T0,A0,R0	;T0=A0: p->start
ADDU	T1,A0,A1	;T1=A0+A1: p->end
SLTU	AT,T0,T1	;TRUE if start < end
BEQ	AT,R0,70010BA0	;return if size invalid
NOP
ANDI	T2,T0,000F
BEQ	T2,R0,70010B70	;branch if quadword-aligned
ADDIU	T1,T1,FFF0	;T1-=0x10
SUBU	T0,T0,T2	;T0=start->lowest quadword
CACHE	0000 (T0), D, Hit Writeback Invalidate
SLTU	AT,T0,T1	;TRUE if start < end
BEQ	AT,R0,70010BA0	;return if none left
NOP
ADDIU	T0,T0,0010	;T0+=0x10	next line
//70010B70:
ANDI	T2,T1,000F
BEQ	T2,R0,70010B90	;branch if end quadword-aligned
NOP
SUBU	T1,T1,T2	;T1= end->lowest quadword
CACHE	0010 (T1), D, Hit Writeback Invalidate
SLTU	AT,T1,T0	;TRUE if end < start
BNE	AT,R0,70010BA0	;return if none left
NOP
//70010B90:	loop and cache
CACHE	0000 (T0), D, Hit Invalidate
SLTU	AT,T0,T1	;TRUE if start < end
BNE	AT,R0,70010B90	;loop while data remains
ADDIU	T0,T0,0010
//70010BA0:	return
JR	RA
NOP
//70010BA8:	small packets	size < 0x2000
LUI	T0,8000		;T0=p->start	80000000
ADDU	T1,T0,T3	;T1=p->end	80002000
ADDIU	T1,T1,FFF0	;T1-=0x10
//70010BB4:	loop and cache
CACHE	0000 (T0), D, Index Writeback Invalidate
SLTU	AT,T0,T1	;TRUE if start<end
BNE	AT,R0,70010BB4	;loop while data remains
ADDIU	T0,T0,0010	;T0+=0x10
JR	RA
NOP
