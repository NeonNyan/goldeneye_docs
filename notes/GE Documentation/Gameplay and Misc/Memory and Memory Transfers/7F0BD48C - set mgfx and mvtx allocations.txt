Actual allocations are double of expected.  Second buffer ensures there's enough copy room for sorting and expansion.

7F0BD48C	F1FBC	set mgfx and mvtx allocations
ADDIU	SP,SP,FFE0
SW	RA,0014 (SP)
LUI	A1,8006
ADDIU	A1,A1,B68C	;A1=8005B68C: "-mgfx"
JAL	7000A6A0	;V0= p->A0th instance of token A1
ADDIU	A0,R0,0001	;A0= 1st instance
BEQ	V0,R0,7F0BD4F0
NOP
//7F0BD4AC:	set graphics memory for #players
JAL	7F09A464	;V0= # players
NOP
LUI	A1,8006
ADDIU	A1,A1,B694	;A1=8005B694: "-mgfx"
SW	V0,0018 (SP)
JAL	7000A6A0	;V0= p->A0th instance of token A1
ADDIU	A0,R0,0001
OR	A0,V0,R0	;A0=V0: p->value
OR	A1,R0,R0	;A1=NULL
JAL	7000A9E0	;V0=strtol(A0,A1,A2)
OR	A2,R0,R0	;A2=auto
LW	T7,0018 (SP)
LUI	AT,8005
SLL	T6,V0,0xA	;T6= value * 0x400
SLL	T8,T7,0x2
ADDU	AT,AT,T8
SW	T6,82E0 (AT)	;T6-> 800482E0+offset: save allocation for #players
//7F0BD4F0:
LUI	A1,8006
ADDIU	A1,A1,B69C	;A1=8005B69C: "-mvtx"
JAL	7000A6A0	;V0= p->A0th instance of token A1
ADDIU	A0,R0,0001
BEQ	V0,R0,7F0BD54C
NOP
//7F0BD508:	set vertex memory for #players
JAL	7F09A464	;V0= # players
NOP
LUI	A1,8006
ADDIU	A1,A1,B6A4	;A1=8005B6A4: "-mvtx"
SW	V0,0018 (SP)
JAL	7000A6A0	;V0= p->A0th instance of token A1
ADDIU	A0,R0,0001
OR	A0,V0,R0
OR	A1,R0,R0	;A1=NULL
JAL	7000A9E0	;V0=strtol(A0,A1,A2)
OR	A2,R0,R0	;A2=auto
LW	T0,0018 (SP)
LUI	AT,8005
SLL	T9,V0,0xA	;T9= value * 0x400
SLL	T1,T0,0x2
ADDU	AT,AT,T1
SW	T9,82F0 (AT)	;T6-> 800482F0+offset: save allocation for #players
//7F0BD54C:	allocate 2 mgfx buffers to bank 4
JAL	7F09A464	;V0= # players
NOP
SLL	T2,V0,0x2
LUI	A0,8005
ADDU	A0,A0,T2
LW	A0,82E0 (A0)	;A0=800482E0+offset: -mgfx allocation
ADDIU	A1,R0,0004	;A1= bank 4
SLL	T3,A0,0x1
JAL	70009720	;V0=p->A0 bytes allocated in bank A1
OR	A0,T3,R0	;A0*=2: two banks
LUI	AT,8009
//7F0BD578:	set p->second mgfx region
JAL	7F09A464	;V0= # players
SW	V0,C230 (AT)	;V0->8008C230: p->mgfx
LUI	V1,8009
SLL	T4,V0,0x2
LUI	T5,8005
ADDU	T5,T5,T4
ADDIU	V1,V1,C230
LW	T7,0000 (V1)	;T7= 8008C230: p->mgfx[0]
LW	T5,82E0 (T5)	;T5=800482E0+offset: -mgfx allocation
ADDU	T6,T5,T7
//7F0BD5A0:
JAL	7F09A464	;V0= # players
SW	T6,0004 (V1)	;T6-> 8008C234: p->mgfx[1]
LUI	V1,8009
SLL	T8,V0,0x2
LUI	T0,8005
ADDU	T0,T0,T8
ADDIU	V1,V1,C230
LW	T9,0004 (V1)	;T9=8008C234: p->mgfx[1]
LW	T0,82E0 (T0)	;T5=800482E0+offset: -mgfx allocation
ADDU	T1,T0,T9
//7F0BD5C8:	allocate 2 mvtx buffers to bank 4
JAL	7F09A464	;V0= # players
SW	T1,0008 (V1)	;8008C238 = p->end of mgfx allocation
SLL	T2,V0,0x2
LUI	A0,8005
ADDU	A0,A0,T2
LW	A0,82F0 (A0)	;A0=800482F0+offset: -mvtx allocation
ADDIU	A1,R0,0004	;A1= bank 4
SLL	T3,A0,0x1
JAL	70009720	;V0=p->A0 bytes allocated in bank A1
OR	A0,T3,R0	;A0*=2: two banks
LUI	V1,8009
ADDIU	V1,V1,C240
//7F0BD5F8:
JAL	7F09A464	;V0= # players
SW	V0,0000 (V1)	;8008C240 = p->mvtx[0]
LUI	V1,8009
SLL	T4,V0,0x2
LUI	T5,8005
ADDU	T5,T5,T4
ADDIU	V1,V1,C240
LW	T7,0000 (V1)	;T7=8004C240: p->mvtx[0]
LW	T5,82F0 (T5)	;T5=800482F0+offset: -mvtx allocation
ADDU	T6,T5,T7
//7F0BD620:
JAL	7F09A464	;V0= # players
SW	T6,0004 (V1)	;8004C244 = p->mvtx[1]
LUI	V1,8009
SLL	T8,V0,0x2
LUI	T0,8005
ADDU	T0,T0,T8
ADDIU	V1,V1,C240
LW	T9,0004 (V1)	;8004C244 = p->mvtx[1]
LW	T0,82F0 (T0)	;T0=800482F0+offset: -mvtx allocation
LUI	AT,8009
LW	RA,0014 (SP)
ADDU	T1,T0,T9
SW	T1,0008 (V1)	;8004C248 = p->end of mvtx buffer
SB	R0,C250 (AT)	;8008C250= 0
LUI	AT,8009
SW	R0,C254 (AT)	;8008C254= 0
LW	T2,0000 (V1)	;T2=8004C240: p->mvtx[0]
LUI	AT,8009
//7F0BD668:
ADDIU	SP,SP,0020
JR	RA
SW	T2,C24C (AT)	;8008C24C=8004C240: p->mvtx[0]
