7F0888E8	BD418	MP respawn
ADDIU	SP,SP,FFA8
LUI	T7,8003
SW	RA,001C (SP)
SW	S1,0018 (SP)
SW	S0,0014 (SP)
ADDIU	T7,T7,688C	;T7=8003688C
LW	AT,0000 (T7)	;AT=8003688C: NULL.xpos
ADDIU	T6,SP,004C
LW	T0,0004 (T7)	;T0=80036890: NULL.ypos
SW	AT,0000 (T6)
LW	AT,0008 (T7)	;AT=80036894: NULL.zpos
LUI	S0,8007
SW	T0,0004 (T6)
SW	AT,0008 (T6)	;copy 8003688C-94 -> SP+4C-58
JAL	7F0793EC	;initialize playerdata
LW	S0,5D08 (S0)	;S0=80075D08: p->setup.intro
JAL	7F0798B8
NOP
//7F088930:
LUI	S1,8008
ADDIU	S1,S1,A0B0	;S1=8007A0B0: p->cur.playerdata
LW	T1,0000 (S1)	;T1=cur.playerdata
ADDIU	T4,R0,0001
ADDIU	V0,R0,0007
SW	R0,00D8 (T1)	;0->BONDdata+D8: disable player button control
LW	T2,0000 (S1)	;T2=cur.playerdata
ADDIU	T7,R0,0002
ADDIU	A0,R0,FFFF
SW	R0,0428 (T2)	;0->BONDdata+428: 
LW	T3,0000 (S1)
SW	R0,0424 (T3)	;0->BONDdata+424: 
LW	T5,0000 (S1)
SW	T4,0420 (T5)	;1->BONDdata+420: 
LW	T9,0000 (S1)
SW	V0,29B8 (T9)	;7->BONDdata+29B8: 
LW	T8,0000 (S1)
SW	V0,29D4 (T8)	;7->BONDdata+29D4: 
LW	T6,0000 (S1)
SW	R0,1064 (T6)	;0->BONDdata+1064: 
LW	T0,0000 (S1)
JAL	7F08A380	;unset flags A0 at BONDdata+11D8
SW	T7,1128 (T0)	;2->BONDdata+1128: 
JAL	7F08A928	;unset flags A0 at 800368B4
ADDIU	A0,R0,FFFF	;A0= -1
JAL	7F09A464	;V0=#players
NOP
//7F08899C:	note: spawncap extension hack shown below!
SLTI	AT,V0,0002
BNE	AT,R0,7F0889C4	;branch if solo
LUI	T1,8008
LW	T1,9C28 (T1)	;T1=80079C28: #spawns
BLEZL	T1,7F0889C8	;branch if invalid or zero
OR	V1,R0,R0
JAL	7F0790F0	;V0=selected spawn#
NOP
BEQ	R0,R0,7F0889C8
OR	V1,V0,R0	;V1=V0: index
//7F0889C4:
OR	V1,R0,R0	;index=0
//7F0889C8:	set player position to selected spawn
SLL	T2,V1,0x2	;T2=spawn#->offset
LUI	V0,8008
ADDU	V0,V0,T2
LW	V0,9C2C (V0)	;V0=80079C2C: p->spawns
LWC1	F4,0000 (V0)	;F4=spawn.xpos
SWC1	F4,004C (SP)	;SP+4C=spawn.xpos
LWC1	F6,0008 (V0)	;F6=spawn.zpos
LW	A1,004C (SP)	;A1=xpos
SWC1	F6,0054 (SP)	;SP+54=spawn.zpos
LW	A0,0028 (V0)	;A0= +28: p->tile
LW	A2,0054 (SP)	;A2=zpos
JAL	7F080D60
SW	A0,0044 (SP)	;SP+44=p->tile
LW	V0,0000 (S1)	;V0=cur.playerdata
LWC1	F8,29BC (V0)	;F8=BONDdata+29BC
ADD.S	F10,F8,F0
SWC1	F10,0050 (SP)
SWC1	F0,0070 (V0)	;F0->BONDdata+70
JAL	7000A450	;V0=random
SWC1	F0,003C (SP)
MTC1	V0,F16
LUI	AT,8005
LWC1	F12,5284 (AT)	;F12=80055284: 
LWC1	F2,003C (SP)
BGEZ	V0,7F088A40	;branch if positive
CVT.S.W	F18,F16	;F18=(float) random
LUI	AT,4F80
MTC1	AT,F4		;F4=4294967296.0	[4F800000]
NOP
ADD.S	F18,F18,F4	;make positive
//7F088A40:	move player to position
LUI	AT,2F80
MTC1	AT,F6
LUI	AT,43B4
MTC1	AT,F10		;F10=360.0	[43B40000]
MUL.S	F8,F18,F6
LW	T3,0000 (S1)	;T3=cur.playerdata
LUI	AT,8005
ADDIU	A1,SP,004C	;A1=SP+4C: p->xyz positions
MUL.S	F0,F8,F12
NOP
MUL.S	F16,F0,F10
SWC1	F0,0048 (SP)
DIV.S	F4,F16,F12
SWC1	F4,0148 (T3)	;F4->BONDdata+148: lateral rotation 1st
LW	T4,0000 (S1)	;T4=cur.playerdata
SWC1	F2,0074 (T4)
LWC1	F18,5288 (AT)	;F18=80055288: 
LW	T5,0000 (S1)	;T5=cur.playerdata
DIV.S	F6,F2,F18
SWC1	F6,006C (T5)
LW	A0,0000 (S1)	;A0=cur.playerdata
LW	A2,0044 (SP)	;A2=SP+44: p->target tile
JAL	7F07C730	;move player to location
ADDIU	A0,A0,0488	;A0=BONDdata+488: p->cur.tile, though really position block
//7F088AA0:	move player's viewport etc. to position
JAL	7F057EAC
LWC1	F12,0048 (SP)
LW	T9,0000 (S1)	;T9=cur.playerdata
NEG.S	F8,F0
MTC1	R0,F10
SWC1	F8,0498 (T9)	;F8->BONDdata+498
LW	T8,0000 (S1)	;T8=cur.playerdata
SWC1	F10,049C (T8)	;F10->BONDdata+49C
JAL	7F057EA0
LWC1	F12,0048 (SP)
LW	T6,0000 (S1)	;T6=cur.playerdata
LUI	AT,8005
LWC1	F12,528C (AT)	;F12=8005528C: 0.1	[3DCCCCD0]
SWC1	F0,04A0 (T6)	;F0->BONDdata+4A0
LW	T7,0000 (S1)	;T7=cur.playerdata
LWC1	F2,004C (SP)
SWC1	F2,0408 (T7)	;F2->BONDdata+408: xpos
LW	T0,0000 (S1)	;T0=cur.playerdata
LW	T1,00A8 (T0)	;T1=p->pos.data
SWC1	F2,0008 (T1)	;F2->pos.data.x
LW	T2,0000 (S1)	;T2=cur.playerdata
LWC1	F2,0050 (SP)
SWC1	F2,040C (T2)	;F2->BONDdata+40C: ypos
LW	T3,0000 (S1)	;T3=cur.playerdata
LW	T4,00A8 (T3)	;T4=p->pos.data
SWC1	F2,000C (T4)	;F2->pos.data.y
LW	T5,0000 (S1)	;T5=cur.playerdata
LWC1	F2,0054 (SP)
SWC1	F2,0410 (T5)	;F2->BONDdata+410: zpos
LW	T9,0000 (S1)	;T9=cur.playerdata
LW	T8,00A8 (T9)	;T8=p->pos.data
SWC1	F2,0010 (T8)	;F2->pos.data.z
LW	T7,0000 (S1)	;T7=cur.playerdata
LW	T6,0044 (SP)
LW	T0,00A8 (T7)	;T0=p->pos.data
SW	T6,0014 (T0)	;T6->pos.data.tile
LW	V0,0000 (S1)	;V0=cur.playerdata
LWC1	F16,04B4 (V0)	;F16=BONDdata+4B4: xpos
DIV.S	F4,F16,F12	;F4=xpos/10
SWC1	F4,03B8 (V0)	;F4->BONDdata+3B8
LW	V0,0000 (S1)	;V0=cur.playerdata
LWC1	F18,04B8 (V0)	;F18=BONDdata+4B8: ypos
DIV.S	F6,F18,F12	;F6=ypos/10
SWC1	F6,03BC (V0)	;F6->BONDdata+3BC
LW	V0,0000 (S1)	;V0=cur.playerdata
LWC1	F8,04BC (V0)	;F8=BONDdata+4BC: zpos
DIV.S	F10,F8,F12	;F10=zpos/10
JAL	7F08BFF0	;reinitialize player inventory
SWC1	F10,03C0 (V0)	;F10->BONDdata+3C0
//7F088B64:	fry ammo totals
LW	T1,0000 (S1)	;T1=cur.playerdata
ADDIU	V0,R0,0008
ADDIU	V1,R0,0078
SW	R0,1130 (T1)	;0->BONDdata+1130: NULL ammo type 1
LW	T2,0000 (S1)	;T2=cur.playerdata
SW	R0,1134 (T2)	;0->BONDdata+1134: NULL ammo type 2
//7F088B7C:	loop for remaining entries
LW	T3,0000 (S1)	;T3=cur.playerdata
ADDU	T4,T3,V0	;T4=BONDdata+8
SW	R0,1130 (T4)	;0->BONDdata+1130+x: NULL next ammo type
LW	T5,0000 (S1)	;T5=cur.playerdata
ADDU	T9,T5,V0
SW	R0,1134 (T9)	;0->BONDdata+1134+x: NULL next ammo type
LW	T8,0000 (S1)	;T8=cur.playerdata
ADDU	T7,T8,V0
SW	R0,1138 (T7)	;0->BONDdata+1138+x: NULL next ammo type
LW	T6,0000 (S1)	;T6=cur.playerdata
ADDU	T0,T6,V0
ADDIU	V0,V0,0010	;V0+=10
BNE	V0,V1,7F088B7C	;loop until 0x78
SW	R0,113C (T0)	;0->BONDdata+113C+x: NULL next ammo type
//7F088BB4:	parse intro block
BEQL	S0,R0,7F088C90	;skip if no intro block
MTC1	R0,F0
LW	V0,0000 (S0)	;V0=intro.type
ADDIU	AT,R0,0009
BEQ	V0,AT,7F088C8C	;quit if type 9 (EOL)
SLTIU	AT,V0,0007
//7F088BCC:	loop for each type, looking for items and ammo
BEQ	AT,R0,7F088C78	;branch if type 7 or 8
SLL	T1,V0,0x2	;T1=type->offset
LUI	AT,8005
ADDU	AT,AT,T1
LW	T1,5290 (AT)	;T1=80055290+offset: handler for intro.type
JR	T1
NOP
//7F088BE8:	intro type 0: spawn
BEQ	R0,R0,7F088C7C
ADDIU	S0,S0,000C	;S0+=C
//7F088BF0:	intro type 1: weapon
JAL	7F0C0A20	;V0=set#
NOP
LW	T2,000C (S0)	;T2=cmd+C: set#
BNE	V0,T2,7F088C28	;branch if set mismatch
NOP
LW	A1,0008 (S0)	;A1=cmd+8: left weapon
BLTZ	A1,7F088C20	;branch if single weapon
NOP
JAL	7F08C50C	;add doubles (A0+A1) to inventory
LW	A0,0004 (S0)	;A0=cmd+4: right weapon
BEQ	R0,R0,7F088C7C
ADDIU	S0,S0,0010	;S0+=10
//7F088C20:	single weapon
JAL	7F08C488	;add weapon A0 to inventory
LW	A0,0004 (S0)	;A0=cmd+4: right weapon
//7F088C28:
BEQ	R0,R0,7F088C7C
ADDIU	S0,S0,0010	;S0+=10
//7F088C30:	intro type 2: ammo
JAL	7F0C0A20	;V0=set#
NOP
LW	T3,000C (S0)	;T3=cmd+C: set#
BNE	V0,T3,7F088C50	;branch if set mismatch
NOP
LW	A0,0004 (S0)	;A0=cmd+4: type
JAL	7F069130	;add ammo type A0, total A1 to inventory
LW	A1,0008 (S0)	;A1=cmd+8: quantity
//7F088C50:
BEQ	R0,R0,7F088C7C
ADDIU	S0,S0,0010	;S0+=10
//7F088C58:	intro type 3: intro swirly
BEQ	R0,R0,7F088C7C
ADDIU	S0,S0,0020	;S0+=20
//7F088C60:	intro type 4: intro animation
BEQ	R0,R0,7F088C7C
ADDIU	S0,S0,0008	;S0+=8
//7F088C68:	intro type 5: hand/cuff
BEQ	R0,R0,7F088C7C
ADDIU	S0,S0,0008	;S0+=8
//7F088C70:	intro type 6: intro camera
BEQ	R0,R0,7F088C7C
ADDIU	S0,S0,0028	;S0+=28
//7F088C78:	type 7 (8 as well, but would bug on this!
ADDIU	S0,S0,0004	;S0+=4
//7F088C7C:
LW	V0,0000 (S0)	;V0=intro.type
ADDIU	AT,R0,0009
BNEL	V0,AT,7F088BCC	;loop unless EOL type (9)
SLTIU	AT,V0,0007
//7F088C8C:	BD7BC	fade in - last thing you do...
MTC1	R0,F0
LW	T4,0000 (S1)	;T4=cur playerdata	[S1=8007A0B0]
LUI	AT,8005
SWC1	F0,0078 (T4)	;BONDdata+0x78= 0.0
LW	T5,0000 (S1)	;T5=cur playerdata
LWC1	F16,52AC (AT)	;F16=800552AC:	-0.0001 [B8D1B717]
LUI	AT,42F0
MTC1	AT,F12		;F12= 120.0 [42F00000]	timer (ms.)
SWC1	F16,007C (T5)	;BONDdata+0x7C= -0.0001
LW	T9,0000 (S1)	;T9=cur playerdata
LUI	AT,3F80
MTC1	AT,F14		;F14= 1.0 [3F800000]	final level 100%
JAL	7F080A10	;set cur. player fade
SWC1	F0,0080 (T9)	;BONDdata+0x80= 0.0
//7F088CC4:	return
LW	RA,001C (SP)
LW	S0,0014 (SP)
LW	S1,0018 (SP)
JR	RA
ADDIU	SP,SP,0058

//7F088CD8:
