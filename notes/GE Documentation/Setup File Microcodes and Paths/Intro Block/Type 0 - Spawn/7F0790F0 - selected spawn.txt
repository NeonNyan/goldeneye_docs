7F0790F0	ADC20	V0=selected spawn#
	note: spawncap extension hack shown below!
ADDIU	SP,SP,FFA0
SW	RA,0044 (SP)
SW	S8,0040 (SP)
SW	S7,003C (SP)
SW	S6,0038 (SP)
SW	S5,0034 (SP)
SW	S4,0030 (SP)
SW	S3,002C (SP)
SW	S2,0028 (SP)
SW	S1,0024 (SP)
SW	S0,0020 (SP)
JAL	7F09B150	;V0= cur.player#
SDC1	F20,0018 (SP)
JAL	7F09A464	;V0= #players
OR	S6,V0,R0	;S6=cur.player#
LUI	T6,8008
LW	T6,9C28 (T6)	;T6=80079C28: #spawns (hack)
OR	S2,V0,R0	;S2=V0: #players
ADDIU	S1,R0,0001	;S1=1
BLEZ	T6,7F07925C	;skip if invalid #spawns
OR	S7,R0,R0	;S7=0	init spawncount
//7F079144:
LUI	AT,447A
LUI	S8,8008
LUI	S5,8008
LUI	S4,8008
MTC1	AT,F20		;F20=1000.0	[447A0000]
ADDIU	S4,S4,9EE0	;S4=80079EE0: p->player BONDdata table
ADDIU	S5,S5,9C2C	;S5=80079C2C: spawn pointers
ADDIU	S8,S8,A0B0	;S8=8007A0B0: cur.playerdata table
LW	V0,0000 (S8)	;V0=p->cur.playerdata
//7F079168:	loops to find a spawn outside 1000 of player
LUI	T1,8008
ADDIU	S7,S7,0001	;S7++	spawncount++
LW	T7,29E0 (V0)	;T7=cur.spawn index
OR	S1,R0,R0	;S1=0	good hit flag
OR	S0,R0,R0	;init S0	playercount
ADDIU	T8,T7,0001	;T8=index++
SW	T8,29E0 (V0)	;update cur.spawn index
LW	T9,0000 (S8)	;T9=p->cur.playerdata
LW	T1,9C28 (T1)	;T1=80079C28: #spawns
LW	T0,29E0 (T9)	;T0=cur.spawn index
DIV	T0,T1
MFHI	S3		;S3 = T0 % T1
BNE	T1,R0,7F0791A4	;branch if no division by zero
NOP
BREAK	00001C00
//7F0791A4:	check stupid division
ADDIU	AT,R0,FFFF
BNE	T1,AT,7F0791BC
LUI	AT,8000
BNE	T0,AT,7F0791BC
NOP
BREAK	00001800
//7F0791BC:
BLEZ	S2,7F07923C	;branch if invalid #players
NOP
//7F0791C4:
BEQL	S0,S6,7F079234	;branch if playercount=cur.player#
ADDIU	S0,S0,0001
SLL	T2,S0,0x2	;T2=playercount->offset
ADDU	T3,S4,T2	;T3=BONDdata+offset
LW	T4,0000 (T3)	;T4=p->player S0's BONDdata
LW	V0,00A8 (T4)	;V0=BONDdata+A8: p->pos.data
BEQL	V0,R0,7F079234	;skip if invalid
ADDIU	S0,S0,0001
SLL	T5,S3,0x2	;T5=mordant->offset
ADDU	T6,S5,T5	;T6=spawns+offset
LW	V1,0000 (T6)	;V1=p->spawn
LWC1	F4,0008 (V0)	;F4=pos.xpos
LWC1	F8,0010 (V0)	;F8=pos.zpos
LWC1	F6,0000 (V1)	;F6=spawn.xpos
LWC1	F10,0008 (V1)	;F10=spawn.zpos
SUB.S	F0,F4,F6	;F0=dx
SUB.S	F2,F8,F10	;F2=dz
MUL.S	F16,F0,F0	;F16=dx^2
NOP
MUL.S	F18,F2,F2	;F18=dz^2
JAL	7001F7E0	;F0=sqrt(F12)
ADD.S	F12,F16,F18	;F12= dx^2 + dz^2
C.LT.S	F0,F20
NOP
BC1FL	7F079234	;branch if distance beyond 1000
ADDIU	S0,S0,0001
ADDIU	S1,R0,0001	;S1=1
//7F079230:	find first best-fit spawn
ADDIU	S0,S0,0001	;S0++	playercount++
BNE	S0,S2,7F0791C4	;loop if playercount!=#players
NOP
BEQ	S1,R0,7F07925C	;finished if beyond 1000
SW	S3,004C (SP)
LUI	T7,8008
LW	T7,9C28 (T7)	;T7=80079C28: #spawns
SLT	AT,S7,T7
BNEL	AT,R0,7F079168	;loop while spawncount < #spawns
LW	V0,0000 (S8)
//7F079258:
SW	S3,004C (SP)
LUI	S4,8008
LUI	S5,8008
LUI	S8,8008
ADDIU	S8,S8,A0B0	;S8=8007A0B0: cur.playerdata table
ADDIU	S5,S5,9C2C	;S5=80079C2C: spawn pointers
ADDIU	S4,S4,9EE0	;S4=80079EE0: p->player BONDdata table
BEQ	S1,R0,7F079388	;skip if you found a good one
LW	S3,004C (SP)
LUI	T8,8008
LW	T8,9C28 (T8)	;T8=80079C28: #spawns
SLT	AT,S7,T8
BEQ	AT,R0,7F079388	;branch if last spawn
LUI	AT,42C8
MTC1	AT,F20
NOP
LW	V0,0000 (S8)	;V0=p->cur.playerdata
//7F07929C:
LUI	T3,8008
ADDIU	S7,S7,0001	;S7++	spawncount++
LW	T9,29E0 (V0)	;T9=cur.spawn index
OR	S1,R0,R0
OR	S0,R0,R0	;init S0	playercount
ADDIU	T0,T9,0001	;index++
SW	T0,29E0 (V0)	;update cur.spawn index
LW	T1,0000 (S8)	;V0=p->cur.playerdata
LW	T3,9C28 (T3)	;T3=80079C28: #spawns
LW	T2,29E0 (T1)	;T2=cur.spawn index
DIV	T2,T3
MFHI	S3		;S3= cur.spawn index % #spawns: spawn#
BNE	T3,R0,7F0792D8	;check for division by zero
NOP
BREAK	00001C00
//7F0792D8:	more tests for bad division
ADDIU	AT,R0,FFFF
BNE	T3,AT,7F0792F0
LUI	AT,8000
BNE	T2,AT,7F0792F0
NOP
BREAK	00001800
//7F0792F0:	test against player S0's position
BLEZ	S2,7F079370	;branch if invalid #players
NOP
//7F0792F8:	test if spawn is too close to any player
BEQL	S0,S6,7F079368	;branch if S0=cur.player#
ADDIU	S0,S0,0001
SLL	T4,S0,0x2	;T4=playercount->offset
ADDU	T5,S4,T4	;T5=table+offset
LW	T6,0000 (T5)	;T6=p->BONDdata for player S0
LW	V0,00A8 (T6)	;V0=BONDdata+A8: p->pos.data
BEQL	V0,R0,7F079368	;skip if NULL
ADDIU	S0,S0,0001
SLL	T7,S3,0x2	;T7=spawn#->offset
ADDU	T8,S5,T7	;T8=p->spawn
LW	V1,0000 (T8)	;V1=p->spawn preset S3
LWC1	F4,0008 (V0)	;F4=pos.xpos
LWC1	F8,0010 (V0)	;F8=pos.zpos
LWC1	F6,0000 (V1)	;F6=spawn.xpos
LWC1	F10,0008 (V1)	;F10=spawn.zpos
SUB.S	F0,F4,F6	;F0=dx
SUB.S	F2,F8,F10	;F2=dz
MUL.S	F16,F0,F0	;F16=dx^2
NOP
MUL.S	F18,F2,F2	;F18=dz^2
JAL	7001F7E0	;F0=sqrt(F12)
ADD.S	F12,F16,F18	;F12=dx^2 + dz^2
C.LT.S	F0,F20
NOP
BC1FL	7F079368	;branch if distance b/w player and spawn >= 1000
ADDIU	S0,S0,0001
ADDIU	S1,R0,0001	;S1=1	too close
//7F079364:	loop for each player
ADDIU	S0,S0,0001	;S0++	playercount++
BNE	S0,S2,7F0792F8	;loop if count!=#players
NOP
//7F079370:	retest if any were within range
BEQ	S1,R0,7F079388	;branch if spawn okay
LUI	T9,8008
LW	T9,9C28 (T9)	;T9=80079C28: #spawns
SLT	AT,S7,T9
BNEL	AT,R0,7F07929C	;loop while spawncount < #spawns
LW	V0,0000 (S8)
//7F079388:	worst case, choose a random one
BEQL	S1,R0,7F0793B8	;branch if you found a good one
LW	RA,0044 (SP)
JAL	7000A450	;V0= random
NOP
LUI	T0,8008
LW	T0,9C28 (T0)	;T0=80079C28: #spawns
DIVU	V0,T0
MFHI	S3		;S3=rand % #spawns
BNE	T0,R0,7F0793B4	;branch if division okay
NOP
BREAK	00001C00
//7F0793B4:	return
LW	RA,0044 (SP)
OR	V0,S3,R0	;V0=spawn#
LW	S3,002C (SP)
LDC1	F20,0018 (SP)
LW	S0,0020 (SP)
LW	S1,0024 (SP)
LW	S2,0028 (SP)
LW	S4,0030 (SP)
LW	S5,0034 (SP)
LW	S6,0038 (SP)
LW	S7,003C (SP)
LW	S8,0040 (SP)
JR	RA
ADDIU	SP,SP,0060
