7F011C3C:	initialize MP character select list
LUI	AT,8003
SW	R0,A8D0 (AT)	;0->8002A8D0: unselect folder tab 1
LUI	AT,8003
SW	R0,A8D4 (AT)	;0->8002A8D4: unselect folder tab 2
LUI	AT,8003
ADDIU	SP,SP,FFD0
SW	R0,A8D8 (AT)	;0->8002A8D8: unselect folder tab 3
LUI	AT,8003
SW	R0,A8E4 (AT)	;0->8002A8E4: unhighlight tab 3
LUI	AT,8003
SW	S4,0028 (SP)
SW	S2,0020 (SP)
SW	S1,001C (SP)
SW	R0,A8E0 (AT)	;0->8002A8E0: unhighlight tab 2
SW	S3,0024 (SP)
LUI	AT,8003
LUI	S1,8003
LUI	S2,8009
LUI	S4,8003
SW	RA,002C (SP)	;SP+2C=RA
SW	S0,0018 (SP)
SW	R0,A8DC (AT)	;0->8002A8DC: unhighlight tab 1
ADDIU	S4,R0,0001	;S4=1
ADDIU	S2,S2,D130	;S2=8008D130: p->char.imgs in global bank
ADDIU	S1,S1,B198	;S1=8002B198: character list
ADDIU	S3,R0,000C	;S3=C
//7F011CA4:	load each of the four images for each entry
LBU	V1,0003 (S1)	;V1=8002B19B: portrait
LW	T7,0000 (S2)	;T7=8008D130: character select image bank
SLL	T6,V1,0x2	;T6=V1*4: portrait->offset for set
MULTU	T6,S3
MFLO	S0		;S0=T6*0xC: offset to image declaration
ADDU	V0,T7,S0	;V0=T7+S0: bank+offset to entry
LW	A2,0000 (V0)	;A2=image 1 ID#
SLTIU	AT,A2,0FFF	;AT=TRUE if image loaded
BEQ	AT,R0,7F011CDC	;branch if already loaded
OR	A0,A2,R0	;A0=A2: image ID#
JAL	7F0CBEE8	;load image ID A0
OR	A1,R0,R0	;A1=0
LW	T8,0000 (S2)	;T8=character select image bank
ADDU	V0,T8,S0	;V0=T8+S0: bank+offset to entry
//7F011CDC:
LW	V1,000C (V0)	;V1=image 2 ID#
SLTIU	AT,V1,0FFF	;AT=TRUE if image loaded
BEQ	AT,R0,7F011CFC	;branch if already loaded
OR	A0,V1,R0	;A0=image ID
JAL	7F0CBEE8	;load image ID A0
OR	A1,R0,R0	;A1=0
LW	T9,0000 (S2)	;T9=character select image bank
ADDU	V0,T9,S0	;V0=T9+S0: bank+offset to entry
//7F011CFC:
LW	V1,0018 (V0)	;V1=image 3 ID#
SLTIU	AT,V1,0FFF	;AT=TRUE if image loaded
BEQ	AT,R0,7F011D1C	;branch if already loaded
OR	A0,V1,R0	;A0=image ID
JAL	7F0CBEE8	;load image ID A0
OR	A1,R0,R0	;A1=0
LW	T0,0000 (S2)	;T0=character select image bank
ADDU	V0,T0,S0	;V0=T0+S0: bank+offset to entry
//7F011D1C:
LW	V1,0024 (V0)	;V1=image 4 ID#
SLTIU	AT,V1,0FFF	;AT=TRUE if image loaded
BEQ	AT,R0,7F011D34	;branch if already loaded
OR	A0,V1,R0	;A0=image ID
JAL	7F0CBEE8	;load image ID A0
OR	A1,R0,R0	;A1=0
//7F011D34:	loop for all entries
ADDIU	S1,S1,0006	;S1+=6: next entry
LB	AT,0002 (S1)	;AT=end flag
BGEZ	AT,7F011CA4	;loop until end
ADDIU	S4,S4,0001	;S4++:	total count of characters
//7F011D44:	
LUI	S1,8003
ADDIU	S1,S1,B194	;S1=8002B194: #available
LB	T1,0003 (S1)	;T1=all characters flag
ADDIU	AT,R0,0040	;AT=0x40
LUI	A0,8003
BNEZ	T1,7F011D7C	;branch if all characters in use
ADDIU	A1,R0,0011	;A1=0x11
LW	A0,A8E8 (A0)	;A0=8002A8E8: folder#
JAL	7F01E2C0	;V0=TRUE if stage 0x11 (A1) complete on agent+ (A2) in folder A0
OR	A2,R0,R0	;A2=0
ADDIU	AT,R0,0003
BNE	V0,AT,7F011D84	;branch if not 3
ADDIU	T3,R0,0009	;T3=9
ADDIU	T2,R0,0040	;T2=0x40
//7F011D7C:	all characters available
BEQ	R0,R0,7F011DE8
SH	S4,0000 (S1)	;count->8002B194: all characters available
//7F011D84:	limitted characters available
LUI	S2,8003
LUI	S3,8003
SH	T3,0000 (S1)	;9->8002B194: basic 9 characters available
ADDIU	S3,S3,B534	;S3=8002B534: end of data words
ADDIU	S2,S2,B524	;S2=8002B524: pl1 selected character
//7F011D98:	reset if selected character out of list bounds
LH	V0,0000 (S1)	;V0=8002B194: # available characters
LW	T4,0000 (S2)	;T4=8002B524: selected character
SLT	AT,T4,V0
BNEL	AT,R0,7F011DE0	;branch if selected character in list bounds
ADDIU	S2,S2,0004	;S2+=4: next player's character
BLEZ	V0,7F011DD8	;branch if invalid # characters
OR	S0,R0,R0	;S0=0
//7F011DB4:	find last valid entry
JAL	7F011BD8
OR	A0,S0,R0	;A0=0
BEQL	V0,R0,7F011DDC
SW	S0,0000 (S2)
LH	T5,0000 (S1)	;T5=# available characters
ADDIU	S0,S0,0001	;S0++
SLT	AT,S0,T5
BNEZ	AT,7F011DB4	;branch if selected < available
NOP	
//7F011DD8:	loop for each player
SW	S0,0000 (S2)	;S0->selected character
ADDIU	S2,S2,0004	;S2+=4: next player
BNEL	S2,S3,7F011D9C	;branch while more players to deal with
LH	V0,0000 (S1)
//7F011DE8:	initialize the interface
LUI	V0,8003
LW	V0,B524 (V0)	;V0=8002B524: pl1 character
LUI	AT,8007
LUI	V1,8003
SW	V0,9710 (AT)	;80069710=pl1 current character selection
LUI	AT,8007
SW	V0,9720 (AT)	;80069720=pl1 previous character selection
LUI	AT,8007
SW	R0,9730 (AT)	;80069730=0: pl1 buffer
LUI	AT,8007
SW	R0,9740 (AT)	;80069740=0: pl1 entry not selected
LW	V1,B528 (V1)	;V1=8002B528: pl2 character
LUI	AT,8007
SW	R0,9750 (AT)	;80069750=0: pl1 size of image
LUI	AT,8007
SW	V1,9714 (AT)	;80069714=pl2 current character selection
LUI	AT,8007
SW	V1,9724 (AT)	;80069724=pl2 previous character selection
LUI	AT,8007
SW	R0,9734 (AT)	;80069734=0: pl2 buffer
LUI	AT,8007
SW	R0,9744 (AT)	;80069744=0: pl2 entry not selected
LUI	A0,8003
LW	A0,B52C (A0)	;A0=8002B52C: pl3 character
LUI	AT,8007
SW	R0,9754 (AT)	;80069754=0: pl2 size of image
LUI	AT,8007
SW	A0,9718 (AT)	;80069718=pl3 current character selection
LUI	AT,8007
SW	A0,9728 (AT)	;80069728=pl3 previous character selection
LUI	AT,8007
SW	R0,9738 (AT)	;80069738=0: pl3 buffer
LUI	AT,8007
SW	R0,9748 (AT)	;80069748=0: pl3 entry not selected
LUI	A1,8003
LW	A1,B530 (A1)	;A1=8002B530: pl4 character
LUI	AT,8007
SW	R0,9758 (AT)	;80069758=0: pl3 size of image
LUI	AT,8007
SW	A1,971C (AT)	;8006971C=pl4 current character selection
LUI	AT,8007
SW	A1,972C (AT)	;8006972C=pl4 previous character selection
LUI	AT,8007
SW	R0,973C (AT)	;8006973C=0: pl4 buffer
LUI	AT,8007
SW	R0,974C (AT)	;8006974C=0: pl4 entry not selected
LUI	AT,8007
JAL	7F00B8AC
SW	R0,975C (AT)	;8006975C=0: pl4 size of image
//7F011EAC:	return
LW	RA,002C (SP)
LW	S0,0018 (SP)
LW	S1,001C (SP)
LW	S2,0020 (SP)
LW	S3,0024 (SP)
LW	S4,0028 (SP)
JR	RA
ADDIU	SP,SP,0030
