7F090F88:
LUI	V0,8003
JR	RA
LW	V0,6FC8 (V0)	//if 80036FC8 =1, display position debug

7F08AD1C:
JAL	7F090F88
NOP
BEQ	V0,R0,7F08B0DC	//if !=1, don't display position
LUI	V0,8008
LW	V0,A0B0 (V0)	//V0=8007A0B0 [current player data]
LWC1	F0,0498 (V0)
LWC1	F14,04A0 (V0)
JAL	7F05AA30
NEG.S	F12,F0
LUI	AT,4334
MTC1	AT,F4
LUI	AT,8005
LWC1	F8,52BC (AT)
MUL.S	F6,F0,F4
LUI	T4,8003
ADDIU	T4,T4,68B8
ADDIU	T3,SP,004C
LUI	T8,8008
DIV.S	F10,F6,F8
TRUNC.W	F16,F10
MFC1	T2,F16
NOP


----------
lets try something different...
7F0BCA58:
LWC1	F4,000C (T7)
LWC1	F6,0000 (A2)
MUL.S	F8,F4,F6
//7F0BCA64:
SWC1	F8,0000 (A1)	//Current player 0x38	current model x pos?
LW	T8,0000 (V1)	//T8=start of BG room data
LWC1	F16,0000 (A2)
ADDU	T9,T8,V0	//T9= offset to room data
LWC1	F10,0010 (T9)
MUL.S	F18,F10,F16
//7F0BCA7C:
SWC1	F18,0004 (A1)	//Current player 0x3C	current model y pos?
LW	T0,0000 (V1)	//T0=start of BG room data
LWC1	F6,0000 (A2)
ADDU	T1,T0,V0	//T1= offset to room data
LWC1	F4,0014 (T1)
MUL.S	F8,F4,F6
JR	RA
//7F0BCA98:
SWC1	F8,0008 (A1)	//Current player 0x40	current model z pos?


------------
this routine has to do with determining what is within eyesight
7F081674:
JAL	7F080D60
LW	A2,04BC (V0)	//A2=Z position
LUI	T0,8008
ADDIU	T0,T0,A0B0	//T0=8007A0B0
LW	T6,0000 (T0)	//T6=Pcur_pl
LUI	A0,8005
ADDIU	A0,A0,8374	//A0=80048374
//7F081690:
SWC1	F0,04A8 (T6)	//F0->Y position of character (the 'low' address)
LW	V0,0000 (T0)	//V0=Pcur_pl, and T0/V0 are used a lot after this.  
			F0 gets fried and no longer used!
thankfully, it's a bit redundant.  so, time to take advantage of it!
7F0816CC:	SWC1	F6,04A8 (V0)	E44604A8
doesn't work

