Notes left over from the demo ripping project:
80024337	music modifier

80048468	location file is loaded to
8004846C	stores address for actual code block, one block at a time.
80048470	(0x20) lists code under each "heading", running to next heading

80048490	previous sum of bytes
80048494	current sum of bytes
80048498	first value in command (difference b/w values)
8004849C	previous ???
800484A0	current ???
800484A8	difference b/w above

8008C5F4	gets the address for the demo loaded

---------
7F0BFD60	F4890	save ramrom
ADDIU	SP,SP,FED0
SW	S2,001C (SP)
SW	S3,0020 (SP)
SW	S1,0018 (SP)
SW	S0,0014 (SP)
LUI	S2,8006
SW	RA,0024 (SP)
ADDIU	S2,S2,B750	;S2=8005B750	"replay/demo.%d"
ADDIU	S0,R0,0001	;S0=1
ADDIU	S1,SP,002C	;S1=SP+2C: p->buffer for string
ADDIU	S3,SP,0028	;S3=SP+28: p->instance
//7F0BFD8C:	search for string instance
OR	A0,S1,R0	;A0=S1: p->string
OR	A1,S2,R0	;A1=S2: "replay/demo.%d"
JAL	7000AC94	;sprintf(A0,A1,A2,A3)
OR	A2,S0,R0	;A2=S0: count
OR	A0,S1,R0	;A0=S1: p->string
JAL	7F0D0098	;V0=TRUE if resource named A0 found on Indy and filesize set to A1
OR	A1,S3,R0	;A1=S3: @filesize
BEQ	V0,R0,7F0BFDB8	;branch if unique
NOP
BEQ	R0,R0,7F0BFD8C	;loop until a new entry found
ADDIU	S0,S0,0001	;S0++
//7F0BFDB8:	on hit, make final resource name
LUI	A1,8006
ADDIU	A1,A1,B760	;A1=8005B760	"replay/demo.%d"
OR	A0,S1,R0	;A0=S1: p->string
JAL	7000AC94	;sprintf(A0,A1,A2,A3)
OR	A2,S0,R0	;A2=S0: count
LUI	T6,8005
LW	T6,8468 (T6)	;T6=80048468	p->demo block
OR	A0,S1,R0	;A0=S1: "name"
LUI	A1,00F0		;A1=00F00000
JAL	7F0D005C	;save resource A0 of size A2 at A1
LW	A2,0080 (T6)	;A2= demo block+80: size
//7F0BFDE4:	return
LW	RA,0024 (SP)
LW	S0,0014 (SP)
LW	S1,0018 (SP)
LW	S2,001C (SP)
LW	S3,0020 (SP)
JR	RA
ADDIU	SP,SP,0130

7F0BFE00	F4930	load ramrom
ADDIU	SP,SP,FFE0
SW	RA,0014 (SP)
LUI	A0,8006
ADDIU	A0,A0,B770	;A0=8005B770	"replay/demo.load"
JAL	7F0D0098	;V0=TRUE if resource named A0 found on Indy and filesize set to A1
ADDIU	A1,SP,001C	;A1=SP+1C: @filesize
BEQ	V0,R0,7F0BFE4C	;return if not found
//7F0BFE1C:	copy data to memory
LUI	A0,8006
ADDIU	A0,A0,B770	;A0=8005B770	"replay/demo.load"
LUI	A1,00F0	;A1=00F00000: devtool root address
JAL	7F0D001C	;load ramrom file named A0 from Indy to buffer A1, size A2
LW	A2,001C (SP)	;A2=SP+1C: filesize
LUI	A0,8009
ADDIU	A0,A0,C270	;A0=8008C270	start of data
LUI	A1,00F0	;A1=00F00000: devtool root address
JAL	70005C44	;align and read A2 bytes of data from hardware A1 to A0
ADDIU	A2,R0,00E8	;A2=0xE8
LUI	AT,8005
SW	V0,8468 (AT)	;V0->80048468 (location of demo file)
//7F0BFE4C:
LW	RA,0014 (SP)
ADDIU	SP,SP,0020
JR	RA
NOP

7F0C07BC	F52EC	record ramrom jump
		A0=memsave to use as base
ADDIU	T6,R0,0001
LUI	AT,8005
SW	T6,8488 (AT)	//80048488=1: 1- record next stage loaded
LUI	AT,8009
JR	RA
SW	A0,C5F0 (AT)	//A0->8008C5F0: record slot #

-------
7F0C07D4	F5304	stop recording
LUI	T6,8005
LW	T6,8484 (T6)	//T6<-80048484: finished recording flag
ADDIU	SP,SP,FFE8
SW	RA,0014 (SP)
BEQL	T6,R0,7F0C0810	;return if not set
LW	RA,0014 (SP)
JAL	7F0BFCB0	;update ramrom on hardware
NOP
JAL	7000BBBC	;0->80026928: reset recorder handler
OR	A0,R0,R0	;A0=NULL
LUI	AT,8005
SW	R0,8484 (AT)	//0->80048484: reset flag
LUI	AT,8005
SW	R0,8480 (AT)	//0->80048480: no longer recording?
LW	RA,0014 (SP)
//7F0C0810:
ADDIU	SP,SP,0018
JR	RA
NOP

7F0C081C	F534C	play ramrom file at hardware address A0
		normal usage is from 7F0C0970
	accepts: A0=hardware address
LUI	V1,8009
ADDIU	V1,V1,C5F4	;V1=8008C5F4	gets the address for the demo loaded
SW	A0,0000 (V1)	;A0->address for loaded demo
SW	RA,0014 (SP)
LUI	A0,8009
ADDIU	A0,A0,C270	;A0=8008C270:	target?
LW	A1,0000 (V1)	;A1=hardware address
JAL	70005C44	;V0=p->data at target A0 from hardware A1 of size A2
ADDIU	A2,R0,00E8	;A2=0xE8 size
LUI	V1,8009
ADDIU	V1,V1,C5F4	;V1=8008C5F4
LW	T6,0000 (V1)	;T6<-8008C5F4: p->loaded demo
LUI	A1,8005
ADDIU	A1,A1,8468	;A1=80048468	location the file is loaded to
ADDIU	T7,T6,00E8	;T7=T6+0xE8	T7=next memfile
SW	V0,0000 (A1)	;V0->80048468: p->demo block
SW	T7,0000 (V1)	;T7->8008C5F4: p->loaded demo
ADDIU	T8,R0,0001	;T8=1
LUI	AT,8005
SW	T8,847C (AT)	;1->8004847C: run demo at next stage load
LW	T9,0000 (A1)	;T9=80048468: p->demo
JAL	7F01D5EC	;set stage A0, mode solo, p->briefing data
LW	A0,0010 (T9)	;A0=demo+10: stage #
LUI	T0,8005
LW	T0,8468 (T0)	;T0=80048468: p->demo
JAL	7F01D59C	;A0-> difficulty
LW	A0,0014 (T0)	;A0=difficulty
ADDIU	A0,R0,000B	;A0=0xB	menu mode (stage active)
JAL	7F01A5D4	;set menu A0 to mode A1
ADDIU	A1,R0,0001	;A1=1
LW	RA,0014 (SP)
ADDIU	SP,SP,0018
JR	RA
NOP

7F0C08A8	F53D8	replay ramrom
ADDIU	SP,SP,FFE8
SW	RA,0014 (SP)
JAL	7F0C081C	;main replay routine
LUI	A0,00F0		;A0=0xF00000
LW	RA,0014 (SP)
ADDIU	SP,SP,0018
JR	RA
NOP

+_+

7000BD0C	C90C	redirect to ramrom handlers if set
LUI	V0,8002
LW	V0,6924 (V0)	;V0=80026924: p->ramrom replay TLB handler
ADDIU	SP,SP,FFE8
SW	RA,0014 (SP)
BEQ	V0,R0,7000BD48	;branch if not replaying
//7000BD20:	use the replay handler
LUI	A0,8006
LUI	A1,8006
LW	A1,530C (A1)	;A1=8006530C: 
JALR	RA,V0		;jump to replay handler (7F0C0080)
ADDIU	A0,A0,512C	;A0=8006512C: 
LUI	AT,8006
LUI	A0,8006
SW	V0,5314 (AT)	;V0->80065314: 
JAL	7000BBC8
ADDIU	A0,A0,512C	;A0=8006512C: 
//7000BD48:
LUI	A0,8006
JAL	7000BBC8
ADDIU	A0,A0,4F30	;A0=80064F30: p->cur.point in controller input index
LUI	V0,8002
LW	V0,6928 (V0)	;V0=80026928: p->ramrom record TLB handler
LUI	A0,8006
ADDIU	A0,A0,4F30	;A0=80064F30: p->cur.point in controller input index
BEQL	V0,R0,7000BD7C	;branch if not recording
LW	RA,0014 (SP)
//7000BD6C:	record controller input packet
LW	A1,01E4 (A0)	;A1=cont.index+1E4: [E]
JALR	RA,V0		;jump to record handler (7F0BFE5C)
LW	A2,01E0 (A0)	;A2=cont.index+1E0: [F]
//7000BD78:	return
LW	RA,0014 (SP)
ADDIU	SP,SP,0018
JR	RA
NOP
