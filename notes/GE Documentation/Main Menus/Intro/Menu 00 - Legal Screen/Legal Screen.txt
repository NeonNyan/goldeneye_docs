Text appearing on legal screen spans 8002A9CC-8002AABC	[0x9C3C-0x9D2C]
Init. for legal screen object 8002AABC-8002AAF8	[0x9D2C-0x9D68]

8002AABC:
0,1,3,0,
0,0,0,0,
0,0,0,0,
0,0,0,0


format:
0x0	4	x pos
0x4	4	y pos
0x8	4	alignment: 0-left align, 1-center, 2-right align
0xC	4	line offset: x lines up/down; same as +/-8 in y pos
0x10	2	text ID#
0x12	2	RESERVED

Used WITHIN:	7F00A8E0	0x
7F00A8E0	displays legal screen
	accepts: A0=p->display list
ADDIU	SP,SP,FED8
SW	S1,0034 (SP)
LUI	T6,8003
ADDIU	S1,SP,00E4	;S1=SP+E4: p->buffer
SW	S4,0040 (SP)
ADDIU	T6,T6,AABC	;T6=8002AABC
OR	S4,A0,R0	;S4=A0: p->DL
SW	RA,0044 (SP)
SW	S3,003C (SP)
SW	S2,0038 (SP)
SW	S0,0030 (SP)
ADDIU	T9,T6,003C
OR	T0,S1,R0	;T0=buffer
//7F00A914:	copy 0x3C bytes from 8002AABC to buffer
LW	AT,0000 (T6)
ADDIU	T6,T6,000C
ADDIU	T0,T0,000C
SW	AT,FFF4 (T0)
LW	AT,FFF8 (T6)
SW	AT,FFF8 (T0)
LW	AT,FFFC (T6)
BNE	T6,T9,7F00A914
SW	AT,FFFC (T0)
//7F00A938:	display image
LW	AT,0000 (T6)
OR	A0,S4,R0	;A0=S4: p->DL
JAL	7F01C0D0	;insert image DL via data @ 800232A8
SW	AT,0000 (T0)
//7F00A948:
MTC1	R0,F0
LUI	AT,3F80
MTC1	AT,F4
ADDIU	S0,SP,00A0	;S0=SP+A0: buffer
MFC1	A1,F0		;A1=0
MFC1	A2,F0		;A2=0
OR	S4,V0,R0	;S4=V0: update DL
OR	A0,S0,R0	;A0=S0: p->buffer
LUI	A3,457A		;A3=4000.0	(457A0000)
SWC1	F0,0010 (SP)	;SP+10=0
SWC1	F0,0014 (SP)	;SP+14=0
SWC1	F0,0018 (SP)	;SP+18=0
SWC1	F0,001C (SP)	;SP+1C=0
SWC1	F0,0024 (SP)	;SP+24=0
JAL	7F059694
SWC1	F4,0020 (SP)	;SP+20=1.0
//7F00A988:
LUI	S3,8003
ADDIU	S3,S3,A958	;S3=8002A958
LW	T1,0000 (S3)	;T1=8002A958: p->object instance for legal screen
SW	S0,00E4 (SP)	;SP+E4=S0: set p->generated float data
LW	T2,0008 (T1)	;T2=p->header entry for legal screen
LH	A0,000E (T2)	;A0=header+E: #obj.groups
SLL	T3,A0,0x6
JAL	7F0BD714	;p->A0 allocated space in geometry mem
OR	A0,T3,R0	;A0<<=6: A0*=40
SW	V0,00F4 (SP)	;SP+F4=V0: p->mem
OR	A0,S0,R0	;A0=S0: p->floats
JAL	7F058020	;copy 0x40 bytes from A0 to A1
OR	A1,V0,R0	;A1=V0: p->mem
LW	T4,00F4 (SP)	;T4=p->mem
LW	T5,0000 (S3)	;T5=p->obj.instance for legal screen
SW	T4,000C (T5)	;T5+C= p->mem: save to obj.instance
JAL	7F06EF68
LW	A0,0000 (S3)	;A0=S3: p->obj.instance
ADDIU	T8,R0,0003
SW	T8,00EC (SP)	;3->SP+EC: already initialized to value
SW	R0,00E8 (SP)	;0->SP+E8: fry dirty flag
SW	S4,00F0 (SP)	;SP+F0=S4: save DL
OR	A0,S1,R0	;A0=S1: p->buffer
JAL	7F074684
LW	A1,0000 (S3)	;A1=p->obj.instance for legal screen
LW	V0,0000 (S3)	;V0=p->obj.instance for legal screen
LW	S4,00F0 (SP)	;S4= p->DL
OR	S0,R0,R0	;S0=0	init.count
LW	T7,0008 (V0)	;T7=p->obj.header
OR	S1,R0,R0	;S1=0	init.offset
ADDIU	S2,SP,0058	;S2=SP+58: p->buffer
LH	T9,000E (T7)	;T9=#obj.groups
BLEZ	T9,7F00AA58	;branch if none to work with
NOP
//7F00AA10:	fiddle with each object group
LW	T6,000C (V0)	;T6=p->mem
OR	A1,S2,R0	;A1=S2: p->buffer
JAL	7F058020
ADDU	A0,T6,S1	;A0=T6+S1: mem+offset
LW	T0,0000 (S3)	;T0=p->obj.instance for legal screen
SLL	T2,S0,0x6	;T2=count*40
OR	A0,S2,R0	;A0=S2: p->buffer
LW	T1,000C (T0)	;T1=p->mem
JAL	7F058C9C
ADDU	A1,T1,T2	;A1=T1+T2: mem+offset
LW	V0,0000 (S3)	;V0=p->obj.instance for legal screen
ADDIU	S0,S0,0001	;S0++	count++
ADDIU	S1,S1,0040	;S1+=40	offset+=40
LW	T3,0008 (V0)	;T3=p->header
LH	T4,000E (T3)	;T4=#obj.groups
SLT	AT,S0,T4
BNEL	AT,R0,7F00AA14	;branch if count<#groups
LW	T6,000C (V0)
//7F00AA58:
JAL	7F0ACD98	;microcode initializer for text
OR	A0,S4,R0	;A0=S4: p->DL
//7F00AA60:	0x3F590	init. variables for legal text
LUI	S0,8003
LUI	S1,8003
LUI	S3,8004
LUI	S2,8004
OR	S4,V0,R0	;S4=V0: update DL
ADDIU	S0,S0,A9CC	;S0=8002A9CC: start of legal screen text
ADDIU	S1,S1,AABC	;S1=8002AABC: end of legal screen text
ADDIU	S2,S2,0EB8
ADDIU	S3,S3,0EB4
//7F00AA84:	0x3F5B4	write each line of text to screen
JAL	7F0C1DD8	;V0=p->text
LHU	A0,0010 (S0)	;A0=textID
LW	T5,000C (S0)	;T5=line offset
LW	A1,0000 (S0)	;A1=x pos
LW	A2,0004 (S0)	;A2=y pos
LW	A3,0008 (S0)	;A3=alignment
LW	T8,0000 (S2)	;T8=p->font1
LW	T7,0000 (S3)	;T7=p->font2
SW	V0,0014 (SP)	;SP+14=p->text
OR	A0,S4,R0	;A0=S4: p->DL
SW	T5,0010 (SP)	;SP+10=width multiplier
SW	T8,0018 (SP)	;SP+18=p->font1
JAL	7F00A7E4	;display aligned white text to screen
SW	T7,001C (SP)	;SP+1C=p->font2
ADDIU	S0,S0,0014	;S0+=14: advance to next entry
SLTU	AT,S0,S1
BNEZ	AT,7F00AA84	;loop until at endpoint
OR	S4,V0,R0	;S4=V0: update DL
//7F00AACC:	return to sender
LW	RA,0044 (SP)
LW	S0,0030 (SP)
LW	S1,0034 (SP)
LW	S2,0038 (SP)
LW	S3,003C (SP)
LW	S4,0040 (SP)
JR	RA
ADDIU	SP,SP,0128
