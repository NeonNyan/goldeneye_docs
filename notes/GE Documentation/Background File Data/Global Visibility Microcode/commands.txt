format:
0x0	1	type
0x1	1	#commands, 0x8 each
0x2	2	RESERVED
0x4	var	data

for multi-command entries, 645 is a type identifier for portal offsets and 65 the identifier for room numbers.

type 00:	end
00.01.0000	00000000

type 01:	push d to stack
01.01.0000	dddddddd

type 02:	pull off stack
02.01.0000	00000000

type 03:	AND and merge last two values on stack
03.01.0000	00000000

type 04:	OR and merge last two values on stack
04.01.0000	00000000

type 05:	! last value on stack
05.01.0000	00000000

type 06:	XOR and merge last two values on stack
06.01.0000	00000000

type 14:	push TRUE/FALSE to stack if within range of rooms
14.03.0000	00000000	65000000	000000rr	65000000	000000rr

type 1E:	force visible
1E.01.0000	00000000

type 1F:	match visibility to that of portal
1F.02.0000	00000000	64000000	pppppppp

type 20:	add visible room
20.02.0000	00000000	65000000	000000rr

type 21:	initialize block; removes visibility
21.01.0000	00000000

type 22:	make visible if portal can view room
22.02.0000	00000000	64000000	pppppppp

type 23:	remove visibility if portal can not view room
23.02.0000	00000000	64000000	pppppppp

type 24:	disable room	(1->room[r]+34)
24.02.0000	00000000	65000000	000000rr

type 25:	disable rooms	(1->room[r1:r2]+34)
24.03.0000	00000000	65000000	000000r1	65000000	000000r2

type 26:	preload room
26.02.0000	00000000	65000000	000000rr

type 27:	preload range of rooms
27.03.0000	00000000	65000000	000000rr	65000000	000000rr

type 50:	IF statement (re-entrant)
50.01.0000	00000000

type 51:	disable reading commands; if reading disabled, also disables parent
51.01.0000	00000000

type 52:	ENDIF FALSE, command reading enabled
52.01.0000	00000000

type 5A:	IF(pulled condition) statement (re-entrant)
5A.01.0000	00000000

type 5B:	toggle reading/ignoring commands
5B.01.0000	00000000

type 5C:	ENDIF
5C.01.0000	00000000
