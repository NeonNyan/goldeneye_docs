7F0C6090	FABC0	display positions on MP radar
	accepts: A0=p->display list
ADDIU	SP,SP,FF78
SW	RA,006C (SP)
SW	S7,0068 (SP)
SW	S6,0064 (SP)
SW	S5,0060 (SP)
SW	S4,005C (SP)
SW	S3,0058 (SP)
SW	S2,0054 (SP)
SW	S1,0050 (SP)
SW	S0,004C (SP)
SDC1	F30,0040 (SP)
SDC1	F28,0038 (SP)
SDC1	F26,0030 (SP)
SDC1	F24,0028 (SP)
SDC1	F22,0020 (SP)
SDC1	F20,0018 (SP)
//7F0C60D0:
JAL	7F014758	;V0=scenario
SW	A0,0088 (SP)	;SP+88= DL
JAL	7F09B150	;V0=8007A0B8: cur.player#
OR	S4,V0,R0	;S4=V0: scenario
JAL	7F09A464	;V0=#players
SW	V0,0070 (SP)	;SP+70= cur.player#
ADDIU	AT,R0,0001
BNE	V0,AT,7F0C60FC	;branch if multiplayer
SW	V0,0074 (SP)	;SP+74= #players
BEQ	R0,R0,7F0C6588	;return if solo
LW	V0,0088 (SP)
//7F0C60FC:	multiplayer
LUI	S7,8008
ADDIU	S7,S7,A0B0	;S7=8008A0B0: p->BONDdata
LW	V0,0000 (S7)
LW	T6,29C4 (V0)	;T6=BONDdata+29C4: 
BNEZ	T6,7F0C6120	;return if set
NOP
LW	T7,00D8 (V0)	;T7=SP+0x50
BEQ	T7,R0,7F0C6128
NOP
//7F0C6120:	return
BEQ	R0,R0,7F0C6588	;return
LW	V0,0088 (SP)
//7F0C6128:	test if no radar
JAL	7F0927BC	;V0= TRUE if cheat A0 activated for cur.player
ADDIU	A0,R0,0017	;A0=17: "No Radar (Multi)" cheat
BEQ	V0,R0,7F0C6140	;continue if radar present
NOP
BEQ	R0,R0,7F0C6588	;return
LW	V0,0088 (SP)
//7F0C6140:
JAL	70004514	;V0= [p@800232A8+20]
NOP
SLL	S0,V0,0x10
SRA	T8,S0,0x10
JAL	7000449C	;V0= [p@800232A8+1C]
OR	S0,T8,R0
ADDU	S5,V0,S0
JAL	70004524	;V0= [p@800232A8+22]
ADDIU	S5,S5,FFD7	;S5-=0x29: x position
LW	T9,0074 (SP)	;T9=#players
ADDIU	S6,V0,001A	;S6=V0+1A: y position
ADDIU	A0,SP,0088
SLTI	AT,T9,0003	;TRUE if 2 player
BNEZ	AT,7F0C6190	;branch if 2 player
LUI	A1,8009
LW	T1,0070 (SP)	;T1=SP+70: cur.player#
ANDI	T2,T1,0001	;T2= TRUE if player 2 or 4 (right side of screen)
BNEL	T2,R0,7F0C6194
ADDIU	T3,R0,0002
ADDIU	S5,S5,000F	;S5+=F: x position
//7F0C6190:
ADDIU	T3,R0,0002
SW	T3,0010 (SP)
LW	A1,D12C (A1)	;A1=8008D12C: radar backdrop
ADDIU	A2,R0,0002
JAL	7F076D68	;append image to p->DL A0 using image declaration A1
OR	A3,R0,R0
JAL	7F0ACD98	;microcode
LW	A0,0088 (SP)
//7F0C61B0:	set combiner
ADDIU	T4,V0,0008	;T4=V0+8: next DL op
SW	T4,0088 (SP)	;SP+88= DL
LUI	T5,FCFF
LUI	T6,FF65
ORI	T6,T6,FEFF	;T6=FF65FEFF: 
ORI	T5,T5,B3FF	;T5=FCFFB3FF: 
SW	T5,0000 (V0)
SW	T6,0004 (V0)
//7F0C61D0:	set foreground colour
LW	T7,0088 (SP)
LUI	T9,FA00
ADDIU	T1,R0,00A0	;T1=000000A0:	fg colour	[black]
ADDIU	T8,T7,0008	;T8=T7+8: next DL op
SW	T8,0088 (SP)	;SP+88= DL
ADDIU	T4,S5,0010	;T4=S5+10: x position right offset
SW	T1,0004 (T7)	;DL+4= rdp_setprimcolour (L)
SW	T9,0000 (T7)	;DL+0= rdp_setprimcolour (U)
//7F0C61F0:	set textured rectangle
LW	A0,0088 (SP)
SLL	T5,T4,0x2	;T5=T4*4: upper left x
ANDI	T6,T5,0FFF
ADDIU	T9,S6,0010	;T9=S6+10: y position upper offset
SLL	T1,T9,0x2	;T1=T9*4: upper left y
SLL	T7,T6,0xC	;T7=ulx
LUI	AT,E400
OR	T8,T7,AT	;T8=texrect | ulx
ANDI	T2,T1,0FFF	;T2=uly
ADDIU	T4,S5,FFF0	;T4=S6-10: x position left offset
ADDIU	T3,A0,0008
SW	T3,0088 (SP)	;SP+88= DL
SLL	T5,T4,0x2	;T5=T4*4: lower right x
ADDIU	T9,S6,FFF0	;T9=S6-10: y position lower offset
SLL	T1,T9,0x2	;T1=T9*4: lower right y
ANDI	T6,T5,0FFF
OR	T3,T8,T2	;T3=texrect | ulx | uly
ANDI	T8,T1,0FFF
SLL	T7,T6,0xC	;T7=lrx
OR	T2,T7,T8	;T2=lrx | lry
SW	T2,0004 (A0)	;DL+4: rdp_texrect (L)
SW	T3,0000 (A0)	;DL+0: rdp_texrect (U)
//7F0C6248:	second half of textured rectangle (mapping)
LW	T3,0088 (SP)	;SP+88= DL
LUI	T6,0010
ORI	T6,T6,0010	;T6=00100010: upper left s | upper left t
ADDIU	T4,T3,0008
SW	T4,0088 (SP)	;SP+88= DL
LUI	T5,B400
SW	T5,0000 (T3)	;DL+0: rsp_uc05_rdphalf_1 (U)
SW	T6,0004 (T3)	;DL+4: rdp_texrect_2 (U)
//7F0C6268:
LW	T9,0088 (SP)	;SP+88= DL
LUI	T8,0400
ORI	T8,T8,0400	;T8=04000400: delta-s delta-x | delta-t delta-y
ADDIU	T1,T9,0008
SW	T1,0088 (SP)	;SP+88= DL
LUI	T7,B300
SW	T7,0000 (T9)	;DL+0: rsp_uc05_rdphalf_2 (U)
SW	T8,0004 (T9)	;DL+4: rdp_texrect_2 (L)
//7F0C6288:	first player blip background
ADDIU	T3,R0,0040	;T3=00000040: colour	[1/4 black]
ADDIU	T2,S6,0002	;T2=y position + 2: lry
SW	T2,0010 (SP)	;SP+10= lry
SW	T3,0014 (SP)	;SP+14= rgba
LW	A0,0088 (SP)	;A0=SP+88: DL
ADDIU	A1,S5,FFFE	;A1=x position - 2: ulx
ADDIU	A2,S6,FFFE	;A2=y position - 2: uly
JAL	7F0AD014	;draw coloured box
ADDIU	A3,S5,0002	;A3=x position + 2: lrx
//7F0C62AC:	determine scenario
ADDIU	AT,R0,0005
BEQ	S4,AT,7F0C62DC	;branch if team 2vs2
SW	V0,0088 (SP)
ADDIU	AT,R0,0006
BEQ	S4,AT,7F0C62DC	;branch if team 3vs1
ADDIU	AT,R0,0007
BEQ	S4,AT,7F0C62DC	;branch if team 2vs1
ADDIU	AT,R0,0002
BEQ	S4,AT,7F0C62DC	;branch if flag tag
ADDIU	AT,R0,0003
BNE	S4,AT,7F0C6338	;branch if not MwtGX
LW	A0,0088 (SP)
//7F0C62DC:	team/coloured squares
LW	T4,0070 (SP)	;T4=SP+70: cur.player#
LUI	T6,8008
LW	A0,0088 (SP)
SLL	T5,T4,0x3
SUBU	T5,T5,T4
SLL	T5,T5,0x4
ADDU	T6,T6,T5
LBU	T6,9F59 (T6)	;T6=stats::scenario flags
ADDIU	A1,S5,FFFF	;A1=x position - 1: ulx
ADDIU	A2,S6,FFFF	;A2=y position - 1: uly
BNEZ	T6,7F0C6318	;branch if team 2 (blue)
ADDIU	A3,S5,0001	;A3=x position + 1: lrx
//7F0C630C:	team 1 (red)
LUI	V0,FF77
BEQ	R0,R0,7F0C6320
ORI	V0,V0,77FF
//7F0C6318:	team 2 (blue)
LUI	V0,8888
ORI	V0,V0,FFFF
//7F0C6320:
ADDIU	T9,S6,0001	;T9=y position + 1: lry
SW	T9,0010 (SP)	;SP+10= lry
JAL	7F0AD014	;draw coloured box
SW	V0,0014 (SP)	;SP+14= rgba
BEQ	R0,R0,7F0C635C
SW	V0,0088 (SP)	;SP+88= DL
//7F0C6338:	default coloured boxes
ADDIU	T1,S6,0001	;T1=y position + 1: lry
ADDIU	T7,R0,FFA0	;T7=FFFFFFA0: colour	[white]
SW	T7,0014 (SP)	;SP+14= rgba
SW	T1,0010 (SP)	;SP+10= lry
ADDIU	A1,S5,FFFF	;A1=x position - 1: ulx
ADDIU	A2,S6,FFFF	;A2=y position - 1: uly
JAL	7F0AD014	;draw coloured box
ADDIU	A3,S5,0001	;A3=x position + 1: lrx
SW	V0,0088 (SP)	;SP+88= DL
//7F0C635C:	set up loop to display other player blips
LW	T8,0074 (SP)	;T8=#players
OR	S3,R0,R0	;S3=0	count=0
LUI	AT,4334
BLEZ	T8,7F0C6580	;quit if invalid
NOP
MTC1	AT,F30		;F30=180.0 [43340000]
NOP
//7F0C6378:	draw squares for other players
LW	T2,0070 (SP)	;T2=SP+70: cur.player#
SLL	T3,S3,0x2
LUI	A0,8008
BEQ	S3,T2,7F0C6570	;loop if current player (already drew the central dot)
ADDU	A0,A0,T3
LW	A0,9EE0 (A0)	;A0=80079EE0+offset: player S3's p->BONDdata
LW	T4,00D8 (A0)	;T4=player button control
BNEL	T4,R0,7F0C6574	;try next if not disabled (dead)
LW	T8,0074 (SP)
LW	T5,0000 (S7)	;T5=p->org.BONDdata
LW	V0,00A8 (A0)	;V0=S3's p->positiondata
LUI	AT,4180
LW	V1,00A8 (T5)	;V1=org p->positiondata
LWC1	F28,0008 (V0)	;F28=cur.xpos
LWC1	F18,0010 (V0)	;F18=cur.zpos
LWC1	F16,0008 (V1)	;F18=org.xpos
LWC1	F10,0010 (V1)	;F10=org.zpos
MTC1	AT,F8		;F8=16.0 [41800000]
SUB.S	F20,F28,F16	;F20=difference in xpos
LUI	AT,457A
MTC1	AT,F16		;F16=4000.0 [457A0000]
SUB.S	F22,F18,F10	;F22=difference in ypos
ADDIU	T6,R0,0010
MTC1	T6,F10
DIV.S	F26,F8,F16	;F26=16.0 / 4000.0 = 0.004
MOV.S	F12,F20		;F12=xdif
MOV.S	F14,F22		;F14=ydif
JAL	7F05AA30	;F0=lateral rotation
CVT.S.W	F24,F10	;F24=(float) 16.0
//7F0C63EC:	determine vector (direction + distance)
MUL.S	F6,F0,F30	;F6=rotation * 180.0
LUI	AT,8006
LWC1	F8,BD20 (AT)	;F8=8005BD20: Pi
MUL.S	F4,F20,F20	;F4=xdif^2
LW	T9,0000 (S7)	;T9=org.BONDdata
LWC1	F16,0148 (T9)	;F16=org.lateral rotation
DIV.S	F10,F6,F8	;F10=rotation * 180.0/Pi	that's either into or out of radians
MUL.S	F6,F22,F22	;F6=ydif^2
ADD.S	F12,F4,F6	;F12=xdif^2 + ydif^2
ADD.S	F18,F10,F16	;F18=org.rotation + cur.rotation
JAL	7001F7E0	;F0=sqrt(F12)	distance
ADD.S	F28,F18,F30	;F28=org.rotation + cur.rotation + 180.0
//7F0C641C:	determine scenario
MUL.S	F2,F0,F26	;F2=distance * 0.004
ADDIU	AT,R0,0005
SLL	T1,S3,0x3
SUBU	T1,T1,S3
BEQ	S4,AT,7F0C6458	;branch if scenario team 2vs2
MOV.S	F22,F2		;F22=distance * 0.004
ADDIU	AT,R0,0006
BEQ	S4,AT,7F0C6458	;branch if scenario team 3vs1
ADDIU	AT,R0,0007
BEQ	S4,AT,7F0C6458	;branch if scenario team 2vs1
ADDIU	AT,R0,0002
BEQ	S4,AT,7F0C6458	;branch if scenario Flag Tag
ADDIU	AT,R0,0003
BNEL	S4,AT,7F0C64C0	;branch if not scenario MwtGX
C.LT.S	F2,F24
//7F0C6458:	colourized radar boxes
C.LT.S	F2,F24
LUI	T7,8008
ADDIU	T7,T7,9EF0
SLL	T1,T1,0x4
BC1F	7F0C6494	;branch if 0.004*distance >= 16.0
ADDU	V0,T1,T7	;V0=80079EF0+offset: p->cur.stats
LBU	T8,0069 (V0)	;T8=cur.stats::scenario flags
LUI	S1,2828
BNEZ	T8,7F0C648C	;branch if team 2
NOP
//7F0C6480:	team 1 (red)
LUI	S1,FF00
BEQ	R0,R0,7F0C64E0
ORI	S1,S1,00A0	;S1=FF0000A0: colour	[red]
//7F0C648C:	team 2 (blue)
BEQ	R0,R0,7F0C64E0
ORI	S1,S1,FFFF	;S1=2828FFFF: colour	[blue]
//7F0C6494:
LBU	T2,0069 (V0)	;T2=cur.stats::scenario flags
MOV.S	F22,F24		;F22=F24: set to 16.0 - edge of radar
LUI	S1,2828
BNEZ	T2,7F0C64B4	;branch if team 2
NOP
//7F0C64A8:	team 1 (red)
LUI	S1,FF00
BEQ	R0,R0,7F0C64E0
ORI	S1,S1,0060	;S1=FF000060: colour	[red]
//7F0C64B4:	team 2 (blue)
BEQ	R0,R0,7F0C64E0
ORI	S1,S1,FFB0	;S1=2828FFB0: colour	[blue]
//7F0C64BC:	normal game modes
C.LT.S	F2,F24
LUI	S1,FFFF
ORI	S1,S1,0060	;S1=FFFF0060: colour	[yellow]
BC1FL	7F0C64E0	;branch if 0.004*distance >= 16.0
MOV.S	F22,F24
LUI	S1,FFFF
BEQ	R0,R0,7F0C64E0
ORI	S1,S1,00A0	;S1=FFFF00A0: colour	[yellow]
//7F0C64DC:
MOV.S	F22,F24
//7F0C64E0:
LUI	AT,8006
LWC1	F8,BD24 (AT)	;F8=8005BD24: 0.017453	Pi/180
MUL.S	F20,F28,F8	;rotation * radian conversion
JAL	7F057EAC
MOV.S	F12,F20		;F12=F20: rotation
MUL.S	F10,F0,F22
MOV.S	F12,F20
TRUNC.W.S	F16,F10
MFC1	T4,F16
JAL	7F057EA0
ADDU	S0,T4,S5
//7F0C650C:	draw black base box on radar
MUL.S	F18,F0,F22
ADDIU	T1,R0,0040	;T1=00000040: colour	[1/4 black]
SW	T1,0014 (SP)	;SP+14= rgba
LW	A0,0088 (SP)	;A0=SP+88: DL
ADDIU	A1,S0,FFFE
ADDIU	A3,S0,0002
TRUNC.W.S	F4,F18
MFC1	T6,F4
NOP
ADDU	V0,T6,S6
ADDIU	T9,V0,0002
OR	S2,V0,R0
SW	T9,0010 (SP)
JAL	7F0AD014	;draw coloured box
ADDIU	A2,V0,FFFE
//7F0C6548:	draw inner box on top of it
ADDIU	T7,S2,0001
SW	V0,0088 (SP)
SW	T7,0010 (SP)
OR	A0,V0,R0
ADDIU	A1,S0,FFFF
ADDIU	A2,S2,FFFF
ADDIU	A3,S0,0001
JAL	7F0AD014	;draw coloured box
SW	S1,0014 (SP)	;SP+14=rgba
SW	V0,0088 (SP)
//7F0C6570:	loop for each player
LW	T8,0074 (SP)	;T8=#players
ADDIU	S3,S3,0001	;S3++	count++
BNEL	S3,T8,7F0C637C	;loop for all players
LW	T2,0070 (SP)
//7F0C6580:	reset combiner
JAL	7F0ACEF0	;set combiner: bayer, lod, perspective
LW	A0,0088 (SP)	;A0=SP+88: DL
//7F0C6588:	return
LW	RA,006C (SP)
LDC1	F20,0018 (SP)
LDC1	F22,0020 (SP)
LDC1	F24,0028 (SP)
LDC1	F26,0030 (SP)
LDC1	F28,0038 (SP)
LDC1	F30,0040 (SP)
LW	S0,004C (SP)
LW	S1,0050 (SP)
LW	S2,0054 (SP)
LW	S3,0058 (SP)
LW	S4,005C (SP)
LW	S5,0060 (SP)
LW	S6,0064 (SP)
LW	S7,0068 (SP)
JR	RA
ADDIU	SP,SP,0088
