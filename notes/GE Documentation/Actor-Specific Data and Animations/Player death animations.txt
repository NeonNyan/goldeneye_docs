800364D8	0x15748	12 longs, probably offsets

most likely death animations

//7F006160:	determine number of entries, save to 8003650C
LUI	A0,8003
ADDIU	A0,A0,64D8
SLL	T0,R0,0x2
ADDU	T1,A0,T0
LW	T3,0000 (T1)	;T3=800364D8: 000030B8, first of values
LUI	V1,8003
ADDIU	V1,V1,650C
SW	R0,0000 (V1)	;0->8003650C: counter of values
BEQ	T3,R0,7F0061A8
OR	V0,R0,R0	;V0=counter
ADDIU	T4,V0,0001
//7F00618C:
SLL	T2,T4,0x2
ADDU	T9,A0,T2
LW	T5,0000 (T9)	;retrieve value
SW	T4,0000 (V1)	;save running total
OR	V0,T4,R0
BNEL	T5,R0,7F00618C	;keep indexing
ADDIU	T4,V0,0001
//7F0061A8:


Used here when blowing a player up in multiplayer.  Recalls a random entry
7F080B34:	recall and use player death animation, or something like that
...
//7F080BC4:
JAL	7000A450	;ret. V0=rand
SW	V0,0044 (SP)
LUI	T9,8003
LW	T9,650C (T9)	;#entries
LW	T8,0044 (SP)
LUI	T2,8003
LUI	T3,8007
DIVU	T8,T9
MFHI	T0
SLL	T1,T0,0x2	;T0=random entry in range
ADDU	T2,T2,T1
LW	T2,64D8 (T2)	;load the animation offset
LW	T3,9538 (T3)	;T3=80069538: p->animation binaries
MFC1	A2,F20
BNEZ	T9,7F080C08
NOP
BREAK
ANDI	A1,V0,0001
LUI	A3,3F80
JAL	7F08EA48
ADDU	A0,T2,T3	;final animation value

//7F08B3AC:
LUI	A3,8003
LW	A3,650C (A3)	;A3=#ani
OR	A1,R0,R0
OR	S0,R0,R0
BLEZ	A3,7F08B400	;skip if stupid
LUI	T9,8003
ADDIU	V0,T9,64D8	;V0=800364D8: base for ani table
LUI	V1,8007
SLL	T1,A3,0x2	;T1=entry -> offset
ADDU	A0,T1,V0	;A0=entry
LW	V1,9538 (V1)
LW	A2,1284 (T0)	;A2=player's cur animation; T0=playerdata
LW	T2,0000 (V0)
//7F08B3E0:
ADDIU	V0,V0,0004	;span the list, looking for a hit
SLTU	AT,V0,A0
ADDU	T3,T2,V1
BNE	A2,T3,7F08B3F8
NOP
ADDIU	A1,R0,0001
//7F08B3F8:
BNEL	AT,R0,7F08B3E0
LW	T2,0000 (V0)
//7F08B400:
BEQ	A1,R0,7F08B418
LUI	AT,3F00
LW	A2,1284 (T0)
MTC1	AT,F12
BEQ	R0,R0,7F08B470
SW	A2,009C (SP)
//7F08B418:
JAL	7000A450
SWC1	F2,0094 (SP)
LUI	T4,8003
LW	T4,650C (T4)
LUI	T7,8003
LUI	T8,8007
DIVU	V0,T4
MFHI	T5
SLL	T6,T5,0x2
ADDU	T7,T7,T6
LW	T7,64D8 (T7)
LW	T8,9538 (T8)
LW	T0,0000 (S1)
LUI	AT,3F00
ADDU	T1,T7,T8
SW	T1,009C (SP)
MTC1	AT,F12
LWC1	F2,0094 (SP)
BNEZ	T4,7F08B46C
NOP
BREAK
LW	A2,1284 (T0)
MTC1	R0,F14
NOP
SWC1	F14,008C (SP)
BEQ	R0,R0,7F08B858
SWC1	F14,0088 (SP)




[minor edit so they use less and follow 0A method]
000030B8	001A
000031DC	001B
000032C8	001C
000033AC	001D
000034D4	001E
000035C8	001F
000036D8	0020
0000384C	0021
000039C0	0022
00003AF0	0023
00003C10	0024
00003D04	0025

!REVISED!
//7F006168:	0x3AC98
00004040	*SLL	T0,R0,0x1
-
852B0000	*LH	T3,0000 (T1)

//7F00618C:	0x3ACBC
000C5040	*SLL	T2,T4,0x1
-
85EF0000	*LH	T5,0000 (T9)	;retrieve value

//7F080BC4:	0xB56F4
	-JAL	7000A450	;ret. V0=rand
	-SW	V0,0044 (SP)
	-LUI	T9,8003
	-LW	T9,650C (T9)	#entries
	-LW	T8,0044 (SP)
	-LUI	T2,8003
3C0B8003	*LUI	T3,8003
53200003	BEQL	T9,R0,+3
00004025	OR	T0,R0,R0
0319001B	DIVU	T8,T9
00004010	MFHI	T0
00084840	*SLL	T1,T0,0x1	;T0=random entry in range
01495021	ADDU	T2,T2,T1
854A64D8	*LH	T2,64D8 (T2)	;load the animation offset
000A5080	+SLL	T2,T2,0x2
014B2021	ADDU	A0,T2,T3	;final animation value
4406A000	MFC1	A2,F20
	-ANDI	A1,V0,0001
	-LUI	A3,3F80
	-JAL	7F08EA48
8C849D6C	LW	A0,9D6C (A0)	;T3=table of animation binary pointers


//7F08B3AC:	0xBFEDC
LUI	A3,8003
LW	A3,650C (A3)	;A3=8003650C+offset:	#ani
OR	A1,R0,R0
OR	S0,R0,R0
BLEZ	A3,7F08B400	;skip if stupid
LUI	T9,8003
ADDIU	V0,T9,64D8	;V0=800364D8: base for ani table
//7F08B3C8:	0xBFEF8
00074840	*SLL	T1,A3,0x1	;T1=entry -> offset
01222021	ADDU	A0,T1,V0	;A0=entry
27239D6C	*ADDIU	V1,9D6C (T9)	;V1=80029D6C:	pointers to animation binaries
8D061284	LW	A2,1284 (T0)	;T0=cur playerdata
844A0000	*LH	T2,0000 (V0)	;T2=ani #
//7F08B3DC:	0xBFF0C
000A5080	*SLL	T2,T2,0x2
	*ADDIU	V0,V0,0002
	-SLTU	AT,V0,A0
	-ADDU	T3,T2,V1
8D6B0000	*LW	T3,0000 (T3)
50CB0001	*BEQL	A2,T3,7F08B3F8
	-ADDIU	A1,R0,0001
//7F08B3F8:	0xBFF28
5420FFF8	*BNEL	AT,R0,7F08B3DC
844A0000	*LH	T2,0000 (V0)
//7F08B400:
BEQ	A1,R0,7F08B418
LUI	AT,3F00
LW	A2,1284 (T0)
MTC1	AT,F12
BEQ	R0,R0,7F08B470
SW	A2,009C (SP)
//7F08B418:	0xBFF48
JAL	7000A450
SWC1	F2,0094 (SP)
3C188003	*LUI	T8,8003
8F0C650C	*LW	T4,650C (T8)
59800003	*BLEZL	T4,+3
00006825	*OR	T5,R0,R0
004C001B	-DIVU	V0,T4
00006810	-MFHI	T5
000D7040	*SLL	T6,T5,0x1	;offset in table
030E7821	*ADDU	T7,T8,T6
85EF64D8	*LH	T7,64D8 (T7)	;T7=ani#
000F7880	*SLL	T7,T7,0x2
8E280000	-LW	T0,0000 (S1)	;T0=specific playerdata
3C013F00	-LUI	AT,3F00
01F84821	-ADDU	T1,T7,T8
8D299D6C	*LW	T1,9D6C (T1)	;80029D6C+
AFA9009C	SW	T1,009C (SP)
44816000	MTC1	AT,F12
C7A20094	LWC1	F2,0094 (SP)
00000000	-NOP
00000000	*NOP
LW	A2,1284 (T0)
MTC1	R0,F14
NOP
SWC1	F14,008C (SP)
BEQ	R0,R0,7F08B858
SWC1	F14,0088 (SP)