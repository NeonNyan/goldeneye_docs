7F03C648	71178	handles respawn, possibly more
ADDIU	SP,SP,FFA8
SW	RA,0024 (SP)
SW	S3,0020 (SP)
SW	S2,001C (SP)
SW	S1,0018 (SP)
JAL	7F03291C
SW	S0,0014 (SP)
JAL	7F03A424	;V0=cur.posdata entry	(8006)
NOP
BEQ	V0,R0,7F03CA14	;quit if end of list or invalid
OR	S1,V0,R0	;S1=V0: posdata
LW	T6,0024 (S1)
ADDIU	AT,R0,0003
OR	S2,R0,R0
SW	T6,004C (SP)
LBU	V0,0000 (S1)	;V0=obj.pos+0: type
BNEL	V0,AT,7F03C6B0	;branch if not type 3: guard
ADDIU	AT,R0,0001
LW	S0,0004 (S1)
JAL	7F062B00
ADDIU	A0,S0,0180
JAL	7F062B00
ADDIU	A0,S0,01AC
BEQ	R0,R0,7F03C9C4
ADDIU	AT,R0,0005
//7F03C6AC:
ADDIU	AT,R0,0001
BEQ	V0,AT,7F03C6C8	;branch if type 1: norm.obj
ADDIU	AT,R0,0004
BEQ	V0,AT,7F03C6C8	;branch if type 4: weapon
ADDIU	AT,R0,0002
BNEL	V0,AT,7F03C90C	;branch if not type 2: door
ADDIU	AT,R0,0007
//7F03C6C8:
LH	V0,0002 (S1)	;V0=obj.posdata+2: value?
LW	S0,0004 (S1)	;S0=obj.posdata+4: p->obj.data
OR	S3,R0,R0	;S3=0
BLEZ	V0,7F03C8E4	;branch if value negative
SLTI	AT,V0,003C
BNEZ	AT,7F03C6E8	;branch if not 1-3B
ADDIU	V1,R0,0001	;V1=1
OR	V1,R0,R0	;V1=0
//7F03C6E8:
LUI	T7,8005
LW	T7,8374 (T7)	;T7=80048374: 1 if not paused!
SUBU	T8,V0,T7	;T8=value-timer
SH	T8,0002 (S1)	;value-=timer
LH	T9,0002 (S1)	;T9=time
SLTI	AT,T9,003C
BEQL	AT,R0,7F03C730	;branch if not 0-3B
LH	V0,0002 (S1)
BNEZ	V1,7F03C72C	;branch if just hit valid range
OR	A0,S1,R0	;A0=S1: obj.posdata
JAL	7F03C574
SW	V1,0038 (SP)	;SP+38=V1: 0
BNEZ	V0,7F03C72C
LW	V1,0038 (SP)
LH	T0,0002 (S1)
ADDIU	T1,T0,003C
SH	T1,0002 (S1)
//7F03C72C:
LH	V0,0002 (S1)
BGTZ	V0,7F03C770
SLTI	AT,V0,003C
SH	R0,0002 (S1)
LBU	T2,0002 (S0)	;T2=obj.data+2: state
ANDI	T3,T2,0010
BEQL	T3,R0,7F03C760	;branch if state 0x10 not set
LW	T6,0064 (S0)
LW	T4,0064 (S0)	;T4=obj.data+64: runtimeflags
ORI	T5,T4,1000
BEQ	R0,R0,7F03C8E4
SW	T5,0064 (S0)	;runtimeflags |= 10000000
//7F03C75C:
LW	T6,0064 (S0)	;T6=obj.data+64: runtimeflags
ADDIU	AT,R0,EFFF
AND	T7,T6,AT
BEQ	R0,R0,7F03C8E4
SW	T7,0064 (S0)	;runtimeflags |= 10000000
//7F03C770:
BEQL	AT,R0,7F03C8E8
LBU	T9,0003 (S0)
BNEL	V1,R0,7F03C8E8
LBU	T9,0003 (S0)
MTC1	R0,F0
LWC1	F4,0070 (S0)
C.EQ.S	F0,F4
NOP
BC1FL	7F03C868
LBU	T0,0002 (S0)
LBU	T8,0002 (S0)	;T8=obj.data+2: state
ANDI	T9,T8,0080	;T9= state & 80: destroyed flag
BNEL	T9,R0,7F03C868	;branch if destroyed
LBU	T0,0002 (S0)
//7F03C7A8:
LW	T0,0008 (S0)	;T0=obj.data+8: obj.flags1
ANDI	T1,T0,8000	;T1= obj.flags1 & 80000000: activated
BEQ	T1,R0,7F03C840	;branch if flag not set
NOP
JAL	7F03E18C
OR	A0,S1,R0	;A0=S1: obj.posdata
JAL	7F03A538
OR	A0,S1,R0	;A0=S1: obj.posdata
LW	T2,0064 (S0)	;T2=obj.data+64: runtimeflags
ADDIU	AT,R0,F7FF
OR	A0,S1,R0	;A0=S1: obj.posdata
AND	T3,T2,AT
JAL	7F056BA8
SW	T3,0064 (S0)	;runtimeflags ^ 08000000
SW	V0,0030 (SP)
LH	T4,0006 (S0)	;T4=obj.data+6: preset
JAL	7F0BDF04	;V0=cur.stage# (?)
SW	T4,002C (SP)	;SP+2C= preset
LW	T5,0030 (SP)
LW	T6,002C (SP)	;T6=preset
OR	A0,V0,R0	;A0=V0: 
JAL	7F056EA0
ADDU	A1,T5,T6
BEQL	V0,R0,7F03C8B0
LBU	T8,0003 (S0)
LW	T7,0010 (V0)
BEQL	T7,R0,7F03C8B0
LBU	T8,0003 (S0)
LW	A0,0014 (S0)
LW	A1,0014 (A0)
JAL	7F06CE78	;[float] A1->A0+14
SW	V0,0028 (SP)
LW	V1,0028 (SP)
LW	A0,0010 (S0)
JAL	7F03A5A4
LW	A1,0010 (V1)
BEQ	R0,R0,7F03C8AC
ADDIU	S3,R0,0001
//7F03C840:
JAL	7F03A404	;state | 4
OR	A0,S1,R0	;A0=S1: obj.posdata
JAL	7F03E134
OR	A0,S1,R0	;A0=S1: obj.posdata
LW	T8,0064 (S0)	;T8=obj.data+64: runtimeflags
ADDIU	AT,R0,F7FF
AND	T9,T8,AT
BEQ	R0,R0,7F03C8AC
SW	T9,0064 (S0)	;runtimeflags ~| 00000800
//7F03C864:	respawn
LBU	T0,0002 (S0)	;T0=obj.data+2: state
ANDI	T1,T0,0008	;T1= state & 08: repair collisions flag
BEQL	T1,R0,7F03C888	;branch if removing collisions
LW	T4,0008 (S0)
LW	T2,0008 (S0)	;T2=obj.data+8: obj.flags1
ORI	T3,T2,0100
BEQ	R0,R0,7F03C894
SW	T3,0008 (S0)	;obj.flags1 |= 00000100: collisions...
//7F03C884:	flag not set
LW	T4,0008 (S0)	;T4=obj.flags1
ADDIU	AT,R0,FEFF
AND	T5,T4,AT	;T5=obj.flags1 & FFFFFEFF: untoggle collisions
SW	T5,0008 (S0)	;T5=obj.flags1 ^ collisions
//7F03C894:
LBU	T6,0002 (S0)	;T6=obj.state flags
SWC1	F0,0070 (S0)	;obj.data+70= 0.0: cur.damage?
LW	A0,0014 (S0)
ANDI	T7,T6,FF7F	;T7=state & FF7F: unmask "dead"
JAL	7F050DE8
SB	T7,0002 (S0)	;obj.state ^ dead
//7F03C8AC:	reset body armour health
LBU	T8,0003 (S0)	;T8=S0+3: obj.type
ADDIU	AT,R0,0015
LUI	A0,8006
BNE	T8,AT,7F03C8C8	;branch if not type 15: BA
ADDIU	A1,R0,0052	;A1=SE 052
LWC1	F6,0080 (S0)	;F6=obj.data+80: max health
SWC1	F6,0084 (S0)	;obj.data+84=max health: cur.health set to full
//7F03C8C8:
BNEZ	S3,7F03C8E4	;skip if not playing sound
OR	A2,R0,R0	;A2=0
JAL	70008E08	;play sound effect A1
LW	A0,3720 (A0)	;A0=80063720: buffer
OR	A0,V0,R0
JAL	7F053A10
ADDIU	A1,S1,0008
//7F03C8E4:
LBU	T9,0003 (S0)	;T9=S0+3: obj.type
ADDIU	AT,R0,000D
BNEL	T9,AT,7F03C9C4	;branch if not type 0D: autoturret
ADDIU	AT,R0,0005
LW	V0,0004 (S1)	;V0=obj.posdata+4: p->obj.data	(same as S0)
JAL	7F062B00
LW	A0,00CC (V0)	;A0=obj.data+CC: p->allocated memory
BEQ	R0,R0,7F03C9C4
ADDIU	AT,R0,0005
//7F03C908:
ADDIU	AT,R0,0007
BNEL	V0,AT,7F03C928	;branch if V0=7
ADDIU	AT,R0,0008
JAL	7F09CEE8
OR	A0,S1,R0	;A0=S1: p->obj.posdata
BEQ	R0,R0,7F03C9C0
OR	S2,V0,R0
//7F03C924:
ADDIU	AT,R0,0008
BNEL	V0,AT,7F03C944	;branch if V0=8
ADDIU	AT,R0,0006
JAL	7F09E8AC
OR	A0,S1,R0	;A0=S1: p->obj.posdata
BEQ	R0,R0,7F03C9C0
OR	S2,V0,R0
//7F03C940:
ADDIU	AT,R0,0006
BNEL	V0,AT,7F03C9C4	;branch if V0=6
ADDIU	AT,R0,0005
JAL	7F09B15C	;V0=player#, though no idea particulars...
OR	A0,S1,R0	;A0=S1: p->obj.posdata
SLL	T0,V0,0x2
LUI	A0,8008
ADDU	A0,A0,T0
LW	A0,9EE0 (A0)	;A0=BONDdata for player#
JAL	7F062B00
ADDIU	A0,A0,0A54	;A0+=A54: 
JAL	7F09B15C	;V0=player#, though no idea particulars...
OR	A0,S1,R0
SLL	T1,V0,0x2
LUI	A0,8008
ADDU	A0,A0,T1
LW	A0,9EE0 (A0)	;A0=BONDdata for player#
JAL	7F062B00
ADDIU	A0,A0,0DFC	;A0+=DFC: 
LW	T2,0004 (S1)	;T2=obj.pos+4: p->obj.data
BEQL	T2,R0,7F03C9C4	;skip if invalid
ADDIU	AT,R0,0005
JAL	7F09A464	;V0= # players
NOP
SLTI	AT,V0,0002
BNEL	AT,R0,7F03C9C4	;skip if solo
ADDIU	AT,R0,0005
LW	S0,0004 (S1)	;S0=obj.data
JAL	7F062B00
ADDIU	A0,S0,0180	;A0=obj.data+180: 
JAL	7F062B00
ADDIU	A0,S0,01AC	;A0=obj.data+1AC: 
//7F03C9C0:	S3=5...
ADDIU	AT,R0,0005
BNEL	S2,AT,7F03C9D8	;branch if S3 isn't 5
ADDIU	AT,R0,0003
BEQ	R0,R0,7F03CA0C
LW	S0,004C (SP)
//7F03C9D4:
ADDIU	AT,R0,0003
BNE	S2,AT,7F03CA00	;branch if S3 isn't 3
LW	S0,0024 (S1)
JAL	7F03A538
OR	A0,S1,R0
JAL	7F03A4F0	;A0->first obj.pos.data+0x24
OR	A0,S1,R0
BNEZ	S0,7F03CA0C
NOP
BEQ	R0,R0,7F03CA0C
OR	S0,S1,R0
//7F03CA00:
OR	A0,S1,R0
JAL	7F03C2BC
OR	A1,S2,R0
//7F03CA0C:
BNEZ	S0,7F03C674
OR	S1,S0,R0
//7F03CA14:	return
LW	RA,0024 (SP)
LW	S0,0014 (SP)
LW	S1,0018 (SP)
LW	S2,001C (SP)
LW	S3,0020 (SP)
JR	RA
ADDIU	SP,SP,0058
