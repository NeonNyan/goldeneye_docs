can't run over 8007C6F4, but can shift it back so 00xx placeholder is at offset for count
single-region this thing; its easy enough to compile with the text
replaces 21990 TLB pointers with entry values

800484D0	J_text flag
800484D4	start of lookup table
8007C640	pointers to text table
8007C6F4	J-specific processing

initialization:	load base text entries
//7F0C1820:	0xF6350	load LgunX
	LUI	S0,8005
261084D0	*ADDIU	S0,S0,84D0	S0=800484D4: start of L_X lookup names
	SLL	T7,T0,0x2
0200C021	*ADDU	T8,S0,R0
8F040098	*LW	A0,0098 (T8)	literal offset in table to p->LgunE
	ADDIU	A1,R0,0001
	ADDIU	A2,R0,0100
	JAL	7F0BCD04	load to permatext bank
	ADDIU	A3,R0,0006	(memory allocation segment 6 - permatext?)
//7F0C1844:	load LtitleX
	LW	T9,0000 (S2)
	LUI	S1,8009
2631C63C	*ADDIU	S1,S1,C63C	accounts for entry 00xx
	SLL	T1,T9,0x2
02005021	*ADDU	T2,S0,R0
	SW	V0,0098 (S1)
8D44009C	*LW	A0,009C (T2)
	ADDIU	A1,R0,0001
	ADDIU	A2,R0,0100
	JAL	7F0BCD04
	ADDIU	A3,R0,0006
//7F0C1870:	load LmpmenuX
	LW	T3,0000 (S2)
	SW	V0,009C (S1)
	ADDIU	A1,R0,0001
	SLL	T4,T3,0x2
02006821	*ADDU	T5,S0,R0
8DA400A0	*LW	A0,00A0 (T5)
	ADDIU	A2,R0,0100
	JAL	7F0BCD04
	ADDIU	A3,R0,0006
//7F0C1894:	load LpropobjX
	LW	T6,0000 (S2)
	SW	V0,00A0 (S1)
	ADDIU	A1,R0,0001
	SLL	T7,T6,0x2
0200C021	*ADDU	T8,S0,R0
8F0400A4	*LW	A0,00A4 (T8)
	ADDIU	A2,R0,0100
	JAL	7F0BCD04
	ADDIU	A3,R0,0006
//7F0C18B8:	load LmpweaponsX
	LW	T9,0000 (S2)
	SW	V0,00A4 (S1)
	ADDIU	A1,R0,0001
	SLL	T1,T9,0x2
02005021	*ADDU	T2,S0,R0
8D4400A8	*LW	A0,00A8 (T2)
	ADDIU	A2,R0,0100
	JAL	7F0BCD04
	ADDIU	A3,R0,0006
//7F0C18DC:	load LoptionsX
	LW	T3,0000 (S2)
	SW	V0,00A8 (S1)
	ADDIU	A1,R0,0001
	SLL	T4,T3,0x2
02006821	*ADDU	T5,S0,R0
8DA400AC	*LW	A0,00AC (T5)
	ADDIU	A2,R0,0100
	JAL	7F0BCD04
	ADDIU	A3,R0,0006
//7F0C1900:	load LmiscX
	LW	T6,0000 (S2)
	SW	V0,00AC (S1)
	ADDIU	A1,R0,0001	A1=1; probably the 1=permabit
	SLL	T7,T6,0x2	T6=0, so probably the 1=use L_J flag
0200C021	*ADDU	T8,S0,R0
8F0400B0	*LW	A0,00B0 (T8)	A0=pointer to L_E string ;T8=800484D4: p->txt string recall table

+++++++++++++

7F0AE98C:	0x	converts code to text; 7F0AE9D4 is the two-byte testing

+++++++++++++

7F0C1D08:	0xF6838	load mission text bank
	LUI	T8,8005
	LW	T8,84D0 (T8)	J_text flag
	ADDIU	SP,SP,FFE8
00047880	*SLL	T0,A0,0x2
	SW	A0,0018 (SP)
	SLL	T9,T8,0x2
01E04021	*ADDU	T0,T7,R0
	LUI	A0,8005
	SW	RA,0014 (SP)
	ADDU	A0,A0,T0
8C8484D0	*LW	A0,84D0 (A0)
	ADDIU	A1,R0,0001
	ADDIU	A2,R0,0100
	JAL	7F0BCD04
	ADDIU	A3,R0,0004
	LW	T1,0018 (SP)
	LW	RA,0014 (SP)
	LUI	AT,8009
	SLL	T2,T1,0x2
	ADDU	AT,AT,T2
AC22C63C	*SW	V0,C63C (AT)
	JR	RA
	ADDIU	SP,SP,0018

+++++++++++++

7F0C1D64:	0xF6894	load briefing text
	LUI	T8,8005
	LW	T8,84D0 (T8)	J_text flag
	ADDIU	SP,SP,FFE8
00047880	*SLL	T0,A0,0x2
	SW	A0,0018 (SP)
	SLL	T9,T8,0x2
	OR	A3,A2,R0
01E04021	*ADDU	T0,T7,R0
	LUI	A0,8005
	OR	A2,A1,R0
	SW	RA,0014 (SP)
	SW	A1,001C (SP)
	ADDU	A0,A0,T0
8C8484D0	*LW	A0,84D0 (A0)
	JAL	7F0BCD40
	ADDIU	A1,R0,0001
	LW	T1,0018 (SP)
	LW	RA,0014 (SP)
	LUI	AT,8009
	SLL	T2,T1,0x2
	ADDU	AT,AT,T2
AC22C63C	*SW	V0,C63C (AT)
	JR	RA
	ADDIU	SP,SP,0018

+++++++++++++

7F0C1DC4:	0xF68F4	blank a text entry
	SLL	T6,A0,0x2
	LUI	AT,8009
	ADDU	AT,AT,T6
	JR	RA
	*SW	R0,C63C (AT)

0F6907	0001	3C

+++++++++++++

7F0C1DD8:	0xF6908	convert from text ID to table offset
	SRA	T6,A0,0xA
	SLL	T7,T6,0x2
	LUI	V0,8009
	ADDU	V0,V0,T7
	*LW	V0,C63C (V0)
	ANDI	T8,A0,03FF

0F691B	0001	3C

-------------

add entries for all stages!	default now bunkerI text
hacks table at 0x3ADD0 in 21990

7F0C15E0:	0xF6110	returns the text bank number for a specific stage#
2482FFF7	*ADDIU	V0,A0,FFF7
2C41002E	*SLTIU	AT,V0,002E
50200001	*BEQL	AT,R0,7F0C15F0
00001025	*OR	V0,R0,R0
3C018006	LUI	AT,8006
00220821	*ADDU	AT,AT,V0
03E00008	*JR	RA
9022BB60	*LBU	V0,BB60 (AT)

FREES 0xF6130-0xF6214

New: embed table following routine, at 7F0C1600
1E 1E 1E 1E 1E 1E 1E 1E 1E 1E 1E 22 1E 23 08 02 
24 0D 1D 05 19 0C 1A 0A 0B 03 1C 1F 12 0E 07 06 
09 21 20 10 11 04 16 01 1B 17 0F 13 15 14 25 18 
