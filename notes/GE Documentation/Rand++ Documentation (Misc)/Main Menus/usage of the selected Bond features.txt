8002C510-1C	copies of each selected Bond value, used to update eeprom and set menus
eeprom+8 & 0x60	flag determining which Bond was selected.

7F01D924	V0= selected Bond in eeprom.	accepts A0=p->eeprom file
7F01D934	A1->selected Bond in eeprom.	accepts A0=p->eeprom file, A1=selection

[7F01D56C]	V0= selected Bond in current file (calls 7F01EBC0)
[7F01EBC0]	V0= selected Bond for file A0	accepts A0=file#
[7F01EBCC]	A1->selected Bond for file A0	accepts A0=file#, A1=selection
[7F01EBF4]	deleted routine - likely related
[7F01EBFC]	deleted routine - likely related


use of 8002C510 index:
7F01E238	
	S0=p->entry, calls 7F01D924 to pull selected Bond, stores to entry
[7F01EBC0]
	[beta] stores A1 to slot A0
7F01F34C
	if selected Bond doesn't match the eeprom file, set it to the selection

altering these to use a single-byte index:
52D68:
	LUI	T4,8003
	ADDIU	T4,T4,C510
	*NOP
	JAL	7F01D924
02CC8021	*ADDU	S0,S6,T4
A2020000	*SB	V0,0000 (S0)

53E84:
	*NOP
	LUI	A1,8003
00B02821	*ADDU	A1,A1,S0
80A5C510	*LB	A1,C510 (A1)
	



use of 7F01D56C:
7F039F6C
	action block type F2
7F079DCC
	solo body and head selectors, tied to cuffs
7F087C24
	pulled from stack and used at 7F087CFC, 
	no idea what this does

	
use of 7F01EBC0:
7F00BD88
	4-folder constructor: passed to 7F00B808, which displays that given Bond picture
7F00D344
	main folder constructor: passed to 7F00B808, which displays that given Bond picture
7F01D56C
	V0= selected Bond in current file
7F01EED4
	retrieve selected folder using 7F01EBC0, then set using 7F01EBCC


use of 7F01EBCC:
7F01ECDC
	sets both this and 7F01D934
7F01EED4
	retrieve selected folder using 7F01EBC0, then set using 7F01EBCC

=_=

I'll assume that most of the interface is there

7F01D56C	5209C	V0= selected Bond in current file (calls 7F01EBC0)
	fries: AT,A0
27BDFFE8	ADDIU	SP,SP,FFE8
AFBF0014	SW	RA,0014 (SP)
3C048003	LUI	A0,8003
0FC07AF0	JAL	7F01EBC0	;V0= selected Bond for file A0
8C84A8E8	LW	A0,A8E8 (A0)	;A0=8002A8E8: cur. folder#
8FBF0014	LW	RA,0014 (SP)
27BD0018	ADDIU	SP,SP,0018
03E00008	JR	RA
00000000	NOP


7F01EBC0	536F0	0FC07AF0	V0= selected Bond for file A0
	accepts: A0=file#
AFA40000	SW	A0,0000 (SP)
03E00008	JR	RA
00001025	OR	V0,R0,R0
	!NEW!	7F01EBD0	53700	0FC07AF4
2C810004	SLTIU	AT,A0,0004	;TRUE if valid folder
10200002	BEQ	AT,R0,+2
3C018003	LUI	AT,8003
00240821	ADDU	AT,AT,A0	;AT=8003C510+offset: selected folder registers
03E00008	JR	RA
8022C510	LB	V0,C510 (AT)	;read value for folder - default is first entry



7F01EBCC	536FC	0FC07AF3	A1->selected Bond for file A0
	accepts: A0=file#, A1=selection
04800007	BLTZ	A0,+7
AFA50004	SW	A1,0004 (SP)	;do nothing with selection
28810004	SLTI	AT,A0,0004	;TRUE if valid folder
10200004	BEQ	AT,R0,+4
00047080	SLL	T6,A0,0x2	;T6=file#->offset
3C018003	LUI	AT,8003
002E0821	ADDU	AT,AT,T6	;AT=8003C510+offset: selected folder registers
AC20C510	SW	R0,C510 (AT)	;set to SW A1,C510 (AT) to re-enable
//7F01EBEC:	return
03E00008	JR	RA
00000000	NOP
	!NEW!	7F01EBE8	53718	0FC07AFA
2C810004	SLTIU	AT,A0,0004	;TRUE if valid folder
10200003	BEQ	AT,R0,+3
3C018003	LUI	AT,8003
00240821	ADDU	AT,AT,A0	;AT=8003C510+offset: selected folder registers
A025C510	SB	A1,C510 (AT)	;set to SW A1,C510 (AT) to re-enable
//7F01EBEC:	return
03E00008	JR	RA
00000000	NOP

NEW ROUTINE - next/prev. selected image
7F01EBA0	536D0	0FC07AE8	next/prev. selected image
	accepts: A0=increment or decrement to index
27BDFFE8	ADDIU	SP,SP,FFE8
AFBF0014	SW	RA,0014 (SP)
00042825	OR	A1,A0,R0	;A1=A0: ic/dec to index
3C048003	LUI	A0,8003
0FC07AF0	JAL	7F01EBC0	;V0= selected Bond for file A0
8C84A8E8	LW	A0,A8E8 (A0)	;A0=8002A8E8: cur. folder#
00452821	ADDU	A1,V0,A1	;A1=org.+- value
0FC07AF3	JAL	7F01EBCC	;set to A1
30A50003	ANDI	A1,A1,0003	;effectively same as index % 4
8FBF0014	LW	RA,0014 (SP)
03E00008	JR	RA
27BD0018	ADDIU	SP,SP,0018


7F00B808	40338	0FC02E02	toggles folder images on/off
ADDIU	SP,SP,FFE0
SW	RA,001C (SP)
SW	S0,0018 (SP)
SW	A1,0024 (SP)
OR	S0,A0,R0
ADDIU	A1,R0,0008
JAL	7F00B7C0
ADDIU	A2,R0,0001
OR	A0,S0,R0
ADDIU	A1,R0,0009
JAL	7F00B7C0
OR	A2,R0,R0
OR	A0,S0,R0
ADDIU	A1,R0,000A
JAL	7F00B7C0
OR	A2,R0,R0
OR	A0,S0,R0
ADDIU	A1,R0,000B
JAL	7F00B7C0
OR	A2,R0,R0
OR	S0,A0,R0
ADDIU	A1,R0,000F
JAL	7F00B7C0
ADDIU	A2,R0,0001
OR	A0,S0,R0
ADDIU	A1,R0,0010
JAL	7F00B7C0
OR	A2,R0,R0
OR	A0,S0,R0
ADDIU	A1,R0,0011
JAL	7F00B7C0
OR	A2,R0,R0
OR	A0,S0,R0
ADDIU	A1,R0,0012
JAL	7F00B7C0
OR	A2,R0,R0
LW	RA,001C (SP)
LW	S0,0018 (SP)
ADDIU	SP,SP,0020
JR	RA
NOP
	!REVISED!
27BDFFE0	ADDIU	SP,SP,FFE0
AFBF001C	SW	RA,001C (SP)
AFB00018	SW	S0,0018 (SP)
AFA50024	SW	A1,0024 (SP)
00808025	OR	S0,A0,R0
24A50008	ADDIU	A1,A1,0008
0FC02DF0	JAL	7F00B7C0
24060001	ADDIU	A2,R0,0001
02002025	OR	S0,A0,R0
8FA50024	LW	A1,0024 (SP)
24A5000F	ADDIU	A1,A1,000F
0FC02DF0	JAL	7F00B7C0
24060001	ADDIU	A2,R0,0001
8FBF001C	LW	RA,001C (SP)
8FB00018	LW	S0,0018 (SP)
03E00008	JR	RA
27BD0020	ADDIU	SP,SP,0020

*_*

could reserve 8002C514 for bodies, 8002C518 for heads.
it makes a little more code, but allows easier editting for non-hacker people

actually, whole routine is getting simplified to remove the TLB values
(stupidly replacing with a table...)

+_+

Fun part - folder images
Connery, Moore, and Dalton images replace Brosnan duplicates
Granted, everyone is anal and would +insist+ the default order is the same as the beta shots.
	(never mind that you could set them at-will)

stupid beta pic order:
Moore
Connery
Brosnan
Dalton

real order acording to cuff info:
Brosnan
Connery
Moore
Dalton

>_<

DBA8AE51	8B55D250	8000FFFF	003A0000
FB85B686	6C5EAAB8	6300FFFF	003A0000
