7F018450	4CF80	menu 16 constructor - no controller warning
AFBFFFD4	*SW	RA,FFD4 (SP)	;SP+34
0FC07034	JAL	7F01C0D0	;insert image DL
27BDFFA0	-ADDIU	SP,SP,FFA0
0FC2B366	JAL	7F0ACD98	;??? microcode insert
00402025	OR	A0,V0,R0	;A0=V0: DL
AFB00060	SW	S0,0060 (SP)	;SP+60= DL
//7F018468:
00408025	*OR	S0,V0,R0	;SP+4C=p->text
0FC30776	JAL	7F0C1DD8	;ret V0=p->text A0
34049C76	ORI	A0,R0,9C76	;A0=ID 9C76: "No controller in controller slot 1"
//7F018474:
AFA2005C	*SW	V0,005C (SP)	;V0=p->text
00402025	*OR	A0,V0,R0
240500DC	*ADDIU	A1,R0,01B8	;A1= xpos
0FC054D6	*JAL	7F015358	;generic center to region
24060099	*ADDIU	A2,R0,0132	;A2= ypos
2406FFFF	*ADDIU	A2,R0,FFFF	;A2=white
0FC046B6	*JAL	7F011AD8	;display text to position
8FA7005C	*LW	A3,005C (SP)	;A3=p->text
//7F018494:	return
8FB00060	LW	S0,0060 (SP)	;SP+60= DL
8FBF0034	LW	RA,0034 (SP)
03E00008	JR	RA
27BD0060	ADDIU	SP,SP,0060

Now for something more intricate...
assume all these strings follow format: "%ctext%c"
remember to push RA to SP+5C or else!
//7F018474:
27A40010	*ADDIU	A0,SP,0010
00402825	*OR	A1,V0,R0
2406003E	ADDIU	A2,R0,003E
0C002B25	JAL	7000AC94	;sprintf(A0,A1,A2,A3)
2407003C	ADDIU	A3,R0,003C
27A40010	*ADDIU	A0,SP,0010
240500DC	*ADDIU	A1,R0,01B8	;A1= xpos
0FC054D6	*JAL	7F015358	;generic center to region
24060099	*ADDIU	A2,R0,0132	;A2= ypos
2406FFFF	*ADDIU	A2,R0,FFFF	;A2=white
0FC046B6	*JAL	7F011AD8	;display text to position
27A70010	*ADDIU	A3,SP,0010

probably better to just use colour code instead

+_+

need to unload the basic text banks, then reload after swapping letter
800484D0 is language flag.  Real is -7 from actual offset to letter (english=0/7, japanese=1/8)

7F0C16EC initializes the text bank, so may be as easy as calling it again...
7F0C1DC4 unloads bank A0
	banks 26,27,28,29,2A,2B,2C need unloading...

psychotic trick...  manually reset memory segment 6
AFA20058	SW	V0,0058 (SP)
	JAL	7F0C1DC4	;unload bank 2D: LnsnaX
	ADDIU	A0,R0,002D
3C108006	LUI	S0,8006
8E023C10	LW	V0,3C10 (S0)
24422F80	ADDIU	V0,V0,2F80	;should be 2F80 of stuff before text...
0FC305BB	JAL	7F0C16EC	;reload global text banks
AE023C14	SW	V0,3C14 (S0)
8FA20058	LW	V0,0058 (SP)


+_+

create a text bank, independant of region, that contains 32 strings
first 16 B400-B40F	language names
final 16 B410-B41F	no controller messages
Easiest is likely loading to temporary buffer, just like stage briefings.
  Regardless of choice, reload the primary text files...
can probably do the same sort of:
LW 8002A950, +0xA000

Also need to figure min/max for language menu
Save that to 8002A910...
	8002A910	selected
	8002A911	min
	8002A912	max

Initialize!
7F01AC80	4F7B0	jump to initialization routine
0FC0617F	*JAL	7F0185FC
00000000
3C048003
1000000A
2484A8C0

actually, just use 80064C30 as a buffer
It's 0x280 large and everything plays nicely with it.

7F0185F8	4D128	new initialize menu 16
27BDFFE8	ADDIU	SP,SP,FFE8
AFBF0014	SW	RA,0014 (SP)
//7F018604	4D134	load text bank
2404002D	ADDIU	A0,R0,002D	;A0=2D: text bank #
3C058003	LUI	A1,8003	;A1=: p->buffer
ACA0A910	SW	R0,A910 (A1)	;initialize menu registers
8CA5A950	LW	A1,A950 (A1)
3406A000	ORI	A2,R0,A000
00A62821	ADDU	A1,A1,A2
0FC3074E	JAL	7F0C1D38	;load resource to memory
3C060007	LUI	A2,0007		;A2= 0x70000	size of buffer
//7F018620	4D150	determine min/max for language list
3C048003	LUI	A0,8003
3C058005	LUI	A1,8005
80A684D0	LB	A2,84D0 (A1)	;A2=800484D0: language
24C60007	ADDIU	A2,A2,0007	;A2+=7: account for funny offset
A086A910	SB	A2,A910 (A0)	;8002A910= selected entry
24A20010	ADDIU	V0,A1,0010	;cutoff
//7F018638	4D168	loop to figure min entry--presumes there must be at least one entry!
90A68630	LBU	A2,8630 (A1)
50C0FFFE	BEQL	A2,R0,-2
24A50001	ADDIU	A1,A1,0001
30A6001F	ANDI	A2,A1,001F
A086A911	SB	A2,A911 (A0)
//7F01864C	4D17C	loop for Max.  Do it for him.
90A68631	LBU	A2,8631 (A1)
10C00002	BEQ	A2,R0,+2
24A50001	ADDIU	A1,A1,0001
14A2FFFC	BNE	A1,V0,-4
30A6001F	ANDI	A2,A1,001F
A086A912	SB	A2,A912 (A0)
//7F018664	4D194	return
8FBF0014	LW	RA,0014 (SP)
03E00008	JR	RA
27BD0018	ADDIU	SP,SP,0018

Remember to unload the bank before returning to main menu!
Also, reset legal screen counter when returning.

7F018450	4CF80	menu 16 constructor - no controller warning
AFBFFFD4	*SW	RA,FFD4 (SP)	;SP+34
0FC07034	JAL	7F01C0D0	;insert image DL
27BDFFA0	-ADDIU	SP,SP,FFA0
0FC2B366	JAL	7F0ACD98	;??? microcode insert
00402025	OR	A0,V0,R0	;A0=V0: DL
AFB00060	SW	S0,0060 (SP)	;SP+60= DL
00408025	OR	S0,V0,R0	;S0=V0: p->DL
AFB1005C	*SW	S1,005C (SP)
//	end insertion
2411000F	*ADDIU	S1,R0,000F
//7F018474:	determine if language or no controller warning
0C002E9C	*JAL	7000BA70	;connected controller flags
3404B400	*ORI	A0,R0,B400
30420001	*ANDI	V0,V0,0001	;mask for controller 1
00021100	*SLL	V0,V0,0x4	;V0 * 0x10
00442021	*ADDU	A0,A0,V0	;B400 or B410: base for different messages
0FC30776	JAL	7F0C1DD8	;ret V0=p->text A0
00912021	*ADDU	A0,A0,S1
//	inserted: corrects ERR messages while other screen loads
0441000F	+BEQ	V0,+skip	;skip writting if default string...
//7F018474:
AFA20058	*SW	V0,0058 (SP)	;V0=p->text
00402025	OR	A0,V0,R0
240501B8	ADDIU	A1,R0,01B8	;A1= xpos
0FC054D6	JAL	7F015358	;generic center to region
24060132	ADDIU	A2,R0,0132	;A2= ypos
//	get real y, colour, and print!
00112880	*SLL	A1,S1,0x2
00B12821	*ADDU	A1,A1,S1
00052880	*SLL	A1,A1,0x2	;offset 0x14 each line
3C068003	*LUI	A2,8003
80C6A910	*LB	A2,A910 (A2)	;A2=8002A910: selected option
52260002	*BEQL	S1,A2,+2
2406FFFF	ADDIU	A2,R0,FFFF	;A2=white
2406FF80	*ADDIU	A2,R0,FF80	;A2=50% grey
0FC046B6	JAL	7F011AD8	;display text to position
8FA70058	*LW	A3,0058 (SP)	;A3=p->text
00028025	+OR	S0,V0,R0
1E20FFE8	*BGTZ	S1,-loopus
2631FFFF	*ADDIU	S1,S1,FFFF
//7F018494:	return
00101025	+OR	V0,S0,R0	;make sure it spits back the display list!
8FB1005C	*LW	S1,005C (SP)
8FB00060	LW	S0,0060 (SP)	;SP+60= DL
8FBF0034	LW	RA,0034 (SP)
03E00008	JR	RA
27BD0060	ADDIU	SP,SP,0060

alternate...
//7F018474:	determine if language or no controller warning
0C002E9C	*JAL	7000BA70	;connected controller flags
3404B400	*ORI	A0,R0,B400
30420001	*ANDI	V0,V0,0001	;mask for controller 1
00021100	*SLL	V0,V0,0x4	;V0 * 0x10
00442021	*ADDU	A0,A0,V0	;B400 or B410: base for different messages
0FC30776	JAL	7F0C1DD8	;ret V0=p->text A0
00912021	*ADDU	A0,A0,S1
//	inserted: corrects ERR messages while other screen loads
0441000F	BGEZ	V0,+skip	;skip writting if default string or NULL.  Normal strings will be 80- addresses, therefore "negative"
//7F018474:
00023825	OR	A3,V0,R0	;A3=p->text
0C001127	JAL	7000449C	;V0=view.width
00102025	OR	A0,S0,R0
//	get real y, colour, and print!
0C00112B	JAL	700044AC	;V0=view.height
3C058003	LUI	A1,8003
00023103	SRA	A2,V0,0x4
00D10019	MULTU	A2,S1
80A5A910	LB	A1,A910 (A1)	;A2=8002A910: selected option
00003012	MFLO	A2		;not as small as shifts, but better.  can handle any size screen...
52250002	BEQL	S1,A1,+2
3C050102	LUI	A1,0102		;A3=white
3C050002	LUI	A1,0002		;A3=50% grey
AFA50010	SW	A1,0010 (SP)
0FC30D68	JAL	7F0C35A0	;display text to position
00022843	SRA	A1,V0,0x1	;A1=midscreen xpos
00028025	OR	S0,V0,R0
1E20FFE6	*BGTZ	S1,-loopus
2631FFFF	*ADDIU	S1,S1,FFFF
//
00101025	+OR	V0,S0,R0	;make sure it spits back the display list!



Write up a basic interface
Up/down, then button pressing
JAL	7000C3AC	;test if button pressed
should work...
7F013D78	488A8	generic thingy advance
	accepts: A0=p->value, A1=inc/decrement, A2=maximum value, A3=minimum value (opt., def=0)

replace 7F00A798 with this bugger!
7F01AE3C	4F96C	reroute to menu 16 interface
0FC0613A	*JAL	7F0184E8
	NOP
	BEQ	R0,R0,7F01AEF0
	LW	RA,0014 (SP)

7F0184E8	4D018	new menu 16 interface - no controller warning/language select
27BDFFE8	ADDIU	SP,SP,FFE8
AFBF0014	SW	RA,0014 (SP)
//7F0184F0:	up on stick
0FC29422	JAL	7F0A5088	;V0= TRUE if A0 pressed up on stick
00002025	OR	A0,R0,R0
5440000C	BNEL	V0,R0,+switch
24050001	ADDIU	A1,R0,0001
//7F018500:	down on stick
0FC29431	JAL	7F0A50C4	;V0= TRUE if A0 pressed down on stick
00002025	OR	A0,R0,R0
14400007	BNE	V0,R0,+switch-1
//7F01850C:	buttons
00002025	OR	A0,R0,R0	;A0=0: player 1
0C0030EB	JAL	7000C3AC	;V0= player A0's buttons A1 pressed
24050C0C	ADDIU	A1,R0,0C0C	;A1= C up (8), + up, c down (4) + down
1040000B	*BEQ	V0,R0,+press	;branch if buttons pressed
30420808	ANDI	V0,V0,0808
54400002	BNEL	V0,R0,+2
24050001	ADDIU	A1,R0,0001
2405FFFF	ADDIU	A1,R0,FFFF
//7F01852C:	+addmendum
3C048004	+LUI	A0,8004
AC800AE0	+SW	R0,0AE0 (A0)	;80040AE0: player 4,3,2,1
//7F018534:	switch
3C048003	LUI	A0,8003
2484A910	ADDIU	A0,A0,A910
90860002	LBU	A2,0002 (A0)
0FC04F5F	JAL	7F013D7C
90870001	LBU	A3,0001 (A0)
//7F018548:	detect a pressed vs. held control stick
0FC05432	JAL	7F0150C8	;resets controller flag so you get a pressed, not constant action
00002025	OR	A0,R0,R0
//
//7F018550:	test for final!
0C0030EB	JAL	7000C3AC	;V0=TRUE if A, B, Z, START pressed
3405F000	ORI	A1,R0,F000	;A1=F000: 
1040000E	BEQ	V0,R0,+return
//7F01855C:	set menu
00002025	OR	A0,R0,R0		;A0=0: legal screen
0FC06975	JAL	7F01A5D4	;set to menu A0 to mode A1
00002825	OR	A1,R0,R0	;A1=0: current
//7F018568:	fix regioncode
3C028003	LUI	V0,8003
8042A910	LB	V0,A910 (V0)	;V0=8002A910: selected option
2442FFF9	ADDIU	V0,V0,FFF9	;value-7
3C048005	LUI	A0,8005
A08284D0	SB	V0,84D0 (A0)	;save new regioncode
//7F018584:	reload global text bank
0C002667	JAL	7000999C
24040006	ADDIU	A0,R0,0006
0FC305BB	JAL	7F0C16EC	;reload global text banks
00000000	NOP
//
//7F018598	4D0C8	general return
8FBF0014	LW	RA,0014 (SP)
03E00008	JR	RA
27BD0018	ADDIU	SP,SP,0018

USE?
3C048006	LUI	A0,8006
8C823C10	LW	V0,3C10 (A0)
24422F80	ADDIU	V0,V0,2F80	;should be 2F80 of stuff before text...
0FC305BB	JAL	7F0C16EC	;reload global text banks
AC823C14	SW	V0,3C14 (A0)


Most sensible thing is to reprogram.
In setup loop, arrange it so text loads last.
Save the location for the text, or draw from first text bank.
Then, reset position for mem6 to this, reloading text

7000601C	6C1C	setup loop
00000000	NOP
00000000	NOP
00000000	NOP
00000000	NOP
00000000	NOP
00000000	NOP
00000000	NOP
0C00174C	JAL	70005D30	;initializes 21990 data, inc. basic text
00000000	NOP
0FC33F77	JAL	7F0CFDDC	;
00000000	NOP
0C001A8C	JAL	70006A30	;sets up animation table
00000000	NOP
0C001818	JAL	70006060	;run game
00000000	NOP
1000FFFD	BEQ	R0,R0,-3
00000000	NOP

edit to read:
0C00174C	JAL	70005D30	;initializes 21990 data, inc. basic text
00000000	NOP
0FC33F77	JAL	7F0CFDDC	;
00000000	NOP
0C001A8C	JAL	70006A30	;sets up animation table
00000000	NOP
0FC305BB	+JAL	7F0C16EC	;intro images and text banks
00000000	+NOP


	6B3C	call text initializer
	remove this line...
0FC305BB	JAL	7F0C16EC	;intro images and text banks
00000000	NOP
	
To use this setup, just need to reset mem6 manually to the start of the "text" stuff.
That's text-2F80, which you can also find at 8008C6F4
3C048009	LUI	A0,8009
8C84C6F4	LW	A0,C6F4 (A0)
3C028006	LUI	V0,8006
0FC305BB	JAL	7F0C16EC	;reload global text banks
AC443C14	SW	A0,3C14 (V0)

To keep text codes from failing on return to menu 0, just set menu 0 to always reset bank 2D.
If loaded, it gets unloaded.  If not, nothing happens.
7F00A5E8	3F118	menu 00 initialize: legal screen
27BDFFD0	ADDIU	SP,SP,FFD0
AFBF001C	SW	RA,001C (SP)
0C001BF4	JAL	70006FD0
00000000	NOP
//7F01857C:	
	*NOP
	*NOP
240E0001	ADDIU	T6,R0,0001
3C188003	-LUI	T8,8003
AF0EA93C	*SW	T6,A93C (T8)	;1->8002A93C: 
AF00A8CC	*SW	R0,A8CC (T8)	;0->8002A8CC: 
	


7F00A6DC:	3F20C	menu 00 interface: legal screen
27BDFFE8	ADDIU	SP,SP,FFE8
3C014270	LUI	AT,4270
AFBF0014	SW	RA,0014 (SP)
0C001151	JAL	70004544
44816000	-MTC1	AT,F12		;F12= [42700000]
3C013FAB	*LUI	AT,3FAB
0C001164	JAL	70004590
44816000	*MTC1	AT,F12		;F12= 1.3...
3C0142C8	LUI	AT,42C8
44816000	MTC1	AT,F12		;F12= [42C80000]
3C01461C	*LUI	AT,461C
0C001194	JAL	70004650
44817000	*MTC1	AT,F14		;F12= 10000.0
0C00114D	JAL	70004534	;A0->p@800232A8+24
00002025	OR	A0,R0,R0
//7F00A71C:	test if no controllers or quick-advance to language select
0C002E7E	JAL	7000B9F8	;V0= #controllers plugged in
00002825	*OR	A1,R0,R0	;immediate menu change
18400018	BLEZ	V0,+switch	;branch if no controllers
24040015	*ADDIU	A0,R0,0015	;A0=16: menu 16 - no controller warning
//7F00A75C:	timer running, test for input
00002025	OR	A0,R0,R0
0C0030EB	JAL	7000C3AC	;test if button pressed
3405FFFF	ORI	A1,R0,FFFF	;A1=FFFF: any button
24040030	*ADDIU	A0,R0,0030
10820012	*BEQ	A0,V0,+switch	;branch if L+R pressed
24040015	*ADDIU	A0,R0,0015	;A0=16: menu 16 - no controller warning
3042FFC0	*ANDI	V0,V0,FFC0	;mask away the L and R
2C420001	*SLTIU	V0,V0,0001	;TRUE if nothing pressed...
//
3C0A8003	LUI	T2,8003
3C0F8005	LUI	T7,8005
8DEF8374	LW	T7,8374 (T7)	;T7=80048374: clock timer
8D4EA8CC	*LW	T6,A8CC (T2)	;T6=8002A8CC: menu timer
01CFC021	ADDU	T8,T6,T7	;T8=T6+T7; timer + advance
8D45A92C	*LW	A1,A92C (T2)	;A1=8002A92C: quick advance if zero
00A22825	*OR	A1,A1,V0	;FALSE if both quick advance and button pressed
2B0100F1	SLTI	AT,T8,00F1	;AT=TRUE if time < 241 (0xF1)
00250824	*AND	AT,AT,A1
14200007	BNEZ	AT,7F00A75C	;SKIP if timer still running and you're paying attention
AD58A8CC	*SW	T8,A8CC (T2)	;T8->8002A8CC: advance menu timer
//7F00A76C:	test if quick advance possible
8D44A930	*LW	A0,A930 (T2)	;T2=8002A930: TRUE if first time through menus
00822025	OR	A0,A0,V0
38840001	*XORI	A0,A0,0001	;FALSE if first run, TRUE if not
00042080	*SLL	A0,A0,0x2
//7F00A784:	update menu
0FC06975	JAL	7F01A5D4	;set to menu A0 to mode A1
24840001	*ADDIU	A0,A0,0001	;A0++: menu 01 - Nintendo logo / menu 05 - folder selection screen
//7F00A78C:	return
8FBF0014	LW	RA,0014 (SP)
03E00008	JR	RA
27BD0018	ADDIU	SP,SP,0018

+_+

About the multi-usage issue...
occurs 2nd, 3rd time through menus
try working from 7F0C1820
crash occurs in 7F0C1904, while settting/using allocated memory
Must not be clearing this right or something

+_+

7F009760
writes text to screen at absolute coordinates
this text is tinted in japanese, using 7F0AE6EC and background colour at 8002A9B0
otherwise draws using 7F0ADABC
accepts: A0=p->display list target, A1=p->x position, A2=p->y position, A3=p->text,
	SP+10=p->2nd font table, SP+14=p->1st font table, 
	SP+18=font colour,
	SP+1C=clip width, SP+20=clip height, 
	SP+24=y offset, SP+28=x offset
7F0ADABC
display text; used by MP watch menu
accepts: A0=p->display list target, A1=p->x position, A2=p->y position, A3=p->text,
	SP+10=p->2nd font table, SP+14=p->1st font table, 
	SP+18=font colour,
	SP+1C=clip width, SP+20=clip height, 
	SP+24=y offset, SP+28=x offset
