This is the working copy of the MP menu, already hacked for the team display.
Should be revised to print each attachment sepertely, use newer generic constructors, and eliminate TLB pointers when possible.

7F0C4024	F8B54	multiplayer watch menu display
	accepts: A0=p->display list
ADDIU	SP,SP,FF28
SW	RA,003C (SP)
SW	S1,0038 (SP)
OR	S1,A0,R0	;S1=A0: p->display list (DL)
JAL	7F09B150	;V0= cur player #
SW	S0,0034 (SP)
JAL	7F09A464	;V0=# players
SW	V0,00D4 (SP)	;SP+D4= cur.player
ADDIU	AT,R0,0001
OR	T0,V0,R0	;T0=#players
BNE	V0,AT,7F0C405C	;branch if multi
OR	S0,R0,R0	;S0=0
BEQ	R0,R0,7F0C6034	;quit if solo
OR	V0,S1,R0	;V0=S1: DL
//7F0C405C:
LUI	V1,8008
LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
OR	A0,S1,R0	;A0=S1: DL
LW	T6,29C4 (V1)	;T6=BONDdata+29C4: TRUE when menu activated
BEQL	T6,R0,7F0C5E24	;branch if not in menu
LW	T6,00D8 (V1)
JAL	7F0ACD98	;microcode
SW	T0,00D0 (SP)	;SP+D0= #players
//7F0C407C:	figure 2 player offset
LW	T7,00D0 (SP)	;T7=SP+D0: #players
ADDIU	AT,R0,0002
OR	S1,V0,R0	;S1=V0: p->DL
BNE	T7,AT,7F0C409C	;branch if 3-4 player
LUI	T9,8008
ADDIU	T8,R0,0050
BEQ	R0,R0,7F0C40A0
SW	T8,00A8 (SP)	;SP+A8=0x50
//7F0C409C:	3-4 player
SW	R0,00A8 (SP)	;SP+A8=0
//7F0C40A0:
LW	T9,A0B0 (T9)	;T9=8007A0B0: p->BONDdata
LW	T1,29C8 (T9)	;T1=BONDdata+29C8: selected page in menu
ADDIU	AT,R0,0007
BEQ	AT,T1,7F0C42D0	;skip if page 7: waiting for exit
ADDIU	AT,R0,0004
BEQ	AT,T1,7F0C4128	;branch if page 4: pause
ADDIU	AT,R0,0005
BEQ	AT,T1,7F0C4170	;branch if page 5: exit
ADDIU	AT,R0,0006
BEQ	AT,T1,7F0C4170	;branch if page 6: exit-cancel/confirm
NOP
//7F0C40CC:	pages 0,1,2,3 - play
LUI	T3,8009
LW	T2,C704 (T3)	;T2=8008C704: TRUE when game over
BNEZ	T2,7F0C40EC	;branch if game over
NOP
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A015	;A0=ID A015: "PLAY"
BEQ	R0,R0,7F0C4190
SW	V0,00A4 (SP)	;SP+A4= p->text
//7F0C40EC:	game over if not blinking
LW	T3,C710 (T3)	;T3=8007C710: "blink" register
BEQ	T3,R0,7F0C4108	;branch if not set
NOP
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A016	;A0=ID A016: "GAME OVER"
BEQ	R0,R0,7F0C4190
SW	V0,00A4 (SP)	;SP+A4= p->text
//7F0C4108:	start to exit if blinking
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A017	;A0=A017: "START TO EXIT"
BEQ	R0,R0,7F0C4190
SW	V0,00A4 (SP)	;SP+A4= p->text
//7F0C4118:
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,9CE3	;A0=ID 9CE3: "\n"
BEQ	R0,R0,7F0C4190
SW	V0,00A4 (SP)	;SP+A4= p->text
//7F0C4128:	page 4 - pause/unpause
LUI	T5,8009
LW	T5,C718 (T5)	;T5=8008C718: TRUE if paused
BEQ	T5,R0,7F0C4160	;branch if unpaused
NOP
//7F0C4138:	paused
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A018	;A0=ID A018: "PAUSED"
JAL	7F09B150	;V0= cur player #
SW	V0,00A4 (SP)	;SP+A4= p->text
LUI	T6,8009
LW	T6,C71C (T6)	;T6=8008C71C: player# who paused game
BNE	V0,T6,7F0C4190	;branch if not player who paused game
NOP
BEQ	R0,R0,7F0C4190
ADDIU	S0,R0,0001	;S0=1	you paused game
//7F0C4160:	unpaused
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A019	;A0=ID A019: "PAUSE"
BEQ	R0,R0,7F0C4190
SW	V0,00A4 (SP)	;SP+A4= p->text
//7F0C4170:	pages 5,6 - exit
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A01A	;A0=ID A01A: "EXIT"
JAL	70004514	;V0=viewport ulx [p@800232A8+20]
SW	V0,00A4 (SP)	;SP+A4= p->text
LW	T7,00A8 (SP)	;T7=SP+A8: 2-player offset
ADDU	A0,V0,T7	;A0=screenpos+offset
ADDIU	A0,A0,0041	;A0+=41: xpos
SW	A0,00CC (SP)	;SP+CC= xpos
//7F0C4190:	figure out text x position
LUI	T8,8004
LW	T8,0EAC (T8)	;T8=80040EAC: p->1st font table
LUI	A3,8004
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,00BC	;A0=SP+BC: @height
ADDIU	A1,SP,00C0	;A1=SP+C0: @width
LW	A2,00A4 (SP)	;A2=p->text
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T8,0010 (SP)	;SP+10=p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T9,00A8 (SP)	;T9=2 player offset
LW	T2,00C0 (SP)	;T2=str.width
ADDU	T1,V0,T9	;T1=view.x + offset
SRA	T3,T2,0x1	;T3=str.width/2: midpoint
SUBU	A0,T1,T3	;A0=xpos for centering text
ADDIU	A0,A0,0050	;A0+=50: xpos
JAL	70004524	;V0= uly
SW	A0,00CC (SP)	;SP+CC=xpos
//7F0C41E0:	figure out y position
LW	T4,00BC (SP)	;T4=txt.height
SRA	T5,T4,0x1	;T5=height/2
SUBU	T6,V0,T5	;T6=ypos for centering text
ADDIU	T7,T6,0016	;T7=T6+16: ypos
BEQ	S0,R0,7F0C426C	;branch if you didn't pause game
SW	T7,00C8 (SP)	;SP+C8=ypos
//7F0C4208:	display if you paused game
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T8,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T8,R0	;S0=text clip height
LUI	T9,8004
LUI	T2,8004
LW	T2,0EAC (T2)	;T2=80040EAC: p->1st font table
LW	T9,0EB0 (T9)	;T9=80040EB0: p->2nd font table
LUI	T1,A0FF
LUI	T3,0070
ORI	T3,T3,00A0	;T3=007000A0: text colour (dark green)
ORI	T1,T1,A0F0	;T1=A0FFA0F0: text colour (light green)
SW	T1,0018 (SP)	;SP+18= text foreground colour
SW	T3,001C (SP)	;SP+1C= text background colour
OR	A0,S1,R0	;A0=p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->string
SW	S0,0020 (SP)	;SP+20= clip height
SW	V0,0024 (SP)	;SP+24= clip width
SW	R0,0028 (SP)	;SP+28= y offset
SW	R0,002C (SP)	;SP+2C= x offset
SW	T2,0014 (SP)	;SP+14= p->1st font table
JAL	7F0AE6EC	;display 2-tone text
SW	T9,0010 (SP)	;SP+10= p->2nd font table
BEQ	R0,R0,7F0C42D0
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C426C:	display if hadn't paused game
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T4,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T4,R0	;S0= text clip height
LUI	T5,8004
LUI	T6,8004
LW	T6,0EAC (T6)	;T6=80040EAC: p->1st font table
LW	T5,0EB0 (T5)	;T5=80040EB0: p->2nd font table
LUI	T7,00FF
ORI	T7,T7,00B0	;T7=00FF00B0: text colour (pure green)
SW	T7,0018 (SP)	;SP+18= text colour
OR	A0,S1,R0	;A0=p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,001C (SP)	;SP+1C= clip height
SW	V0,0020 (SP)	;SP+20= clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T6,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T5,0010 (SP)	;SP+10= p->2nd font table
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C42D0:	left blinking arrow
JAL	7F0C1E8C	;TRUE when left enabled on MP menu page
NOP
BEQ	V0,R0,7F0C4434	;skip if left not enabled
NOP
JAL	70004514	;V0=viewport ulx
NOP
LUI	V1,8009
LW	V1,C704 (V1)	;V1=8008C704: TRUE when game over
SLL	T9,V0,0x10
ADDIU	T8,R0,000A
BEQL	V1,R0,7F0C430C	;branch if game running
SW	R0,0050 (SP)
BEQ	R0,R0,7F0C430C
SW	T8,0050 (SP)	;SP+50= 0xA
//7F0C4308:
SW	R0,0050 (SP)	;SP+50= 0
LW	T1,00A8 (SP)	;T1=2 player offset
LW	T4,0050 (SP)	;T4=game over offset
SRA	T2,T9,0x10	;T2=view.ulx
ADDU	T3,T2,T1	;T3=xpos+offset
SUBU	A0,T3,T4	;A0=xpos+offset-width
ADDIU	A0,A0,0028	;A0+=screenpos
BEQ	V1,R0,7F0C4334	;branch if game running
SW	A0,00CC (SP)	;SP+CC=xpos
//7F0C432C:	game over...
ADDIU	A0,A0,FFF8	;A0-=8
SW	A0,00CC (SP)	;SP+CC=xpos
//7F0C4334:
JAL	70004524	;V0=view.uly
NOP
LUI	T6,8009
LW	T6,C708 (T6)	;T6=8008C708: TRUE if blinking
ADDIU	T5,V0,0016	;T5=ypos+16
SW	T5,00C8 (SP)	;SP+C8=ypos
BNEZ	T6,7F0C43C0	;branch if set
NOP
//7F0C4354:	display normally
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T7,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T7,R0	;S0= text clip height
LUI	T8,8004
LUI	T9,8004
LW	T9,0EAC (T9)	;T9=80040EAC: p->1st font table
LW	T8,0EB0 (T8)	;T8=80040EB0: p->2nd font table
LUI	T2,00FF
ORI	T2,T2,00B0	;T2=00FF00B0: text colour (pure green)
LUI	A3,8006
ADDIU	A3,A3,BC28	;A3=8005BC28: "<"	[3C00]
SW	T2,0018 (SP)	;SP+18=colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
SW	S0,001C (SP)	;SP+1C=text clip height
SW	V0,0020 (SP)	;SP+20=text clip width
SW	R0,0024 (SP)	;SP+24=y offset
SW	R0,0028 (SP)	;SP+28=x offset
SW	T9,0014 (SP)	;SP+14=p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T8,0010 (SP)	;SP+10=p->2nd font table
BEQ	R0,R0,7F0C4434
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C43C0:	display highlighted
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T1,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T1,R0	;S0= text clip height
LUI	T3,8004
LUI	T4,8004
LW	T4,0EAC (T4)	;T4=80040EAC: p->1st font table
LW	T3,0EB0 (T3)	;T3=80040EB0: p->2nd font table
LUI	T5,A0FF
LUI	T6,0070
ORI	T6,T6,00A0	;T6=007000A0: text colour (dark green)
ORI	T5,T5,A0F0	;T5=A0FFA0F0: text colour (light green)
LUI	A3,8006
ADDIU	A3,A3,BC28	;A3=8005BC28: "<"	[3C00]
SW	T5,0018 (SP)	;SP+18= text foreground colour
SW	T6,001C (SP)	;SP+1C= text background colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
SW	S0,0020 (SP)	;SP+20=text clip height
SW	V0,0024 (SP)	;SP+24=text clip width
SW	R0,0028 (SP)	;SP+28=y offset
SW	R0,002C (SP)	;SP+2C=x offset
SW	T4,0014 (SP)	;SP+14=p->1st font table
JAL	7F0AE6EC	;display 2-tone text
SW	T3,0010 (SP)	;SP+10=p->2nd font table
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C4434:	right blinking arrow
JAL	7F0C1E20	;TRUE when right enabled on MP menu page
NOP
BEQ	V0,R0,7F0C4598	;branch if not enabled
NOP
JAL	70004514	;V0=viewport ulx
NOP
LUI	V1,8009
LW	V1,C704 (V1)	;V1=8008C704: TRUE when game over
SLL	T9,V0,0x10
ADDIU	T7,R0,000A
BEQL	V1,R0,7F0C4470	;branch if still playing
SW	R0,0050 (SP)
BEQ	R0,R0,7F0C4470
SW	T7,0050 (SP)	;SP+50=A: game over
//7F0C446C:	still playing
SW	R0,0050 (SP)	;SP+50=0: no offset
LW	T8,0050 (SP)
LW	T3,00A8 (SP)	;T3=2 player offset
SRA	T2,T9,0x10	;T2=xpos
ADDU	T1,T8,T2	;T1=xpos+offset
ADDU	A0,T1,T3	;A0=xpos+offset+playeroffset
ADDIU	A0,A0,0070	;A0+=70: xpos for text
BEQ	V1,R0,7F0C4498	;branch when game running
SW	A0,00CC (SP)
ADDIU	A0,A0,0008	;A0+=8: offset for game running
SW	A0,00CC (SP)	;SP+CC=xpos
//7F0C4498:	get y position and guess if blinking
JAL	70004524	;V0=view.uly
NOP
LUI	T5,8009
LW	T5,C708 (T5)	;T5=8008C708: TRUE if blinking
ADDIU	T4,V0,0016	;T4=ypos+14
SW	T4,00C8 (SP)	;SP+C8=ypos
BNEZ	T5,7F0C4524	;branch if set
NOP
//7F0C44B8:	normal display
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T6,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T6,R0	;S0=text clip height
LUI	T7,8004
LUI	T9,8004
LW	T9,0EAC (T9)	;T9=80040EAC: p->1st font table
LW	T7,0EB0 (T7)	;T7=80040EB0: p->2nd font table
LUI	T8,00FF
ORI	T8,T8,00B0	;T8=00FF00B0: green
LUI	A3,8006
ADDIU	A3,A3,BC2C	;A3=8005BC2C: ">"
SW	T8,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T9,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T7,0010 (SP)	;SP+10= p->2nd font table
BEQ	R0,R0,7F0C4598
OR	S1,V0,R0
//7F0C4524:	blinking display
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T2,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T2,R0	;S0=text clip height
LUI	T1,8004
LUI	T3,8004
LW	T3,0EAC (T3)	;T3=80040EAC: p->1st font table
LW	T1,0EB0 (T1)	;T1=80040EB0: p->2nd font table
LUI	T4,A0FF
LUI	T5,0070
ORI	T5,T5,00A0	;T5=007000A0: text colour (dark green)
ORI	T4,T4,A0F0	;T4=A0F0A0FF: text colour (light green)
LUI	A3,8006
ADDIU	A3,A3,BC2C	;A3=8005BC2C: ">"
SW	T4,0018 (SP)	;SP+18= foreground colour
SW	T5,001C (SP)	;SP+1C= background colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
SW	S0,0020 (SP)	;SP+20= text clip height
SW	V0,0024 (SP)	;SP+24= text clip width
SW	R0,0028 (SP)	;SP+28= y offset
SW	R0,002C (SP)	;SP+2C= x offset
SW	T3,0014 (SP)	;SP+14= p->1st font table
JAL	7F0AE6EC	;display 2-tone text
SW	T1,0010 (SP)	;SP+10= p->2nd font table
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C4598:	specific page displays
LUI	V1,8008
LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
ADDIU	AT,R0,0003
LW	T6,00D0 (SP)	;T6=SP+D0: #players
LW	V0,29C8 (V1)	;V0=BONDdata+29C8: selected page in menu
BEQ	V0,AT,7F0C45BC	;branch if scores page (3)
ADDIU	AT,R0,0004
BNEL	V0,AT,7F0C4C60	;branch if not pause page (4)
ADDIU	AT,R0,0002
//7F0C45BC:	page 3--scores
BLEZ	T6,7F0C45F4	;branch if stupid #players
OR	A0,R0,R0	;A0=playercount
ADDIU	V1,SP,0094	;V1=SP+94: buffer for scores
//7F0C45C8:	collect scores
SW	V1,0044 (SP)	;SP+44=V1: buffer for scores
JAL	7F0C38D8	;V0=score (in NSNA: V0=score, V1=time)
SW	A0,0090 (SP)	;SP+90= count
ADDU	V0,V0,V1	;V0=total score in NSNA
LW	V1,0044 (SP)	;V1=buffer
LW	A0,0090 (SP)	;A0=count
SW	V0,0000 (V1)	;buffer+0= score
LW	T7,00D0 (SP)	;T7=#players
ADDIU	A0,A0,0001	;A0++	count++
BNE	A0,T7,7F0C45C8	;loop for each player
ADDIU	V1,V1,0004	;V1+=4	next slot in buffer
//7F0C45F4:
LUI	A0,8009
LW	A0,C704 (A0)	;A0=8008C704: TRUE when game over
SLTIU	T9,A0,0001	;TRUE if game running
BEQ	T9,R0,7F0C4618	;branch if game over
OR	A0,T9,R0	;A0=TRUE if game running
LUI	A0,8009
LW	A0,C700 (A0)	;A0=8008C700: TRUE if play stopped
SLTIU	T8,A0,0001	;TRUE if playing
OR	A0,T8,R0	;A0=!play
//7F0C4618:	determine if displaying scores...
JAL	7F0C3F5C	;V0=TRUE if rank to be displayed on MP menu
NOP
BEQ	V0,R0,7F0C46F4	;skip if not displaying
ADDIU	A0,SP,00AC	;A0=SP+AC: @string buffer
//7F0C4628:	display scores
JAL	7F0C3C94	;print rank of player A1 to A0
LW	A1,00D4 (SP)	;A1=SP+D4: cur.player#
LUI	T2,8004
LW	T2,0EAC (T2)	;T2=80040EAC: p->1st font table
LUI	A3,8004
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,00BC	;A0=SP=BC: @height
ADDIU	A1,SP,00C0	;A1=SP+C0: @width
ADDIU	A2,SP,00AC	;A2=SP+AC: p->string
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T2,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T1,00A8 (SP)	;T1=2 player offset
LW	T4,00C0 (SP)	;T4=width
ADDU	T3,V0,T1	;T3=xpos
SRA	T5,T4,0x1	;T5=width/2
SUBU	A0,T3,T5	;A0=xpos of text centered
ADDIU	A0,A0,0050	;A0+=50: xpos
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T6,00BC (SP)	;T6=height
SRA	T7,T6,0x1	;T7=height/2
SUBU	T9,V0,T7	;T9=ypos of text centered
ADDIU	T8,T9,0025	;T8=ypos+25
JAL	7000441C	;V0= text clip width
SW	T8,00C8 (SP)	;SP+C8= ypos
SLL	S0,V0,0x10
SRA	T2,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T2,R0	;S0=text clip height
LUI	T1,8004
LUI	T4,8004
LW	T4,0EAC (T4)	;T4=80040EAC: p->1st font table
LW	T1,0EB0 (T1)	;T1=80040EB0: p->2nd font table
LUI	T3,00FF
ORI	T3,T3,00B0	;T3=00FF00B0: green
SW	T3,0018 (SP)	;SP+18=colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
ADDIU	A3,SP,00AC	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T4,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T1,0010 (SP)	;SP+10= p->2nd font table
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C46F4:	
LUI	A0,8009
LW	A0,C704 (A0)	;A0=8008C704: TRUE when game over
SLTIU	T5,A0,0001	;!game over
BEQ	T5,R0,7F0C4718	;branch if game over
OR	A0,T5,R0	;A0=0
LUI	A0,8009
LW	A0,C700 (A0)	;A0=8008C700: TRUE if play stopped
SLTIU	T6,A0,0001	;!play stopped
OR	A0,T6,R0	;A0=!play stopped
//7F0C4718:	display normal text...
JAL	7F0C3FCC	;V0= TRUE if displaying score in MP menu
NOP
BEQ	V0,R0,7F0C4C50	;skip if not displaying score
NOP
NOP
//7F0C4728:
NOP
NOP
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A01B	;A0=ID A01B: "SCORES"
LUI	T7,8004
LW	T7,0EAC (T7)	;T7=80040EAC: p->1st font table
LUI	A3,8004
SW	V0,00A4 (SP)	;SP+A4=p->txt
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,00BC	;A0=@height
ADDIU	A1,SP,00C0	;A1=@width
OR	A2,V0,R0	;A2=V0: p->txt
SW	R0,0014 (SP)	;SP+14=0
JAL	7F0AE98C	;proportions of string A2
SW	T7,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T9,00A8 (SP)	;T9=2 player offset
LW	T2,00C0 (SP)	;T2=width
ADDU	T8,V0,T9	;T8=xpos+offset
SRA	T1,T2,0x1	;T1=width/2
SUBU	A0,T8,T1	;A0=xpos of centered text
ADDIU	A0,A0,0050	;A0+=50: xpos
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T4,00BC (SP)	;T4=height
SRA	T3,T4,0x1	;T3=height/2
SUBU	T5,V0,T3	;T5=ypos of centered text
ADDIU	T6,T5,0035	;T6=ypos+35
JAL	7000441C	;V0= text clip width
SW	T6,00C8 (SP)	;SP+C8=ypos
SLL	S0,V0,0x10
SRA	T7,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T7,R0	;S0=text clip height
LUI	T9,8004
LUI	T2,8004
LW	T2,0EAC (T2)	;T2=80040EAC: p->1st font table
LW	T9,0EB0 (T9)	;T9=80040EB0: p->2nd font table
LUI	T8,00FF
ORI	T8,T8,00B0	;T8=00FF00B0: green
SW	T8,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T2,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T9,0010 (SP)	;SP+10= p->2nd font table
//7F0C47FC:	retrieve score
JAL	7F01476C	;V0=scenario::score
OR	S1,V0,R0	;S1=V0: p->DL
SLL	V0,V0,0x10	;V0*=0x10000
SW	V0,0080 (SP)	;SP+80= time * 0x10000
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
//7F0C4894:	
LW	T4,00D0 (SP)	;T4=SP+D0: #players
ADDIU	AT,R0,0002
BNE	T4,AT,7F0C49DC	;branch if 3-4 player
NOP
//7F0C48A8:	2 player score display
JAL	70004514	;V0=viewport ulx
NOP
SLL	S0,V0,0x10
SRA	T3,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T3,R0	;S0=xpos
LW	T0,00D4 (SP)	;T0=cur.player#
SLL	V1,V0,0x10
SRA	T5,V1,0x10
OR	V1,T5,R0	;V1=ypos
LW	A2,0080 (SP)	;A2=time
BNEZ	T0,7F0C48E4	;branch if not player 1
SW	A2,0050 (SP)	;SP+50= time
ADDIU	T6,R0,0001
SB	T6,0050 (SP)	;SP+50= 1
//7F0C48E4:
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
//7F0C490C:
LUI	A2,8008
LBU	A2,9F59 (A2)	;A2=player 1's team flag
SB	A2,0053 (SP)	;SP+53= player 1's team flag
LW	T8,00A8 (SP)	;T8=2 player offset
LW	T1,0050 (SP)	;T1=3bit colour code
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T8	;A1=xpos+offset
ADDIU	A1,A1,0050	;A1+=50: xpos
ADDIU	A2,V1,0046	;A2=ypos+46
LW	A3,0094 (SP)	;A3=arguments (score)
JAL	7F0C35A0	;display player data to MP menu
SW	T1,0010 (SP)	;SP+10= colour type
//7F0C493C:	handle next row - player 2
JAL	70004514	;V0=viewport ulx
OR	S1,V0,R0	;S1=V0: p->DL
SLL	S0,V0,0x10
SRA	T4,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T4,R0	;S0=xpos
LW	A0,00D4 (SP)	;A0=cur.player#
SLL	V1,V0,0x10
SRA	T3,V1,0x10
ADDIU	AT,R0,0001
OR	V1,T3,R0	;V1=ypos
LW	A2,0080 (SP)	;A2=time
BNE	A0,AT,7F0C4978	;branch if not player 2
SW	A2,0050 (SP)	;SP+50= time
SB	AT,0050 (SP)	;SP+50=1
//7F0C4978:
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
//7F0C49A4:	display player 2's score
LUI	A2,8008
LBU	A2,9FC9 (A2)	;A2=80079FC9: player 2's team flag
SB	A2,0053 (SP)	;SP+53= colour
LW	T8,00A8 (SP)	;T8=2 player offset
LW	T1,0050 (SP)	;T1= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T8	;A1=xpos+offset
ADDIU	A1,A1,0050	;A1=x pos.
ADDIU	A2,V1,0056	;A2=y pos.
LW	A3,0098 (SP)	;A3=arguments (score)
JAL	7F0C35A0	;display player data to MP menu
SW	T1,0010 (SP)	;SP+10= colour
BEQ	R0,R0,7F0C4C50
OR	S1,V0,R0
//7F0C49DC:	3-4 player score display
JAL	70004514	;V0=viewport ulx
NOP
SLL	S0,V0,0x10
SRA	T4,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T4,R0	;S0=xpos
LW	T0,00D4 (SP)	;T0=cur.player#
SLL	V1,V0,0x10
SRA	T3,V1,0x10
OR	V1,T3,R0	;V1=ypos
LW	A2,0080 (SP)	;A2= time
BNEZ	T0,7F0C4A18	;branch if not player 1
SW	A2,0050 (SP)	;SP+50= time
ADDIU	T1,R0,0001
SB	T1,0050 (SP)	;SP+50= 1
//7F0C4A18:
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
//7F0C4A40:	display player 1 score
LUI	A2,8008
LBU	A2,9F59 (A2)	;A2=80079F59: pl1.stats::scenario flags
SB	A2,0053 (SP)	;SP+53= teamcolour
LW	T2,00A8 (SP)	;T2=2 player offset
LW	T8,0050 (SP)	;T8=colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T2	;A1=xpos+offset
ADDIU	A1,A1,0040	;A1+=40: xpos
ADDIU	A2,V1,0046	;A2=ypos+46
LW	A3,0094 (SP)	;A3=arguments (score)
JAL	7F0C35A0	;display player data to MP menu
SW	T8,0010 (SP)	;SP+10= colour
//7F0C4A70:	display player 2 score
JAL	70004514	;V0=viewport ulx
OR	S1,V0,R0	;S1=V0: p->DL
SLL	S0,V0,0x10
SRA	T1,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T1,R0	;S0=xpos
LW	T0,00D4 (SP)	;T0=cur.player#
SLL	V1,V0,0x10
SRA	T4,V1,0x10
ADDIU	AT,R0,0001
OR	V1,T4,R0	;V1=ypos
LW	A2,0080 (SP)	;A2=time
BNE	T0,AT,7F0C4AAC	;branch if not player 2
SW	A2,0050 (SP)	;SP+50= time
SB	AT,0050 (SP)	;SP+50= 1
//7F0C4AAC:
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
//7F0C4AD8:
LUI	A2,8008
LBU	A2,9FC9 (A2)	;A2=80079FC9: pl2.stats::scenario flags
SB	A2,0053 (SP)	;SP+53=teamcolour
LW	T6,00A8 (SP)	;T6=2 player offset
LW	T2,0050 (SP)	;T2=colour
OR	A0,S1,R0
ADDU	A1,S0,T6	;A1=xpos+offset
ADDIU	A1,A1,0060	;A1+=60: xpos
ADDIU	A2,V1,0046	;A2=ypos+46
LW	A3,0098 (SP)	;A3=arguments (score)
JAL	7F0C35A0	;display player data to MP menu
SW	T2,0010 (SP)	;SP+10= colour
//7F0C4B08:	display player 3 score
JAL	70004514	;V0=viewport ulx
OR	S1,V0,R0	;S1=V0: p->DL
SLL	S0,V0,0x10
SRA	T8,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T8,R0	;S0=xpos
LW	T0,00D4 (SP)	;T0=cur.player#
SLL	V1,V0,0x10
SRA	T1,V1,0x10
ADDIU	AT,R0,0002
OR	V1,T1,R0	;V1=ypos
LW	A2,0080 (SP)	;A2=time
BNE	T0,AT,7F0C4B44	;branch if not player 3
SW	A2,0050 (SP)	;SP+50=time
SB	AT,0050 (SP)	;SP+50= 2
//7F0C4B44:
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
//7F0C4B70:
LUI	A2,8008
LBU	A2,A039 (A2)	;A2=8007A039: pl3.stats::scenario flags
SB	A2,0053 (SP)	;SP+53= teamcolour
LW	T9,00A8 (SP)	;T9=2 player offset
LW	T6,0050 (SP)	;T6=colour
OR	A0,S1,R0	;A0=p->DL
ADDU	A1,S0,T9	;A1=xpos + pl.offset
ADDIU	A1,A1,0040	;A1+=40: xpos
ADDIU	A2,V1,0056	;A2=ypos+56
LW	A3,009C (SP)	;A3=arguments (score)
JAL	7F0C35A0	;display player data to MP menu
SW	T6,0010 (SP)	;SP+10= colour
//7F0C4BA0:	determine if four players
LW	T2,00D0 (SP)	;T2=#players
ADDIU	AT,R0,0004
OR	S1,V0,R0	;S1=V0: p->DL
BNE	T2,AT,7F0C4C50	;skip if not 4 players
NOP
//7F0C4BB4:	display player 4 score
JAL	70004514	;V0=viewport ulx
NOP
SLL	S0,V0,0x10
SRA	T8,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T8,R0	;S0=xpos
LW	A0,00D4 (SP)	;A0=cur.player#
SLL	V1,V0,0x10
SRA	T1,V1,0x10
ADDIU	AT,R0,0003
OR	V1,T1,R0	;V1=ypos
LW	A2,0080 (SP)	;A2=time
BNE	A0,AT,7F0C4BF0	;branch if not player 4
SW	A2,0050 (SP)	;SP+50=time
SB	AT,0050 (SP)	;SP+50= 3
//7F0C4BF0:
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
//7F0C4C1C:
LUI	A2,8008
LBU	A2,A0A9 (A2)	;A2=8007A0A9: pl4.stats::scenario flags
SB	A2,0053 (SP)	;SP+53= teamscore
LW	T6,00A8 (SP)	;T6=2 player offset
LW	T2,0050 (SP)	;T2=colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T6	;A1=xpos+pl.offset
ADDIU	A1,A1,0060	;A1+=60: xpos
ADDIU	A2,V1,0056	;A2=ypos+56
LW	A3,00A0 (SP)	;A3=arguments (score)
JAL	7F0C35A0	;display player data to MP menu
SW	T2,0010 (SP)	;SP+10= colour
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C4C50:	return
LUI	V1,8008
BEQ	R0,R0,7F0C5B44
LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
//7F0C4C5C:	page 2--player kills
ADDIU	AT,R0,0002
BNE	V0,AT,7F0C50D4	;branch if not player kills page
LUI	A0,8009
LW	A0,C704 (A0)	;A0=8008C704: TRUE when game over
SLTIU	T8,A0,0001	;!game over
BEQ	T8,R0,7F0C4C88	;branch if game over
OR	A0,T8,R0	;A0=0
LUI	A0,8009
LW	A0,C700 (A0)	;A0=8008C700: TRUE if play stopped
SLTIU	T1,A0,0001	;!stopped
OR	A0,T1,R0	;A0=!stopped
//7F0C4C88:	determine if displaying text
JAL	7F0C3F5C	;V0=TRUE if rank to be displayed on MP menu
NOP
BEQ	V0,R0,7F0C4D64	;skip if rank not displayed
ADDIU	A0,SP,00AC	;A0=SP+AC: p->text buffer
//7F0C4C98:	display rank
JAL	7F0C3C94	;print rank of player A1 to A0
LW	A1,00D4 (SP)	;A1=cur.player#
LUI	T4,8004
LW	T4,0EAC (T4)	;T4=80040EAC: p->1st font table
LUI	A3,8004
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,00BC	;A0=@height
ADDIU	A1,SP,00C0	;A1=@width
ADDIU	A2,SP,00AC	;A2=p->text
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T4,0010 (SP)	;SP+10= p->2nd font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T3,00A8 (SP)	;T3=2 player offset
LW	T7,00C0 (SP)	;T7=width
ADDU	T5,V0,T3	;T5=xpos+pl.offset
SRA	T9,T7,0x1	;T9=width/2: centerpoint
SUBU	A0,T5,T9	;A0=xpos to center text
ADDIU	A0,A0,0050	;A0+=50
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T6,00BC (SP)	;T6=height
SRA	T2,T6,0x1	;T2=height/2: centerpoint
SUBU	T8,V0,T2	;T8=ypos to center text
ADDIU	T1,T8,0025	;T1=ypos+25
JAL	7000441C	;V0= text clip width
SW	T1,00C8 (SP)	;SP+C8=ypos
SLL	S0,V0,0x10
SRA	T4,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T4,R0	;S0=text clip height
LUI	T3,8004
LUI	T7,8004
LW	T7,0EAC (T7)	;T7=80040EAC: p->1st font table
LW	T3,0EB0 (T3)	;T3=80040EB0: p->2nd font table
LUI	T5,00FF
ORI	T5,T5,00B0	;T5=00FF00B0: green
SW	T5,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
ADDIU	A3,SP,00AC	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T7,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T3,0010 (SP)	;SP+10= p->2nd font table
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C4D64:	display "P# KILLS"
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A01C	;A0=ID A01C: "P"
ORI	A0,R0,A01D	;A0=ID A01D: "KILLS"
JAL	7F0C1DD8	;V0=p->text A0
SW	V0,004C (SP)	;SP+4C= p->"P"
LW	A3,00D4 (SP)	;A3=cur.player#
LUI	A1,8006
ADDIU	A1,A1,BC30	;A1=8005BC30: "%s%d %s"
LW	A2,004C (SP)	;A2=p->"P"
ADDIU	A0,SP,00AC	;A0=SP+AC: p->buffer
SW	V0,0010 (SP)	;SP+10= p->"KILLS"
JAL	7000AC94	;sprintf(A0,A1,A2,A3)
ADDIU	A3,A3,0001	;A3++: cur.player++
LUI	T9,8004
LW	T9,0EAC (T9)	;T9=80040EAC: p->1st font table
LUI	A3,8004
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,00BC	;A0=SP+BC: @height
ADDIU	A1,SP,00C0	;A1=SP+C0: @width
ADDIU	A2,SP,00AC	;A2=p->text
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T9,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T6,00A8 (SP)	;T6=2 player offset
LW	T8,00C0 (SP)	;T8=width
ADDU	T2,V0,T6	;T2=xpos+pl.offset
SRA	T1,T8,0x1	;T1=width/2: centerpoint
SUBU	A0,T2,T1	;A0=xpos of centered text
ADDIU	A0,A0,0050	;A0+=50
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T4,00BC (SP)	;T4=height
SRA	T3,T4,0x1	;T3=height/2: centerpoint
SUBU	T7,V0,T3	;T7=ypos of centered text
ADDIU	T5,T7,0035	;T5=ypos+35
JAL	7000441C	;V0= text clip width
SW	T5,00C8 (SP)	;SP+C8=ypos
SLL	S0,V0,0x10
SRA	T9,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T9,R0	;S0= text clip height
LUI	T6,8004
LUI	T8,8004
LW	T8,0EAC (T8)	;T8=80040EAC: p->1st font table
LW	T6,0EB0 (T6)	;T6=80040EB0: p->2nd font table
LUI	T2,00FF
ORI	T2,T2,00B0	;T2=00FF00B0: green
SW	T2,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
ADDIU	A3,SP,00AC	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T8,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T6,0010 (SP)	;SP+10= p->2nd font table
//7F0C4E54:	2 or 4 player display
LW	T1,00D0 (SP)	;T1=SP+D0: #players
OR	S1,V0,R0	;S1=V0: p->DL
ADDIU	AT,R0,0002
BNE	T1,AT,7F0C4F34	;branch if 3-4 players
LW	V0,00D4 (SP)	;V0=cur.player#
//7F0C4E68:	2 player::player 1 KILLS display
LW	V0,00D4 (SP)	;V0=cur.player#
BEQL	V0,R0,7F0C4ED4	;skip if player 1
ADDIU	AT,R0,0001
JAL	70004514	;V0=viewport ulx
NOP
SLL	S0,V0,0x10
SRA	T4,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T4,R0	;S0=xpos
LW	T7,00D4 (SP)	;T7=cur.player#
LW	T3,00A8 (SP)	;T3=2 player offset
LUI	A3,8008
SLL	T5,T7,0x3
SUBU	T5,T5,T7
SLL	T5,T5,0x4	;T5=player# * 0x70
ADDU	A3,A3,T5
ADDU	A1,S0,T3	;A1=xpos+pl.offset
ADDIU	A1,A1,0050	;A1+=50
LW	A3,9F14 (A3)	;A3=80079F14+offset: #player1 kills
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A2,V0,0046	;A2=ypos+46
JAL	7F0C35A0	;display player data to MP menu
SW	R0,0010 (SP)	;SP+10: colour	(black)
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C4EC8:	2 player::player 2 KILLS display
LW	V0,00D4 (SP)	;V0=cur.player#
ADDIU	AT,R0,0001
BEQ	V0,AT,7F0C50C8	;skip if player 2
SLL	T9,V0,0x3
SUBU	T9,T9,V0
LUI	T6,8008
ADDIU	T6,T6,9EF0	;T6=80079EF0: pl1::statistics
SLL	T9,T9,0x4	;T9=player# * 0x70
ADDU	T8,T9,T6	;T8=statistics+ pl.offset
JAL	70004514	;V0=viewport ulx
SW	T8,0044 (SP)	;SP+44= cur.pl::statistics
SLL	S0,V0,0x10
SRA	T2,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T2,R0	;S0=xpos
LW	T1,00A8 (SP)	;T1=2 player offset
LW	T4,0044 (SP)	;T4=cur.pl::statistics
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T1	;A1=xpos+pl.offset
LW	A3,0028 (T4)	;A3=#player 2 kills
SW	R0,0010 (SP)	;SP+10= colour
ADDIU	A1,A1,0050	;A1+=50: xpos
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0056	;A2=ypos+56
BEQ	R0,R0,7F0C50C8
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C4F34:	4 player::player 1 KILLS display
BEQL	V0,R0,7F0C4F98	;skip if player 1
ADDIU	AT,R0,0001
JAL	70004514	;V0=viewport ulx
NOP
SLL	S0,V0,0x10
SRA	T3,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T3,R0	;S0=xpos
LW	T5,00D4 (SP)	;T5=cur.player#
LW	T7,00A8 (SP)	;T7=2 player offset
LUI	A3,8008
SLL	T9,T5,0x3
SUBU	T9,T9,T5
SLL	T9,T9,0x4	;T9=player# * 0x70
ADDU	A3,A3,T9	;A3=statistics + player offset
ADDU	A1,S0,T7	;A1=xpos+offset
ADDIU	A1,A1,0040	;A1+=40: xpos
LW	A3,9F14 (A3)	;A3=#player 1 kills
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A2,V0,0046	;A2=ypos+46
JAL	7F0C35A0	;display player data to MP menu
SW	R0,0010 (SP)	;SP+10= black
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C4F90:	4 player::player 2 KILLS display
LW	V0,00D4 (SP)	;V0=cur.player#
ADDIU	AT,R0,0001
BEQ	V0,AT,7F0C4FF8	;skip if player 2
SLL	T6,V0,0x3
SUBU	T6,T6,V0
LUI	T8,8008
ADDIU	T8,T8,9EF0	;T8=80079EF0: p->statistics
SLL	T6,T6,0x4	;T6=player# * 0x70
ADDU	T2,T6,T8	;T2=p->player#::statistics
JAL	70004514	;V0=viewport ulx
SW	T2,0044 (SP)	;SP+44= p->pl#::statistics
SLL	S0,V0,0x10
SRA	T1,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T1,R0	;S0=xpos
LW	T4,00A8 (SP)	;T4=2 player offset
LW	T3,0044 (SP)	;T3= p->pl#::statistics
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T4	;A1=xpos+offset
LW	A3,0028 (T3)	;A3=#player2 kills
SW	R0,0010 (SP)	;SP+10= colour	(black)
ADDIU	A1,A1,0060	;A1+=60: xpos
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0046	;A2=ypos+46
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C4FF4:	4 player::player 3 KILLS display
LW	V0,00D4 (SP)	;V0=cur.player#
ADDIU	AT,R0,0002
BEQ	V0,AT,7F0C505C	;skip if player 3
SLL	T7,V0,0x3
SUBU	T7,T7,V0
LUI	T5,8008
ADDIU	T5,T5,9EF0	;T5=80079EF0: p->statistics
SLL	T7,T7,0x4	;T7=player# * 0x70
ADDU	T9,T7,T5	;T9=statistics + pl.offset
JAL	70004514	;V0=viewport ulx
SW	T9,0044 (SP)	;SP+44=p->pl#::statistics
SLL	S0,V0,0x10
SRA	T6,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T6,R0	;S0=xpos
LW	T8,00A8 (SP)	;T8=2 player offset
LW	T2,0044 (SP)	;T2=p->pl#::statistics
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T8	;A1=xpos+offset
LW	A3,002C (T2)	;A3=#player3 kills
SW	R0,0010 (SP)	;SP+10= colour	(black)
ADDIU	A1,A1,0040	;A1+=40: xpos
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0056	;A2=ypos+56
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C5058:	4 player::player 4 KILLS display
LW	V0,00D4 (SP)	;V0=cur.player#
LW	T1,00D0 (SP)	;T1=#players
ADDIU	AT,R0,0004
BNE	T1,AT,7F0C50C8	;skip if not 4 players
ADDIU	AT,R0,0003
BEQ	V0,AT,7F0C50C8	;skip if player 4
SLL	T4,V0,0x3
SUBU	T4,T4,V0
LUI	T3,8008
ADDIU	T3,T3,9EF0	;T3=80079EF0: p->statistics
SLL	T4,T4,0x4	;T4=player# * 0x70
ADDU	T7,T4,T3	;T7=statistics + pl.offset
JAL	70004514	;V0=viewport ulx
SW	T7,0044 (SP)	;SP+44=p->pl#::statistics
SLL	S0,V0,0x10
SRA	T5,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T5,R0	;S0=xpos
LW	T9,00A8 (SP)	;T9=2 player offset
LW	T6,0044 (SP)	;T6=p->pl#::statistics
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T9	;A1=xpos+offset
LW	A3,0030 (T6)	;A3=#player4 kills
SW	R0,0010 (SP)	;SP+10= colour	(black)
ADDIU	A1,A1,0060	;A1+=60: xpos
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0056	;A2=ypos+56
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C50C8:
LUI	V1,8008
BEQ	R0,R0,7F0C5B44
LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
//7F0C50D4:	page 1--player losses
ADDIU	AT,R0,0001
BNE	V0,AT,7F0C5780	;branch if not player losses menu (1)
LUI	A0,8009
LW	A0,C704 (A0)	;A0=8008C704: TRUE when game over
SLTIU	T8,A0,0001	;T8=!gameover
BEQ	T8,R0,7F0C5100	;branch if game over
OR	A0,T8,R0	;A0=0
LUI	A0,8009
LW	A0,C700 (A0)	;A0=8008C700: TRUE if play stopped
SLTIU	T2,A0,0001	;T2=!paused
OR	A0,T2,R0	;A0=!paused
//7F0C5100:
JAL	7F0C3F5C	;V0=TRUE if rank to be displayed on MP menu
NOP
BEQ	V0,R0,7F0C51DC	;skip if rank not displayed
ADDIU	A0,SP,00AC	;A0=SP+AC: p->buffer
//7F0C5110:	display rank
JAL	7F0C3C94	;print rank of player A1 to A0
LW	A1,00D4 (SP)	;A1=cur.player#
LUI	T1,8004
LW	T1,0EAC (T1)	;T1=80040EAC: p->1st font table
LUI	A3,8004
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,00BC	;A0=@height
ADDIU	A1,SP,00C0	;A1=@width
ADDIU	A2,SP,00AC	;A2=p->text
SW	R0,0014 (SP)	;SP+14=NULL
JAL	7F0AE98C	;proportions of string A2
SW	T1,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T4,00A8 (SP)	;T4=2 player offset
LW	T7,00C0 (SP)	;T7=width
ADDU	T3,V0,T4	;T3=xpos+offset
SRA	T5,T7,0x1	;T5=width/2: centerpoint
SUBU	A0,T3,T5	;A0=xpos for centered text
ADDIU	A0,A0,0050	;A0+=50: xpos
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T9,00BC (SP)	;T9=height
SRA	T6,T9,0x1	;T6=height/2: centerpoint
SUBU	T8,V0,T6	;T8=ypos for centered text
ADDIU	T2,T8,0025	;T2=ypos+25
JAL	7000441C	;V0= text clip width
SW	T2,00C8 (SP)	;SP+C8=ypos
SLL	S0,V0,0x10
SRA	T1,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T1,R0	;S0= text clip height
LUI	T4,8004
LUI	T7,8004
LW	T7,0EAC (T7)	;T7=80040EAC: p->1st font table
LW	T4,0EB0 (T4)	;T4=80040EB0: p->2nd font table
LUI	T3,00FF
ORI	T3,T3,00B0	;T3=00FF00B0: green
SW	T3,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
ADDIU	A3,SP,00AC	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T7,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T4,0010 (SP)	;SP+10= p->2nd font table
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C51DC:	display "P# LOSSES"
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A01C	;A0=ID A01C: "P"
ORI	A0,R0,A01E	;A0=ID A01E: "LOSSES"
JAL	7F0C1DD8	;V0=p->text A0
SW	V0,004C (SP)	;SP+4C= p->"P"
LW	A3,00D4 (SP)	;A3=cur.player#
LUI	A1,8006
ADDIU	A1,A1,BC38	;A1=8005BC38: "%s%d %s"
LW	A2,004C (SP)	;A2=p->"P"
ADDIU	A0,SP,00AC	;A0=SP+AC: p->buffer
SW	V0,0010 (SP)	;SP+10= p->"LOSSES"
JAL	7000AC94	;sprintf(A0,A1,A2,A3)
ADDIU	A3,A3,0001	;A3++	cur.player#++
LUI	T5,8004
LW	T5,0EAC (T5)	;T5=80040EAC: p->1st font table
LUI	A3,8004
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,00BC	;A0=@height
ADDIU	A1,SP,00C0	;A1=@width
ADDIU	A2,SP,00AC	;A2=p->text
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T5,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T9,00A8 (SP)	;T9=2 player offset
LW	T8,00C0 (SP)	;T8=width
ADDU	T6,V0,T9	;T6=xpos+offset
SRA	T2,T8,0x1	;T2=width/2: centerpoint
SUBU	A0,T6,T2	;A0=xpos to center text
ADDIU	A0,A0,0050	;A0+=50: xpos
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T1,00BC (SP)	;T1=height
SRA	T4,T1,0x1	;T4=height/2: centerpoint
SUBU	T7,V0,T4	;T7=ypos to center text
ADDIU	T3,T7,0035	;T3=ypos+35
JAL	7000441C	;V0= text clip width
SW	T3,00C8 (SP)	;SP+C8= ypos
SLL	S0,V0,0x10
SRA	T5,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T5,R0	;S0= text clip height
LUI	T9,8004
LUI	T8,8004
LW	T8,0EAC (T8)	;T8=80040EAC: p->1st font table
LW	T9,0EB0 (T9)	;T9=80040EB0: p->2nd font table
LUI	T6,FF40
ORI	T6,T6,40B0	;T6=FF4040B0: red
SW	T6,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
ADDIU	A3,SP,00AC	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T8,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T9,0010 (SP)	;SP+10= p->2nd font table
//7F0C52D0:	determine # pl
LW	T2,00D0 (SP)	;T2=#players
ADDIU	AT,R0,0002
OR	S1,V0,R0	;S1=V0: p->DL
BNE	T2,AT,7F0C5468	;branch if 3-4 players
LW	T8,00D4 (SP)	;T8=cur.player#
//7F0C52E4:	2 player::player 1 LOSSES display
LW	V0,00D4 (SP)	;V0=cur.player#
LUI	T5,8008
BEQ	V0,R0,7F0C5348	;skip if player 1
NOP
JAL	70004514	;V0=viewport ulx
NOP
SLL	S0,V0,0x10
SRA	T1,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T1,R0	;S0=xpos
LW	T7,00D4 (SP)	;T7=cur.player#
LW	T4,00A8 (SP)	;T4=2 player offset
LUI	A3,8008
SLL	T3,T7,0x2	;T3=player#->offset
ADDU	A3,A3,T3	;A3=statistics+pl.offset
ADDU	A1,S0,T4	;A1=xpos+offset
ADDIU	A1,A1,0050	;A1+=50: xpos
LW	A3,9F14 (A3)	;A3=80079F14+offset: player#losses
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A2,V0,0046	;A2=ypos+46
JAL	7F0C35A0	;display player data to MP menu
SW	R0,0010 (SP)	;SP+10= colour	(black)
OR	S1,V0,R0	;S1=V0: p->DL
BEQ	R0,R0,7F0C53A8
LW	V0,00D4 (SP)	;V0=cur.player#
//7F0C5348:	2 player::player 1 suicide display
LW	T5,9F14 (T5)	;A3=80079F14+offset: player1.losses
BLEZL	T5,7F0C53AC	;skip if no suicides
ADDIU	AT,R0,0001
JAL	70004514	;V0=viewport ulx
NOP
SLL	S0,V0,0x10
SRA	T9,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T9,R0	;S0=xpos
LW	T6,00D4 (SP)	;T6=cur.player#
LW	T8,00A8 (SP)	;T8=2 player offset
LUI	A3,8008
SLL	T2,T6,0x2	;T2=player#->offset
ADDU	A3,A3,T2	;A3=statistics+pl.offset
ADDIU	T1,R0,0004
ADDU	A1,S0,T8	;A1=xpos+offset
ADDIU	A1,A1,0050	;A1+=50: xpos
SW	T1,0010 (SP)	;SP+10=4: colour	(red)
LW	A3,9F14 (A3)	;A3=80079F14+offset: player#losses
OR	A0,S1,R0	;A0=S1: p->DL
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0046	;A2=ypos+46
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C53A4:	2 player::player 2 LOSSES display
LW	V0,00D4 (SP)	;V0=cur.player#
ADDIU	AT,R0,0001
BEQ	V0,AT,7F0C5408	;skip if player 2
LUI	T6,8008
LUI	T7,8008
ADDIU	T7,T7,9EF0	;T7=80079EF0: statistics
SLL	T4,V0,0x2	;T4=player#->offset
ADDU	T3,T4,T7	;T3=statistics+offset
JAL	70004514	;V0=viewport ulx
SW	T3,0044 (SP)	;SP+44=p->pl#::statistics
SLL	S0,V0,0x10
SRA	T5,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T5,R0	;S0= xpos
LW	T9,00A8 (SP)	;T9=2 player offset
LW	T8,0044 (SP)	;T8=p->pl#::statistics
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T9	;A1=xpos+offset
LW	A3,0094 (T8)	;A3=statistics+94: nextpl.#pl1 kills
SW	R0,0010 (SP)	;SP+10= colour	(black)
ADDIU	A1,A1,0050	;A1=xpos+50
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0056	;A2=ypos+56
BEQ	R0,R0,7F0C5774
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C5408:	2 player::player 2 suicides display
LW	T6,9F88 (T6)	;T6=80079F88: #pl2 suicides
LUI	T1,8008
ADDIU	T1,T1,9EF0	;T1=80079EF0: statistics
BLEZ	T6,7F0C5774	;skip if no suicides
SLL	T2,V0,0x2	;T2=player#->offset
ADDU	T4,T2,T1	;T4=offset+statistics
JAL	70004514	;V0=viewport ulx
SW	T4,0044 (SP)	;SP+44= p->pl#::statistics
SLL	S0,V0,0x10
SRA	T7,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T7,R0	;S0= xpos
LW	T3,00A8 (SP)	;T3=2 player offset
LW	T5,0044 (SP)	;T5=p->pl#::statistics
ADDIU	T9,R0,0004
ADDU	A1,S0,T3	;A1=xpos+offset
LW	A3,0094 (T5)	;A3=stats+94: next player's player 2 kills
SW	T9,0010 (SP)	;SP+10=4: colour (red)
ADDIU	A1,A1,0050	;A1+=50: xpos
OR	A0,S1,R0	;A0=S1: p->DL
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0056	;A2=ypos+56
BEQ	R0,R0,7F0C5774
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C5468:	4 player::player 1 LOSSES display
BEQ	T8,R0,7F0C54C0	;skip if player 1
LUI	T7,8008
JAL	70004514	;V0=viewport ulx
NOP
SLL	S0,V0,0x10
SRA	T6,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T6,R0	;S0= xpos
LW	T1,00D4 (SP)	;T1=cur.player
LW	T2,00A8 (SP)	;T2=2 player offset
LUI	A3,8008
SLL	T4,T1,0x2	;T4=player#->offset
ADDU	A3,A3,T4	;A3=statistics+playeroffset
ADDU	A1,S0,T2	;A1=xpos+offset
ADDIU	A1,A1,0040	;A1+=40: xpos
LW	A3,9F14 (A3)	;A3=pl#::#playerXkills
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A2,V0,0046	;A2=ypos+46
JAL	7F0C35A0	;display player data to MP menu
SW	R0,0010 (SP)	;SP+10=colour	(black)
BEQ	R0,R0,7F0C551C
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C54C0:	4 player::player 1 suicides display
LW	T7,9F14 (T7)	;T7=80079F14: pl1::#player1kills
BLEZL	T7,7F0C5520	;skip if none
LW	T2,00D4 (SP)	;T2=cur.player
JAL	70004514	;V0=viewport ulx
NOP
SLL	S0,V0,0x10
SRA	T3,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T3,R0	;S0= xpos
LW	T9,00D4 (SP)	;T9=cur.player
LW	T5,00A8 (SP)	;T5=2 player offset
LUI	A3,8008
SLL	T8,T9,0x2
ADDU	A3,A3,T8
ADDIU	T6,R0,0004
ADDU	A1,S0,T5
ADDIU	A1,A1,0040
SW	T6,0010 (SP)
LW	A3,9F14 (A3)
OR	A0,S1,R0	;A0=S1: p->DL
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0046
OR	S1,V0,R0	;S1=V0: p->DL
//	4 player::player 2 LOSSES display
LW	T2,00D4 (SP)	;T2=cur.player
ADDIU	AT,R0,0001
LUI	T8,8008
BEQ	T2,AT,7F0C5580
SLL	T1,T2,0x2
LUI	T4,8008
ADDIU	T4,T4,9EF0
ADDU	T7,T1,T4
JAL	70004514	;V0=viewport ulx
SW	T7,0044 (SP)	;SP+44= p->pl#::statistics
SLL	S0,V0,0x10
SRA	T3,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T3,R0	;S0= xpos
LW	T5,00A8 (SP)	;T5=2 player offset
LW	T9,0044 (SP)	;T9=p->pl#::statistics
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T5
LW	A3,0094 (T9)
SW	R0,0010 (SP)
ADDIU	A1,A1,0060
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0046
BEQ	R0,R0,7F0C55E0
OR	S1,V0,R0	;S1=V0: p->DL
//	4 player::player 2 suicides display
LW	T8,9F88 (T8)
LW	T6,00D4 (SP)	;T6=cur.player
LUI	T1,8008
BLEZ	T8,7F0C55E0
SLL	T2,T6,0x2
ADDIU	T1,T1,9EF0
ADDU	T4,T2,T1
JAL	70004514	;V0=viewport ulx
SW	T4,0044 (SP)	;SP+44= p->pl#::statistics
SLL	S0,V0,0x10
SRA	T7,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T7,R0	;S0= xpos
LW	T3,00A8 (SP)	;T3=2 player offset
LW	T5,0044 (SP)	;T5=p->pl#::statistics
ADDIU	T9,R0,0004
ADDU	A1,S0,T3
LW	A3,0094 (T5)
SW	T9,0010 (SP)
ADDIU	A1,A1,0060
OR	A0,S1,R0	;A0=S1: p->DL
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0046
OR	S1,V0,R0	;S1=V0: p->DL
//	4 player::player 3 LOSSES display
LW	T8,00D4 (SP)	;T8=cur.player
ADDIU	AT,R0,0002
LUI	T5,8008
BEQ	T8,AT,7F0C5644
SLL	T6,T8,0x2
LUI	T2,8008
ADDIU	T2,T2,9EF0
ADDU	T1,T6,T2
JAL	70004514	;V0=viewport ulx
SW	T1,0044 (SP)	;SP+44= p->pl#::statistics
SLL	S0,V0,0x10
SRA	T4,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T4,R0	;S0= xpos
LW	T7,00A8 (SP)	;T7=2 player offset
LW	T3,0044 (SP)	;T3=p->pl#::statistics
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T7
LW	A3,0104 (T3)
SW	R0,0010 (SP)
ADDIU	A1,A1,0040
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0056
BEQ	R0,R0,7F0C56A4
OR	S1,V0,R0	;S1=V0: p->DL
//	4 player::player 3 suicides display
LW	T5,9FFC (T5)
LW	T9,00D4 (SP)	;T9=cur.player
LUI	T6,8008
BLEZ	T5,7F0C56A4
SLL	T8,T9,0x2
ADDIU	T6,T6,9EF0
ADDU	T2,T8,T6
JAL	70004514	;V0=viewport ulx
SW	T2,0044 (SP)	;SP+44= p->pl#::statistics
SLL	S0,V0,0x10
SRA	T1,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T1,R0	;S0= xpos
LW	T4,00A8 (SP)	;T4=2 player offset
LW	T7,0044 (SP)	;T7=p->pl#::statistics
ADDIU	T3,R0,0004
ADDU	A1,S0,T4
LW	A3,0104 (T7)
SW	T3,0010 (SP)
ADDIU	A1,A1,0040
OR	A0,S1,R0	;A0=S1: p->DL
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0056
OR	S1,V0,R0	;S1=V0: p->DL
//	4 player::player 4 LOSSES display
LW	T5,00D0 (SP)
ADDIU	AT,R0,0004
LW	T9,00D4 (SP)	;T9=cur.player
BNE	T5,AT,7F0C5774
ADDIU	AT,R0,0003
BEQ	T9,AT,7F0C5714
LUI	T3,8008
LUI	T6,8008
ADDIU	T6,T6,9EF0
SLL	T8,T9,0x2
ADDU	T2,T8,T6
JAL	70004514	;V0=viewport ulx
SW	T2,0044 (SP)	;SP+44= p->pl#::statistics
SLL	S0,V0,0x10
SRA	T1,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T1,R0	;S0= xpos
LW	T4,00A8 (SP)	;T4=2 player offset
LW	T7,0044 (SP)	;T7=p->pl#::statistics
OR	A0,S1,R0	;A0=S1: p->DL
ADDU	A1,S0,T4
LW	A3,0174 (T7)
SW	R0,0010 (SP)
ADDIU	A1,A1,0060
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0056
BEQ	R0,R0,7F0C5774
OR	S1,V0,R0	;S1=V0: p->DL
//	4 player::player 4 suicides display
LW	T3,A070 (T3)
LW	T5,00D4 (SP)	;T5=cur.player
LUI	T8,8008
BLEZ	T3,7F0C5774
SLL	T9,T5,0x2
ADDIU	T8,T8,9EF0
ADDU	T6,T9,T8
JAL	70004514	;V0=viewport ulx
SW	T6,0044 (SP)	;SP+44= p->pl#::statistics
SLL	S0,V0,0x10
SRA	T2,S0,0x10
JAL	70004524	;V0=view.uly
OR	S0,T2,R0	;S0= xpos
LW	T1,00A8 (SP)	;T1=2 player offset
LW	T4,0044 (SP)	;T4=p->pl#::statistics
ADDIU	T7,R0,0004
ADDU	A1,S0,T1
LW	A3,0174 (T4)
SW	T7,0010 (SP)	;SP+10=4: colour (red)
ADDIU	A1,A1,0060
OR	A0,S1,R0	;A0=S1: p->DL
JAL	7F0C35A0	;display player data to MP menu
ADDIU	A2,V0,0056	;A2=ypos+56
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C5774:
LUI	V1,8008
BEQ	R0,R0,7F0C5B44
LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
//7F0C5780:	page 0--awards
BNEL	V0,R0,7F0C5B48
LW	T7,29C8 (V1)	;T7=BONDdata+29C8: selected page in menu
LW	T5,00D0 (SP)
LW	T3,00A8 (SP)	;T3=2 player offset
SLTI	AT,T5,0003	;TRUE if pages 0-2
BNEZ	AT,7F0C57C0	;branch if pages 0-2
SW	T3,0074 (SP)	;SP+74=2 player offset
LW	T9,00D4 (SP)	;T9=cur.player
LW	T2,00A8 (SP)	;T2=2 player offset
ADDIU	T6,T3,FFF9	;T6=offset - B
ANDI	T8,T9,0001	;T8=cur.player# & 1
BEQ	T8,R0,7F0C57BC	;branch if player 2 or 4
ADDIU	T1,T2,0007	;T1=2 player offset + 7
BEQ	R0,R0,7F0C57C0
SW	T6,0074 (SP)	;SP+74=2 player offset - 11 (0xB)
//7F0C57BC:	display "weapon of choice:"
SW	T1,0074 (SP)	;SP+74=2 player offset+7
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,9C6B	;A0=1D 9C6B: "Weapon of choice:"
LUI	T4,8004
LW	T4,0EAC (T4)	;T4=80040EAC: p->1st font table
LUI	A3,8004
SW	V0,00A4 (SP)	;SP+A4=p->text
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,007C	;A0=@height
ADDIU	A1,SP,0078	;A1=@width
OR	A2,V0,R0	;A2=p->text
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T4,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T7,0074 (SP)	;T7=2 player offset
LW	T9,0078 (SP)	;T9=width
ADDU	T5,V0,T7	;T5=xpos+offset
SRA	T8,T9,0x1	;T8=width/2: centerpoint
SUBU	A0,T5,T8	;A0=xpos for centered text
ADDIU	A0,A0,0050	;A0+=50: xpos
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T3,007C (SP)	;T3=height
SRA	T6,T3,0x1	;T6=height/2: centerpoint
SUBU	T2,V0,T6	;T2=ypos for centered text
ADDIU	T1,T2,0025	;T1=ypos+25
JAL	7000441C	;V0= text clip width
SW	T1,00C8 (SP)	;SP+C8=ypos
SLL	S0,V0,0x10
SRA	T4,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T4,R0	;S0= text clip height
LUI	T7,8004
LUI	T9,8004
LW	T9,0EAC (T9)	;T9=80040EAC: p->1st font table
LW	T7,0EB0 (T7)	;T7=80040EB0: p->2nd font table
LUI	T5,00FF
ORI	T5,T5,00B0	;T5=00FF00B0: green
SW	T5,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T9,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T7,0010 (SP)	;SP+10= p->1st font table
OR	S1,V0,R0	;S1=V0: p->DL
//	display weapon type
LW	A0,00D4 (SP)	;A0=cur.player
JAL	7F009B50	;V0=p->name of player A0's favored weapon in hand A1
OR	A1,R0,R0	;A1=right hand
LUI	T8,8004
LW	T8,0EAC (T8)	;T8=80040EAC: p->1st font table
LUI	A3,8004
SW	V0,00A4 (SP)	;SP+A4=p->text
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,007C	;A0=@height
ADDIU	A1,SP,0078	;A1=@width
OR	A2,V0,R0	;A2=p->text
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T8,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T3,0074 (SP)	;T3=2 player offset
LW	T2,0078 (SP)	;T2=width
ADDU	T6,V0,T3	;T6=xpos+offset
SRA	T1,T2,0x1	;T1=width/2: centerpoint
SUBU	A0,T6,T1	;A0=xpos for centered text
ADDIU	A0,A0,0050	;A0+=50: xpos
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LUI	T7,8005
LB	T7,84D0 (T7)	;T7=800484D0: selected language
SLL	V1,V0,0x10
SRA	T4,V1,0x10
BLEZ	T7,7F0C5910	;branch if english-ish
OR	V1,T4,R0	;V1=ypos
BEQ	R0,R0,7F0C5914
ADDIU	A0,R0,0004	;A0=4
//7F0C5910:
OR	A0,R0,R0
LW	T5,007C (SP)	;T5=height
ADDU	T9,A0,V1	;T9=ypos+lang.offset
SRA	T8,T5,0x1	;T8=height/2: centerpoint
SUBU	T3,T9,T8	;T3=ypos for centered text
ADDIU	T2,T3,0035	;T2=ypos+35
JAL	7000441C	;V0= text clip width
SW	T2,00C8 (SP)	;SP+C8=ypos
SLL	S0,V0,0x10
SRA	T6,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T6,R0	;S0= text clip height
LUI	T1,8004
LUI	T4,8004
LW	T4,0EAC (T4)	;T4=80040EAC: p->1st font table
LW	T1,0EB0 (T1)	;T1=80040EB0: p->2nd font table
LUI	T7,00FF
ORI	T7,T7,00B0	;T7=00FF00B0: green
SW	T7,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T4,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T1,0010 (SP)	;SP+10= p->1st font table
//7F0C5988:	display award 1
LUI	V1,8008
LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
OR	S1,V0,R0	;S1=V0: p->DL
ADDIU	A0,SP,007C	;A0=@height
LW	T0,2A10 (V1)	;T0=BONDdata+2A10: 
ADDIU	A1,SP,0078	;A1=@width
LUI	A3,8004
BEQ	T0,R0,7F0C5A6C	;skip if NULL
OR	A2,T0,R0	;A2=p->text
LUI	T5,8004
LW	T5,0EAC (T5)	;T5=80040EAC: p->1st font table
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
SW	R0,0014 (SP)	;SP+14= NULL
SW	T0,00A4 (SP)	;SP+A4=p->text
JAL	7F0AE98C	;proportions of string A2
SW	T5,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T9,0074 (SP)	;T9=2 player offset
LW	T3,0078 (SP)	;T3=width
ADDU	T8,V0,T9	;T8=xpos+offset
SRA	T2,T3,0x1	;T2=width/2
SUBU	A0,T8,T2	;A0=xpos for centered text
ADDIU	A0,A0,0050	;A0+=50: xpos
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T6,007C (SP)	;T6=height
SRA	T1,T6,0x1	;T1=height/2
SUBU	T4,V0,T1	;T4=ypos for centered text
ADDIU	T7,T4,004B	;T7=ypos+4B
JAL	7000441C	;V0= text clip width
SW	T7,00C8 (SP)	;SP+C8=ypos
SLL	S0,V0,0x10
SRA	T5,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T5,R0	;S0= text clip height
LUI	T9,8004
LUI	T3,8004
LW	T3,0EAC (T3)	;T3=80040EAC: p->1st font table
LW	T9,0EB0 (T9)	;T9=80040EB0: p->2nd font table
LUI	T8,00FF
ORI	T8,T8,00B0	;T8=00FF00B0: green
SW	T8,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T3,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T9,0010 (SP)	;SP+10= p->1st font table
//7F0C5A60:	display award 2
LUI	V1,8008
LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
OR	S1,V0,R0	;S1=V0: p->DL
LW	V0,2A14 (V1)	;V0=BONDdata+2A14: 
ADDIU	A0,SP,007C	;A0=@height
ADDIU	A1,SP,0078	;A1=@width
BEQ	V0,R0,7F0C5B44	;skip if NULL
OR	A2,V0,R0	;A2=p->text
LUI	T2,8004
LW	T2,0EAC (T2)	;T2=80040EAC: p->1st font table
LUI	A3,8004
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
SW	R0,0014 (SP)	;SP+14= NULL
SW	V0,00A4 (SP)	;SP+A4=p->text
JAL	7F0AE98C	;proportions of string A2
SW	T2,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T6,0074 (SP)	;T6=2 player offset
LW	T4,0078 (SP)	;T4=width
ADDU	T1,V0,T6	;T1=xpos+offset
SRA	T7,T4,0x1	;T7=width/2
SUBU	A0,T1,T7	;A0=xpos for centered text
ADDIU	A0,A0,0050	;A0+=50: xpos
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T5,007C (SP)	;T5=height
SRA	T9,T5,0x1	;T9=height/2
SUBU	T3,V0,T9	;T3=ypos for centered text
ADDIU	T8,T3,0058	;T8=ypos+58
JAL	7000441C	;V0= text clip width
SW	T8,00C8 (SP)	;SP+C8=ypos
SLL	S0,V0,0x10
SRA	T2,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T2,R0	;S0= text clip height
LUI	T6,8004
LUI	T4,8004
LW	T4,0EAC (T4)	;T4=80040EAC: p->1st font table
LW	T6,0EB0 (T6)	;T6=80040EB0: p->2nd font table
LUI	T1,00FF
ORI	T1,T1,00B0	;T1=00FF00B0: green
SW	T1,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T4,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T6,0010 (SP)	;SP+10= p->1st font table
//7F0C5B38:	FA668	menu 06--cancel/confirm exit
LUI	V1,8008
LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C5B44:	FA674	
LW	T7,29C8 (V1)	;T7=BONDdata+29C8: selected page in menu
ADDIU	AT,R0,0006
BNE	T7,AT,7F0C6024	;branch if not page 6 - exit: cancel/confirm
OR	V0,S1,R0
//7F0C5B54:	FA684	display cancel/confirm
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A020	;A0=1D A020: "cancel"
LUI	T5,8004
LW	T5,0EAC (T5)	;T5=80040EAC: p->1st font table
LUI	A3,8004
SW	V0,00A4 (SP)	;SP+A4=p->text
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,00BC	;A0=@height
ADDIU	A1,SP,00C0	;A1=@width
OR	A2,V0,R0	;A2=p->text
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T5,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T9,00A8 (SP)	;T9=2 player offset
LW	T8,00C0 (SP)	;T8=width
ADDU	T3,V0,T9	;T3=xpos+offset
SRA	T2,T8,0x1	;T2=width/2
SUBU	A0,T3,T2	;A0=xpos for centered text
ADDIU	A0,A0,0036	;A0+=36
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC= xpos
LW	T6,00BC (SP)	;T6=height
LUI	T5,8008
LW	T5,A0B0 (T5)	;T5=8007A0B0: p->BONDdata
SRA	T4,T6,0x1	;T4=height/2
SUBU	T1,V0,T4	;T1=ypos for centered text
ADDIU	T7,T1,0036	;T7=ypos+36
SW	T7,00C8 (SP)	;SP+C8=ypos
LW	T9,29CC (T5)	;T9=BONDdata+29CC: 
BNEZ	T9,7F0C5C4C	;branch if not selected
NOP
//7F0C5BD8:	highlight cancel
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T8,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T8,R0	;S0= text clip height
LUI	T3,8004
LUI	T2,8004
LW	T2,0EAC (T2)	;T2=80040EAC: p->1st font table
LW	T3,0EB0 (T3)	;T3=80040EB0: p->2nd font table
LUI	T6,A0FF
LUI	T4,0070
ORI	T4,T4,00A0	;T4=007000A0: dark green
ORI	T6,T6,A0F0	;T6=A0F0A0F0: light green
SW	T6,0018 (SP)	;SP+18= foreground colour
SW	T4,001C (SP)	;SP+1C= background colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,0020 (SP)	;SP+20= clip height
SW	V0,0024 (SP)	;SP+24= clip width
SW	R0,0028 (SP)	;SP+28= y offset
SW	R0,002C (SP)	;SP+2C= x offset
SW	T2,0014 (SP)	;SP+14= p->1st font table
JAL	7F0AE6EC	;display 2-tone text
SW	T3,0010 (SP)	;SP+10= p->2nd font table
BEQ	R0,R0,7F0C5CB0
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C5C4C:	normally displayed cancel
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T1,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T1,R0	;S0= text clip height
LUI	T7,8004
LUI	T5,8004
LW	T5,0EAC (T5)	;T5=80040EAC: p->1st font table
LW	T7,0EB0 (T7)	;T7=80040EB0: p->2nd font table
LUI	T9,00FF
ORI	T9,T9,00B0	;T9=00FF00B0: green
SW	T9,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T5,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T7,0010 (SP)	;SP+10= p->1st font table
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C5CB0:	display "confirm"
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A021	;A0=ID A021: "confirm"
LUI	T8,8004
LW	T8,0EAC (T8)	;T8=80040EAC: p->1st font table
LUI	A3,8004
SW	V0,00A4 (SP)	;SP+A4=p->text
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,00BC	;A0=@height
ADDIU	A1,SP,00C0	;A1=@width
OR	A2,V0,R0	;A2=p->text
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T8,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
LW	T3,00A8 (SP)	;T3=2 player offset
LW	T6,00C0 (SP)	;T6=width
ADDU	T2,V0,T3	;T2=xpos+offset
SRA	T4,T6,0x1	;T4=width/2: centerpoint
SUBU	A0,T2,T4	;A0=xpos for centered text
ADDIU	A0,A0,0068	;A0+=68: xpos
JAL	70004524	;V0=view.uly
SW	A0,00CC (SP)	;SP+CC=xpos
LW	T1,00BC (SP)	;T1=height
LUI	T8,8008
LW	T8,A0B0 (T8)	;T8=p->BONDdata
SRA	T7,T1,0x1	;T7=height/2: centerpoint
SUBU	T5,V0,T7	;T5=ypos for centerpoint
ADDIU	T9,T5,0036	;T9=ypos+36
SW	T9,00C8 (SP)	;SP+C8=ypos
LW	T3,29CC (T8)	;T3=BONDdata+29CC: selected option
ADDIU	AT,R0,0001
BNE	T3,AT,7F0C5DAC	;branch if not selected
NOP
//	highlight confirm
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T6,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T6,R0	;S0= text clip height
LUI	T2,8004
LUI	T4,8004
LW	T4,0EAC (T4)	;T4=80040EAC: p->1st font table
LW	T2,0EB0 (T2)	;T2=80040EB0: p->2nd font table
LUI	T1,A0FF
LUI	T7,0070
ORI	T7,T7,00A0	;T7=007000A0: dark green
ORI	T1,T1,A0F0	;T1=A0F0A0F0: light green
SW	T1,0018 (SP)	;SP+18= foregound colour
SW	T7,001C (SP)	;SP+1C= background colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,0020 (SP)	;SP+20= clip height
SW	V0,0024 (SP)	;SP+24= clip width
SW	R0,0028 (SP)	;SP+28= y offset
SW	R0,002C (SP)	;SP+2C= x offset
SW	T4,0014 (SP)	;SP+14= p->1st font table
JAL	7F0AE6EC	;display 2-tone text
SW	T2,0010 (SP)	;SP+10= p->2nd font table
BEQ	R0,R0,7F0C6024
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C5DAC:	FA8DC	normally display confirm
JAL	7000441C	;V0= text clip width
NOP
SLL	S0,V0,0x10
SRA	T5,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T5,R0	;S0= text clip height
LUI	T9,8004
LUI	T8,8004
LW	T8,0EAC (T8)	;T8=80040EAC: p->1st font table
LW	T9,0EB0 (T9)	;T9=80040EB0: p->2nd font table
LUI	T3,00FF
ORI	T3,T3,00B0	;T3=00FF00B0: green
SW	T3,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,00CC	;A1=p->xpos
ADDIU	A2,SP,00C8	;A2=p->ypos
LW	A3,00A4 (SP)	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T8,0014 (SP)	;SP+14= p->1st font table
JAL	7F0ADABC	;display monotone text
SW	T9,0010 (SP)	;SP+10= p->1st font table
//7F0C5E0C:	FA93C
BEQ	R0,R0,7F0C6024
OR	S1,V0,R0	;S1=V0: p->DL
NOP
NOP
NOP
//7F0C5E20:	respawn screen
LW	T6,00D8 (V1)	;T6=BONDdata+D8: button control
BEQL	T6,R0,7F0C6034	;branch if control disabled
OR	V0,S1,R0	;V0=S1: p->DL
LW	T2,0428 (V1)	;T2=BONDdata+428: 1: fading to black
BEQL	T2,R0,7F0C6034	;branch if not fading
OR	V0,S1,R0	;V0=S1: p->DL
LW	T4,0424 (V1)	;T4=BONDdata+424: 1: dying
LUI	T1,8009
BEQL	T4,R0,7F0C6034	;branch if not dying
OR	V0,S1,R0	;V0=S1: p->DL
LW	T1,C700 (T1)	;T1=8008C700: TRUE if play stopped
LUI	T7,8009
BNEL	T1,R0,7F0C6034	;branch if play stopped
OR	V0,S1,R0	;V0=S1: p->DL
LW	T7,C704 (T7)	;T7=8008C704: TRUE when game over
OR	A0,R0,R0	;A0=0
BNEL	T7,R0,7F0C6034	;branch if game over
OR	V0,S1,R0	;V0=S1: p->DL
BLEZ	V0,7F0C5F08	;branch if invalid DL
LW	T1,00D4 (SP)	;SP+D4= player#
SLL	T1,T1,0x2	;T1=player#->offset
LUI	V1,8008
ADDU	V1,V1,T1
LW	V1,9EE0 (V1)	;V1=80079EE0+offset: p->BONDdata
BEQ	V1,R0,7F0C5F08	;skip if not loaded
OR	A0,R0,R0	;A0=0
LW	A0,29D8 (V1)	;A0=BONDdata+29D8: #deaths
LW	V1,29DC (V1)	;V1=BONDdata+29DC: #suicides
ADDU	A0,V1,A0	;A0=suicides+deaths
//7F0C5E94:
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
//7F0C5F08:	fix for You Only Live Twice
JAL	7F01475C	;scenario bitflags & V1
ADDIU	V1,R0,0001	;V0=TRUE if You Only Live Twice
BEQ	V0,R0,7F0C5F2C	;skip if not YOLT
NOP
//7F0C5F18:	You Only Live Twice
JAL	7F01045C	;V0=#lives
NOP
SLT	AT,A0,V0	;TRUE if deaths < #lives
BEQL	AT,R0,7F0C6034	;skip if no more lives to live
OR	V0,S1,R0	;V0=S1: p->DL
//7F0C5F2C:	initialize viewport
JAL	7F0B4FB4	;setscissor::viewport
OR	A0,S1,R0	;A0=S1: p->DL
JAL	7F0ACD98	;microcode
OR	A0,V0,R0	;A0=V0: p->DL
//7F0C5F3C:	FAA6C	display press start when respawn possible
OR	S1,V0,R0	;S1=V0: p->DL
JAL	7F0C1DD8	;V0=p->text A0
ORI	A0,R0,A022	;A0=ID A022: "press start\n"
LUI	T1,8004
LW	T1,0EAC (T1)	;T1=80040EAC: p->1st font table
LUI	A3,8004
SW	V0,0060 (SP)	;SP+60= p->text
LW	A3,0EB0 (A3)	;A3=80040EB0: p->2nd font table
ADDIU	A0,SP,0064	;A0=@height
ADDIU	A1,SP,0068	;A1=@width
OR	A2,V0,R0	;A2=p->text
SW	R0,0014 (SP)	;SP+14= NULL
JAL	7F0AE98C	;proportions of string A2
SW	T1,0010 (SP)	;SP+10= p->1st font table
JAL	70004514	;V0=viewport ulx
NOP
JAL	7000449C	;V0=view.width
SH	V0,0056 (SP)	;SP+56= xpos
LH	V1,0056 (SP)	;V1=xpos
LW	T5,0068 (SP)	;T5=width
SRA	T7,V0,0x1	;T7=view.w / 2: centerpoint
ADDU	T9,T7,V1	;T9=xpos of middle of screen
SRA	T8,T5,0x1	;T8=width/2: centerpoint
SUBU	T3,T9,T8	;T3=xpos of centered text
JAL	70004524	;V0=view.uly
SW	T3,0070 (SP)	;SP+70=xpos
JAL	700044AC	;V0=view.height
SH	V0,0056 (SP)	;SP+56= ypos
LH	V1,0056 (SP)	;V1=ypos
LW	T4,0064 (SP)	;T4=height
SRA	T2,V0,0x1	;T2=view.h/2: centerpoint
ADDU	T1,T2,V1	;T1=ypos of middle of screen
SRA	T7,T4,0x1	;T2=height/2: centerpoint
SUBU	T5,T1,T7	;T5=ypos of centered text
JAL	7000441C	;V0= text clip width
SW	T5,006C (SP)	;SP+6C= ypos
SLL	S0,V0,0x10
SRA	T9,S0,0x10
JAL	7000442C	;V0= text clip height
OR	S0,T9,R0	;S0= text clip height
LUI	T8,8004
LUI	T3,8004
LW	T3,0EAC (T3)	;T3=80040EAC: p->1st font table
LW	T8,0EB0 (T8)	;T8=80040EB0: p->2nd font table
LUI	T6,00FF
ORI	T6,T6,00B0	;T6=00FF00B0: green
SW	T6,0018 (SP)	;SP+18= colour
OR	A0,S1,R0	;A0=S1: p->DL
ADDIU	A1,SP,0070	;A1=p->xpos
ADDIU	A2,SP,006C	;A2=p->ypos
LW	A3,0060 (SP)	;A3=p->text
SW	S0,001C (SP)	;SP+1C= text clip height
SW	V0,0020 (SP)	;SP+20= text clip width
SW	R0,0024 (SP)	;SP+24= y offset
SW	R0,0028 (SP)	;SP+28= x offset
SW	T3,0014 (SP)	;SP+14= 1st font table
JAL	7F0ADABC	;display monotone text
SW	T8,0010 (SP)	;SP+10= p->2nd font table
//7F0C6024:	set combiner
JAL	7F0ACEF0	;set combiner: bayer, lod, perspective
OR	A0,V0,R0	;A0=V0: p->DL
OR	S1,V0,R0	;S1=V0: p->DL
//7F0C6030:	return
OR	V0,S1,R0	;V0=S1: DL
LW	RA,003C (SP)
LW	S0,0034 (SP)
LW	S1,0038 (SP)
JR	RA
ADDIU	SP,SP,00D8

+_+


+_+

Lets shoot for the slow and methodical method.  Change one thing at a time, then merge, then recompile.
Replace the nasty long display code with simplified calls using the new command.

new stack layout:	*indicates dirty
SP+34	S0
SP+38	S1
SP+3C	RA
SP+40	page#
SP+44	xpos
SP+48	*p->colours
SP+4C	*p->scores

SP+90	*score loop count
SP+94	*pl1 score
SP+98	*pl2 score
SP+9C	*pl3 score
SP+A0	*pl4 score
SP+A4	
SP+A8	
SP+AC	*pl1 colour	*text buffer
SP+B0	*pl2 colour
SP+B4	*pl3 colour
SP+B8	*pl4 colour

SP+D0	#players
SP+D4	player#

Also, use a new sort of blink register
80048394	MP current time...
800483B0	milliseconds in current stage - stops when paused
80048498	TRUE when advancing the blink registers
8004849C	previous time
800484A0	next time
8008C708	current <> blink register
8008C70C	current <> blink timer	(0-0x13	0-19)
8008C710	current GO blink register
8008C714	current GO blink timer	(0-0x77	0-119)

line 2:	+25
	rank appears on menus 1,2,3,4
line 3:	+35
	p# losses (red) appears on menu 1
	p# wins appears on menu 2
	scores appear on menus 3,4
	cancel+confirm appear on menu 6	(+-18)
4-display for menus 1,2,3,4:	+46/+56
	menus 1,2 do not display current player unless suicides (red)
	menus 3,4 display team colours
menu 0 unique

customized...
7F0C4024	F8B54	multiplayer watch menu display
	accepts: A0=p->display list
27BDFF28	ADDIU	SP,SP,FF28
AFBF003C	SW	RA,003C (SP)
AFB10038	SW	S1,0038 (SP)
00808825	OR	S1,A0,R0	;S1=A0: p->display list (DL)
0FC26C54	JAL	7F09B150	;V0= cur player #
AFB00034	SW	S0,0034 (SP)
0FC26919	JAL	7F09A464	;V0=# players
AFA200D4	SW	V0,00D4 (SP)	;SP+D4= cur.player
AFA200D0	*SW	V0,00D0 (SP)	;SP+D0= #players
2C410002	*SLTIU	AT,V0,0002
142007AE	*BNE	AT,R0,7F0C6030	;quit if solo
3C100002	*LUI	S0,R0,0002	;S0=0,2,0	string, no highlight, default colour	
//7F0C4050:	F8B80	detect if menu in use
0C001127	-JAL	7000449C	;V0=view.width
3C198008	*LUI	T9,8008
0C001145	-JAL	70004514	;V0=viewport ulx
00020843	*SRA	AT,V0,0x1	;AT=width/2
00220821	*ADDU	AT,AT,V0	;AT=xpos for center of screen, used by almost everything
8F23A0B0	*LW	V1,A0B0 (T9)	;V1=8007A0B0: p->BONDdata
8C6E29C4	LW	T6,29C4 (V1)	;T6=BONDdata+29C4: TRUE when menu activated
11C00768	*BEQ	T6,R0,7F0C5E20	;branch if not in menu
AFA10044	*SW	AT,0044 (SP)	;SP+A8=xpos
0FC2B366	JAL	7F0ACD98	;microcode
02202025	-OR	A0,S1,R0	;A0=S1: DL
//7F0C4080:	F8BB0	
00408825	OR	S1,V0,R0	;S1=V0: p->DL
3C198008	*LUI	T9,8008
3C0B8009	*LUI	T3,8009
//7F0C409C:	F8BCC
8F39A0B0	LW	T9,A0B0 (T9)	;T9=8007A0B0: p->BONDdata
8F2929C8	LW	T1,29C8 (T9)	;T1=BONDdata+29C8: selected page in menu
AFA900A4	*SW	T1,00A4 (SP)	;SP+A4= cur.page#
83A900A7	+LB	T1,00A7 (SP)	;cheaper than masking it...
2D210007	*SLTIU	AT,T1,0007	;TRUE if menu 0-6
1020++++	*BEQ	AT,R0,7F0C6024	;skip if page 7: waiting for exit (and defaults to no display)
24010004	ADDIU	AT,R0,0004
1029000A	BEQ	AT,T1,7F0C4128	;branch if page 4: pause
2D210004	*SLTIU	AT,T1,0005	;TRUE if menu 0-4
50200010	*BEQL	AT,R0,7F0C4190	;branch if page 5,6: exit + cancel/confirm
3404A01A	*ORI	A0,R0,A01A
//7F0C40C4:	F8BF4	pages 0,1,2,3 - play
8D6AC704	LW	T2,C704 (T3)	;T2=8008C704: TRUE when game over
1140000D	*BEQ	T2,R0,7F0C4190	;branch if still gaming away
3404A015	-ORI	A0,R0,A015	;A0=ID A015: "PLAY"
0FC317F7	*JAL	7F0C5FDC	;V0=TRUE if blinking
34040078	*ORI	A0,R0,0078	;A0=rate: 120
10000009	BEQ	R0,R0,7F0C4190
3444A016	*ORI	A0,V0,A016	;A0=ID A016/7: "GAME OVER" / "START TO EXIT"
//7F0C4128:	F8C58	page 4 - pause/unpause
8D6DC718	*LW	T5,C718 (T3)	;T5=8008C718: TRUE if paused
11A00006	*BEQ	T5,R0,7F0C4190	;branch if unpaused
3404A019	-ORI	A0,R0,A019	;A0=ID A019: "PAUSE"
//7F0C4134:	F8C64	paused
0FC26C54	JAL	7F09B150	;V0= cur player #
8D6EC71C	*LW	T6,C71C (T3)	;T6=8008C71C: player# who paused game
504E0001	*BEQL	V0,T6,+1	;set highlight if you paused game
3C100102	*LUI	S0,R0,0102	;S0=1	you paused game
3404A018	ORI	A0,R0,A018	;A0=ID A018: "PAUSED"
//7F0C4190:	F8CC0	figure out text y position
0FC30776	*JAL	7F0C1DD8	;V0=p->text A0
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
0C001149	-JAL	70004524	;V0= uly
00023825	*OR	A3,V0,R0	;A3= p->text
24460016	*ADDIU	A2,V0,0016	;A2=ypos+16
AFB00010	*SW	S0,0010 (SP)
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//7F0C4114:	F8DF0	set up blink for arrows
0FC317F7	*JAL	7F0C5FDC	;V0=TRUE if blinking
34040020	*ORI	A0,R0,0020
3C100002	*LUI	S0,0002
54400001	*BNEL	V0,R0,+1	;highlight when applicable
3C100102	*LUI	S0,0102
//7F0C4128:	F8E04	left blinking arrow, offset to left of string
0FC307A3	JAL	7F0C1E8C	;TRUE when left enabled on MP menu page
3C068009	*LUI	A2,8009
1040000E	BEQ	V0,R0,7F0C416C	;skip if left not enabled
8CC6C704	*LW	A2,C704 (A2)	;A2=8008C704: TRUE when game over
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
54C00001	*BNEL	A2,R0,+1
24A5FFEE	*ADDIU	A1,A1,FFEE	;xpos-=12: account for longer string
0C001149	-JAL	70004524	;V0=view.uly
24A5FFD8	*ADDIU	A1,A1,FFD8	;xpos-=28: normal spacing difference
24460016	*ADDIU	A2,V0,0016
27A700AC	*ADDIU	A3,SP,00AC	;A3=p->SP+AC: text buffer
//7F0C4154:	F8E30	create text
3C043C00	*LUI	A0,3C00
AFA400AC	*SW	A0,00AC (SP)	;SP+AC= "<"
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//7F0C416C:	right blinking arrow
0FC30788	JAL	7F0C1E20	;TRUE when right enabled on MP menu page
3C068009	*LUI	A2,8009
1040000E	BEQ	V0,R0,7F0C4598	;branch if not enabled
8CC6C704	*LW	A2,C704 (A2)	;A2=8008C704: TRUE when game over
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
54C00001	*BNEL	A2,R0,+1
24A50012	*ADDIU	A1,A1,0012	;xpos+=12: account for longer string
0C001149	-JAL	70004524	;V0=view.uly
24A50028	*ADDIU	A1,A1,0028	;xpos+=28: normal spacing difference
24460016	*ADDIU	A2,V0,0016
27A700AC	*ADDIU	A3,SP,00AC	;A3=p->SP+AC: text buffer
//7F0C4198:	F8F90	create text
3C043E00	*LUI	A0,3E00
AFA400AC	*SW	A0,00AC (SP)	;SP+AC= ">"
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//7F0C41B0:

//7F0C41B0:	F8CE0	page 0--awards	when finished, returns
83A200A7	*LB	V0,00A7 (SP)	;V0=BONDdata+29C8: selected page in menu
1440002D	BNE	V0,R0,7F0C426C
3C100002	LUI	S0,0002
//7F0C57BC:	display "weapon of choice:"
0FC30776	JAL	7F0C1DD8	;V0=p->text A0
34049C6B	ORI	A0,R0,9C6B	;A0=1D 9C6B: "Weapon of choice:"
0C001149	-JAL	70004524	;V0=view.uly
00023825	*OR	A3,V0,R0	;A3= p->text
24460025	*ADDIU	A2,V0,0025	;A2=ypos
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//	display weapon type
8FA400D4	LW	A0,00D4 (SP)	;A0=cur.player
0FC026D4	JAL	7F009B50	;V0=p->name of player A0's favored weapon in hand A1
00002825	OR	A1,R0,R0	;A1=right hand
0C001149	-JAL	70004524	;V0=view.uly
00023825	*OR	A3,V0,R0	;A3= p->text
24460039	*ADDIU	A2,V0,0039	;A2=ypos, technically for japanese.  35 was english
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
//7F0C5988:	display award 1
3C038008	LUI	V1,8008
8C63A0B0	LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
8C672A10	LW	A3,2A10 (V1)	;T0=BONDdata+2A10: name of award1
10E00009	BEQ	A3,R0,7F0C4240	;skip if NULL
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
0C001149	-JAL	70004524	;V0=view.uly
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
2446004B	*ADDIU	A2,V0,004B	;A2=ypos
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
//7F0C5A60:	display award 2
3C038008	LUI	V1,8008
8C63A0B0	LW	V1,A0B0 (V1)	;V1=8007A0B0: p->BONDdata
8C672A14	LW	A3,2A14 (V1)	;T0=BONDdata+2A14: name of award2
10E00007	BEQ	A3,R0,7F0C4264	;skip if NULL
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
0C001149	-JAL	70004524	;V0=view.uly
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
24460058	*ADDIU	A2,V0,0058	;A2=ypos
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
//	hit the combiner and return, since no more menus apply
1000++++	*BEQ	R0,R0,7F0C6024
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//
//7F0C426C:	F8D9C	rearranged to test if displaying rank
0FC30FD7	JAL	7F0C3F5C	;V0=TRUE if rank to be displayed on MP menu
00000000	*NOP
1040000F	BEQ	V0,R0,7F0C42B4	;skip if rank not displayed
3C100002	*LUI	S0,0002
83A200A7	*LB	V0,00A7 (SP)	;V0=BONDdata+29C8: selected page in menu
2C410005	*SLTIU	AT,V0,0005	;TRUE if pages 1-4
1020000B	*BEQ	AT,R0,7F0C42B4	;branch if not displaying rank
27A400AC	ADDIU	A0,SP,00AC	;A0=SP+AC: p->buffer
0FC30F25	JAL	7F0C3C94	;print rank of player A1 to A0
8FA500D4	LW	A1,00D4 (SP)	;A1=cur.player#
0C001149	-JAL	70004524	;V0=view.uly
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
24460025	*ADDIU	A2,V0,0025	;A2=ypos
27A700AC	*ADDIU	A3,SP,00AC	;A3=p->SP+AC: text buffer
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//7F0C4454:	F8DE4	rearranged to display line 3--menu specific
83A200A7	*LB	V0,00A7 (SP)	;V0=BONDdata+29C8: selected page in menu
24010006	ADDIU	AT,R0,0006
102200++	BEQ	AT,V0,+menu6
2442FFFF	*ADDIU	V0,V0,FFFF	;AT=page-1
2C410004	*SLTIU	AT,V0,0004	;TRUE if pages 1-4
102000++	*BEQ	AT,R0,7F0C4C50
3404A01E	ORI	A0,R0,A01E	;A0=ID A01E: "LOSSES"
50400008	BEQL	V0,R0,+display	;display in red if page 1--losses
36100004	ORI	S0,S0,0004
2C410002	*SLTIU	AT,V0,0002	;TRUE if pages 1-2
14200005	BNE	AT,R0,+display	;branch if page 2--kills
3404A01D	ORI	A0,R0,A01D	;A0=ID A01D: "KILLS"
//
0FC30FF3	JAL	7F0C3FCC	;V0= TRUE if displaying score in MP menu
00000000	NOP
104000++	BEQ	V0,R0,7F0C4C50	;skip if not displaying score
3404A01B	ORI	A0,R0,A01B	;A0=ID A01B: "SCORES"
//	generate "%s%d %s" string
0FC30776	JAL	7F0C1DD8	;V0=p->text A0
8FA600D4	LW	A2,00D4 (SP)	;A3=cur.player#
00022825	OR	A1,V0,R0
27A400AC	ADDIU	A0,SP,00AC	;A0=SP+AC: p->buffer
0C002B25	JAL	7000AC94	;sprintf(A0,A1,A2,A3)
24C60001	ADDIU	A2,A2,0001	;A2++: cur.player++
//	display line 3
0C001149	-JAL	70004524	;V0=view.uly
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
24460035	*ADDIU	A2,V0,0035	;A2=ypos
27A700AC	*ADDIU	A3,SP,00AC	;A3=p->SP+AC: text buffer
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
100000++	*BEQ	R0,R0,+4-way
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//7F0C4330:	F8E60	special handler for menu 6--cancel/confirm
//cancel:
0FC30776	JAL	7F0C1DD8	;V0=p->text A0
3404A020	ORI	A0,R0,A020	;A0=1D A020: "cancel"
0C001149	-JAL	70004524	;V0=view.uly
00023825	*OR	A3,V0,R0	;A3=p->string
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
24A5FFFE	*ADDIU	A1,A1,FFFE	;A1=xpos-18
24460035	*ADDIU	A2,V0,0035	;A2=ypos
AFB00010	*SW	S0,0010 (SP)	;display mode = string, default colour
3C028008	LUI	V0,8008
8C42A0B0	LW	V0,A0B0 (V0)	;V0=8007A0B0: p->BONDdata
8C4229CC	LW	V0,29CC (V0)	;V0=BONDdata+29CC: (0-cancel, 1-confirm)
AFA200AC	SW	V0,00AC (SP)
38420003	XORI	V0,V0,0003	;flips highlight test and sets right-align
A3A20010	SB	V0,0010 (SP)	;SP+10= highlight
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
00408825	OR	S1,V0,R0	;S1=V0: p->DL
//comfirm:
0FC30776	JAL	7F0C1DD8	;V0=p->text A0
3404A021	ORI	A0,R0,A021	;A0=ID A021: "confirm"
0C001149	-JAL	70004524	;V0=view.uly
00023825	*OR	A3,V0,R0	;A3=p->string
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
24A50002	*ADDIU	A1,A1,0002	;A1=xpos+18
24460035	*ADDIU	A2,V0,0035	;A2=ypos
AFB00010	*SW	S0,0010 (SP)	;display mode = string, default colour
8FA200AC	*LW	V0,00AC (SP)
34420004	+ORI	V0,V0,0004	;set left-align
A3A20010	SB	V0,0010 (SP)	;SP+10= highlight
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
00408825	OR	S1,V0,R0	;S1=V0: p->DL
//7F0C454C:	F8ED8	see if you need a 4-way display
83A800A7	LB	T0,00A7 (SP)	;T0=page#
2508FFFF	ADDIU	T0,T0,FFFF	;T0=page--	(1-7)
2D010004	SLTIU	AT,T0,0004	;TRUE if page 1-4
1020++++	BEQ	AT,R0,+next
//7F0C43B8:	initialize the buffers
24020003	ADDIU	V0,R0,0003
001D1825	OR	V1,SP,R0
AC600094	SW	R0,0094 (V1)
AC6000AC	SW	R0,00AC (V1)
24630004	ADDIU	V1,V1,0004
1440FFFC	BNE	V0,R0,-4
2442FFFF	ADDIU	V0,V0,FFFF
//7F0C43D4:	sort out which page will be displayed here
27AE0094	ADDIU	T6,SP,0094	;V1=p->scores (usually)
AFAE004C	SW	T6,004C (SP)	;SP+44= p->scores
27AF00AC	ADDIU	T7,SP,00AC	;V1=p->colours (usually)
2D020002	SLTIU	V0,T0,0002	;TRUE if page 1-2
10400019	BEQ	V0,R0,+page3
AFAF0048	SW	T7,0048 (SP)	;SP+48= p->colours	
//7F0C43EC:	both pages 1 and 2: colourize and inhibit by default
8FA100D4	LW	AT,00D4 (SP)	;AT=cur.player#
00010880	SLL	AT,AT,0x2	;AT=player->offset
003D1821	ADDU	V1,AT,SP	;AT=SP+offset
3402FF04	ORI	V0,R0,FF04	;V0=100: inhibit | red
1500000E	BNE	T0,R0,+page2	;branch if page 2
A46200AE	SH	V0,00AE (V1)
//7F0C4404:	page 1--losses
001D7025	OR	T6,SP,R0
3C038008	LUI	V1,8008
00611821	ADDU	V1,V1,AT	;V1+=playeroffset
24020003	ADDIU	V0,R0,0003
8C619F14	LW	AT,9F14 (V1)
ADC10094	SW	AT,0094 (T6)
54200001	BNEL	AT,R0,+1
A1C000AE	SB	R0,00AE (T6)
24630070	ADDIU	V1,V1,0070
25CE0004	ADDIU	T6,T6,0004
1440FFF9	BNE	V0,R0,-7
2442FFFF	ADDIU	V0,V0,FFFF
10000022	BEQ	R0,R0,+display	;safe to soak next line
//7F0C4438:	page 2--kills
3C028008	LUI	V0,8008
8C42A0B4	LW	V0,A0B4 (V0)	;V0=p->cur.stats
24420024	ADDIU	V0,V0,0024	;p->#playerkills
1000001E	BEQ	R0,R0,+display
AFA2004C	SW	V0,004C (SP)	;SP+44=p->kills
//
//7F0C444C:	page 3--scores
0FC30FF3	JAL	7F0C3FCC	;V0= TRUE if displaying score in MP menu
8FA400D0	LW	A0,00D0 (SP)	;T6=SP+D0: #players (1-4)
1040++++	BEQ	V0,R0,7F0C4510	;skip if not displaying score
2484FFFF	ADDIU	A0,A0,FFFF	;A0=playercount-1 (0-3)
//7F0C445C:	retrieve display type
0FC051DB	JAL	7F01476C	;V0=scenario::score
00008025	OR	S0,R0,R0	;S0=display::point
54400001	BNEL	V0,R0,+1
3C100001	LUI	S0,0001		;S0=display::time
//7F0C446C:	collect scores
0FC30E36	JAL	7F0C38D8	;V0=score (in NSNA: V0=score, V1=time)
AFA40090	SW	A0,0090 (SP)	;SP+90= count
00431021	ADDU	V0,V0,V1	;V0=total score in NSNA
8FA40090	LW	A0,0090 (SP)	;A0=count
00041880	SLL	V1,A0,0x2	;V1=player#->offset
007D1821	ADDU	V1,SP,V1	;V1=SP+offset
AC620094	SW	V0,0094 (V1)	;score->buffer
AC7000AC	SW	S0,00AC (V1)	;display->buffer
24010001	ADDIU	AT,R0,0001
8FAE00D4	LW	T6,00D4 (SP)	;T6=cur.player#
508E0001	BEQL	A0,T6,+1
A06100AC	SB	AT,00AC (V1)	;highlight if cur.player
000408C0	SLL	AT,A0,0x3
00240823	SUBU	AT,AT,A0
00010900	SLL	AT,AT,0x4	;AT=player# * 0x70
3C0E8008	LUI	T6,8008
002E7021	ADDU	T6,T6,AT
81C19F59	LB	AT,9F59 (T6)	;AT=player's team flag
A06100AF	SB	AT,00AF (V1)	;team colour for player
1480FFEC	BNE	A0,R0,7F0C446C	;loop for each player
2484FFFF	ADDIU	A0,A0,FFFF	;A0++	count++
//
//7F0C4664:	loop to display each line to the screen
00008025	OR	S0,R0,R0
//7F0C4668:	loop this.  get x/y screen positions, test if inhibitted, then display
8FA50048	+LW	A1,0048 (SP)	;A1=p->colours
0FC317F5	JAL	7F0C5FD4	;A1=xpos,A2=ypos
00102025	OR	A0,S0,R0	;A0=S0: player#
00104080	SLL	T0,S0,0x2	;T0=#players->offset
8FAF004C	`LW	T7,004C (SP)	;T7=p->scores
8FAE0048	LW	T6,0048 (SP)	;T6=p->colours
010E1021	ADDU	V0,T6,T0	;V0=p->player#'s colours
80410002	LB	AT,0002 (V0)	;AT=inhibitor
04200007	BLTZ	AT,+loopus
8C420000	LW	V0,0000 (V0)	;V0=colour
AFA20010	SW	V0,0010 (SP)	;SP+10=colour
010F3821	ADDU	A3,T7,T0
8CE70000	LW	A3,0000 (A3)	;A3=score
0FC30D68	JAL	7F0C35A0	;display player data to MP menu
00112025	OR	A0,S1,R0
00028825	OR	S1,V0,R0
//7F0C4500:	loopus
26100001	ADDIU	S0,S0,0001	;count++
8FA400D0	LW	A0,00D0 (SP)	;T6=SP+D0: #players (1-4)
1490FFEE	BNE	A0,S0,-display
00000000	NOP
//7F0C4510:

//	return to the microcode generator at end of thing, to correct screen
1000++++	*BEQ	R0,R0,7F0C6024
00111025	*OR	V0,S1,R0	;V0=S1: p->DL


//7F0C5E20:	FA950	respawn screen
8C6E00D8	LW	T6,00D8 (V1)	;T6=BONDdata+D8: button control
11C00082	*BEQ	T6,R0,7F0C6030	;return if control disabled
8C6A0428	LW	T2,0428 (V1)	;T2=BONDdata+428: 1: fading to black
11400080	*BEQ	T2,R0,7F0C6030	;return if not fading
8C6C0424	LW	T4,0424 (V1)	;T4=BONDdata+424: 1: dying
3C0F8009	*LUI	T7,8009
1180007D	*BEQ	T4,R0,7F0C6030	;return if not dying
8DE9C700	*LW	T1,C700 (T7)	;T1=8008C700: TRUE if play stopped
1520007B	*BNE	T1,R0,7F0C6030	;return if play stopped
8DEFC704	LW	T7,C704 (T7)	;T7=8008C704: TRUE when game over
15E00079	*BNE	T7,R0,7F0C6030	;return if game over
8FA900D4	LW	T1,00D4 (SP)	;SP+D4= player#
00094880	SLL	T1,T1,0x2	;T1=player#->offset
3C038008	LUI	V1,8008
00691821	ADDU	V1,V1,T1
8C639EE0	LW	V1,9EE0 (V1)	;V1=80079EE0+offset: p->BONDdata
10600004	BEQ	V1,R0,+4	;skip if not loaded
00002025	OR	A0,R0,R0	;A0=0
8C6429D8	LW	A0,29D8 (V1)	;A0=BONDdata+29D8: #deaths
8C6329DC	LW	V1,29DC (V1)	;V1=BONDdata+29DC: #suicides
00642021	ADDU	A0,V1,A0	;A0=suicides+deaths
//7F0C5E74:	FA9A4	Free
...
//7F0C5F08:	FAA38	fix for You Only Live Twice
	JAL	7F01475C	;scenario bitflags & V1
	ADDIU	V1,R0,0001	;V0=TRUE if You Only Live Twice
	BEQ	V0,R0,7F0C5F2C	;skip if not YOLT
	NOP
//7F0C5F18:	FAA48	You Only Live Twice
	JAL	7F01045C	;V0=#lives
	NOP
	SLT	AT,A0,V0	;TRUE if deaths < #lives
10200042	*BEQ	AT,R0,7F0C6030	;skip if no more lives to live
00000000	*NOP
//7F0C5F2C:	FAA5C	initialize viewport
0FC2D3ED	JAL	7F0B4FB4	;setscissor::viewport
00112025	OR	A0,S1,R0	;A0=S1: p->DL
0FC2B366	JAL	7F0ACD98	;microcode
00022025	OR	A0,V0,R0	;A0=V0: p->DL
//7F0C5EA8:	FAA6C	display press start when respawn possible
00408825	OR	S1,V0,R0	;S0=V0: p->DL
0FC317F7	*JAL	7F0C5FDC	;V0=TRUE if blinking
3404003C	*ORI	A0,R0,003C
3404A022	ORI	A0,R0,A022	;A0=ID A022: "press start\n"
50400001	*BNEL	V0,R0,+1
3404A023	*ORI	A0,R0,A023	;A0=ID A023: "to continue\n"
0FC30776	JAL	7F0C1DD8	;V0=p->text A0
8FA50044	-LW	A1,0044 (SP)	;A1=x position
//7F0C5F58:	FAA88	y position
0C00112B	-JAL	700044AC	;V0=view.height
00023825	*OR	A3,V0,R0	;A3=p->text
0C001149	-JAL	70004524	;V0=view.uly
00023043	*SRA	A2,V0,0x1	;A2=height/2
00463021	*ADDU	A2,A2,V0	;A2=ypos+offset to center text
//7F0C5F6C:	FAA9C	
3C040002	*LUI	A0,R0,0002	;A2=00020000: string: default colour (green)
AFA40010	*SW	A0,0010 (SP)
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
//7F0C5F84:	FAAB4	free
...
//7F0C6024:	FAB54	set combiner	NOTE: both death and menus should jump into this!
	JAL	7F0ACEF0	;set combiner: bayer, lod, perspective
	OR	A0,V0,R0	;A0=V0: p->DL
	OR	S1,V0,R0	;S1=V0: p->DL
//7F0C6030:	FAB60	return
OR	V0,S1,R0	;V0=S1: DL
LW	RA,003C (SP)
LW	S0,0034 (SP)
LW	S1,0038 (SP)
JR	RA
ADDIU	SP,SP,00D8

Convenience dicatates a rather simple, generic timer test for blinks
The other blinks are okay as-is, but would prefer something less reliant on mortal life
use 800483B0 stage millisecond timer

7F0C5FBC	FAAEC	V0=TRUE if blinking
	accepts: A0=blinkrate (ms)
3C028005	LUI	V0,8005
8C42849C	LW	V0,849C (V0)	;ms from start of stage, used for watch
0044001B	DIVU	V0,A0
00001012	MFLO	V0	;time / rate
03E00008	JR	RA
30420001	ANDI	V0,V0,0001	;V0=1 if even number of divisions


For convenience, and since it is the most-used format, have this routine figure out the x/ypos for a given player for a specific #players
7F0C5FD4	FAB04	compute x/y position of player A0's data on current player's MP menu and sets text alignment
	accepts: A0=player# (0-3), A1=start of colour table
	returns: A1=xpos, A2=ypos
	fries: AT,V0,V1,A3,T6,T7,T8,T9
//7F0C5FF4:	FAB24	get # players
27BDFFD0	ADDIU	SP,SP,FFD0
AFBF002C	SW	RA,002C (SP)
0C001127	JAL	7000449C	;V0=view.width
00053825	+OR	A3,A1,R0
0C001145	JAL	70004514	;V0=viewport ulx
00022843	SRA	A1,V0,0x1	;A1=width/2
0C001149	JAL	70004524	;V0=view.uly
00A22821	ADDU	A1,A1,V0	;A1=xpos+width/2
0FC26919	JAL	7F09A464	;V0=#players (1-4)
24460046	ADDIU	A2,V0,0046	;ypos= immediate offset, since easier than 3/5
00040880	+SLL	AT,A0,0x2
00273821	+ADDU	A3,A3,AT	;A3=p->player A0's colour code
2C410003	SLTIU	AT,V0,0003	;TRUE if 1-2 players
1420000A	*BNE	AT,R0,+ypos	;branch if 1-2 players
30810001	ANDI	AT,A0,0001	;TRUE if player 2/4
//7F0C6024:	FAB54	3/4-player display offsets
50200002	BEQL	AT,R0,+2	;-10 if players 1/3
24A5FFF8	ADDIU	A1,A1,FFF8
24A50008	ADDIU	A1,A1,0008	;+10 if players 2/4
3C0E0200	+LUI	T6,0200
002E0804	+SLLV	AT,T6,AT	;align left or right
8CEE0000	+LW	T6,0000 (A3)
002E0825	+OR	AT,T6,AT
ACE10000	+SW	AT,0000 (A3)
30810002	ANDI	AT,A0,0002	;TRUE if player 3-4
//7F0C6034:	FAB64	correct ypos for second row
54200001	BNEL	AT,R0,+1	;+10 if second row; AT=TRUE if second row
24C60010	ADDIU	A2,A2,0010
//7F0C603C:	FAB6C	return
8FBF002C	LW	RA,002C (SP)
03E00008	JR	RA
27BD0030	ADDIU	SP,SP,0030

+_+


!WIP!
Glean info to build the accuracy display, or more probably make routines that autocalc it and mix into original.
See what's involved in adding another page...  I like the flip up/down thing, but others may not...

7F0C5F08	FAA38	create p->accuracy string of format "%.1f%%" for cur.player
	accepts: A0=@struct	--[A1=(opt.)#places]--
	struct is as such:	make sure buffer is at least 0x20 large...
	0x0	4	total shots
	0x4	4	head hits
	0x8	4	body hits
	0xC	4	limb hits
	0x10	4	other hits
	0x14	var	accuracy string.  should be at least 7 bytes long, minimum
	
//	optional idea to make a variable-accuracy format string
//	"%%.%df%%%%"	not implemented--probably won't be unless called for
	ADDIU	SP,SP,FF80
	SW	RA,007C (SP)
	SW	A0,0078 (SP)
	LUI	V0,2525
	SW	V0,0048 (SP)
	ORI	V0,V0,2E25
	SW	V0,0040 (SP)
	LUI	V0,6466
	ORI	V0,V0,2525
	SW	V0,0044 (SP)
	ADDIU	A0,SP,0020	;A0=p->buffer
	ORI	A2,A1,R0	;A2=#decimal places
	JAL	7000AC94	;sprintf(A0,A1,A2,A3)
	ADDIU	A1,SP,0040
	LW	A0,0078 (SP)
//proceed with #hits...
	
//7F0C5F08:	FAA38	actual code starts here.  above was theoretical
27BDFF80	ADDIU	SP,SP,FF80
AFBF007C	SW	RA,007C (SP)
3C02252E	LUI	V0,252E
34423166	ORI	V0,V0,3166
AFA20020	SW	V0,0020 (SP)
3C022525	LUI	V0,2525
AFA20024	SW	V0,0024 (SP)
//7F0C5F5C:	FAA8C	calculate #hits
3C028008	LUI	V0,8008
8C42A0B4	LW	V0,A0B4 (V0)	;V0=cur.player's stats
8C430014	LW	V1,0014 (V0)	;V1=hat hits
8C410010	LW	AT,0010 (V0)	;AT=weapon hits
00231821	ADDU	V1,V1,AT
AC830010	+SW	V1,0010 (A0)
8C410004	LW	AT,0004 (V0)	;AT=head hits
AC810004	+SW	AT,0004 (A0)
00231821	ADDU	V1,V1,AT
8C410008	LW	AT,0008 (V0)	;AT=body hits
AC810008	+SW	AT,0008 (A0)
00231821	ADDU	V1,V1,AT
8C41000C	LW	AT,000C (V0)	;AT=limb hits
AC81000C	+SW	AT,000C (A0)
00231821	ADDU	V1,V1,AT
8C410018	LW	AT,0018 (V0)	;AT=object hits	just like original, don't count object hits in "other"
00231821	ADDU	V1,V1,AT	;V1=total hits
//7F0C5F90:	FAAC0	calculate accuracy
8C420000	LW	V0,0000 (V0)	;V0=total shots
AC820000	+SW	V0,0000 (A0)
58400009	BLEZL	V0,+create	;branch if you didn't fire
44800000	MTC1	R0,F0
3C0142C8	LUI	AT,42C8
44814000	MTC1	AT,F8		;F8=100.0	[42C80000]
44832000	MTC1	V1,F4
44820000	MTC1	V0,F0
468021A0	CVT.S.W	F6,F4	;F6=(float) hits
46800120	CVT.S.W	F4,F0	;F18=(float) shots
46083002	MUL.S	F0,F6,F8	;F10=hits * 100.0
46040003	DIV.S	F0,F0,F4	;F0=hits * 100.0 / shots
//7F0C5FBC:	FAAEC	create final string
24840014	+ADDIU	A0,A0,0014	;A0=p->text buffer
27A50020	ADDIU	A1,SP,0020	;A1=p->format string
46000121	CVT.D.S	F4,F0	;F4=(double) percentage
44072000	MFC1	A3,F4		;A3=percentage (lower)
0C002B25	JAL	7000AC94	;sprintf(A0,A1,A2,A3)
44062800	MFC1	A2,F5		;A2=percentage (upper)
//7F0C5FD0:	FAB00	return
8FBF007C	LW	RA,007C (SP)
03E00008	JR	RA
27BD0080	ADDIU	SP,SP,0080


Stats to display:
9C6A	accuracy:	%	(shots vs. total hits)
9C6C	shot total:
9C6D	head hits:	#	%
9C6E	body hits:	#	%
9C6F	limb hits:	#	%
9C70	others:	#	%
distance?
longest/shortest inning?
longest/shortest b/w kills?

Two pages, easiest.  Probably press up/down on the awards screen.
	head #		
	body #
	limb #
	other #

	accuracy	%
	shot total	#
	longest inning	#:##
	streak		#

//7F0C41B0:	F8CE0	page ?--accuracy/hit totals	when finished, returns
83A20042	*LB	V0,0042 (SP)	;V0=BONDdata+29C8: selected page in menu
104000	BEQ	V0,R0,7F0C426C	;branch if awards page
	LUI	S0,0002
//	get all stats and accuracy string.  buffer must be at least 0x20
0FC317C2	JAL	7F0C5F08	;fill struct A0 with stuff
27A40050	ADDIU	A0,SP,0050	;A0=buffer	
	LB	V0,0042 (SP)
	SLTIU	V0,V0,0002
1040	BEQ	V0,R0,+hit total page
//7F0C41DC:	make corrected x positions, to save code
8FA50044	LW	A1,0044 (SP)	;A1=xpos
3C100202	LUI	S0,0202
24A2FFFC	ADDIU	V0,A1,FFFC
8FA20048	SW	V0,0048 (SP)
24A20004	ADDIU	V0,A1,0004
8FA2004C	SW	V0,004C (SP)
//	write all left-hand strings first, then go back and fill in stats
//	display "Accuracy:"
0FC30776	JAL	7F0C1DD8	;V0=p->text A0
34049C6A	ORI	A0,R0,9C6A	;A0=1D 9C6A: "Accuracy:"
0C001149	-JAL	70004524	;V0=view.uly
00023825	*OR	A3,V0,R0	;A3= p->text
24460025	*ADDIU	A2,V0,0025	;A2=ypos
8FA50048	*LW	A1,0048 (SP)	;A1=xpos
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//	display "shot total:"	9C6C
0FC30776	JAL	7F0C1DD8	;V0=p->text A0
34049C6C	ORI	A0,R0,9C6C	;A0=1D 9C6C: shot total:"
0C001149	-JAL	70004524	;V0=view.uly
00023825	*OR	A3,V0,R0	;A3= p->text
24460035	*ADDIU	A2,V0,0035	;A2=ypos
8FA50048	*LW	A1,0048 (SP)	;A1=xpos
AFB00010	*SW	S0,0010 (SP)	;display mode = string
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//	display "longest inning:"	A01C
3C100002	LUI	S0,0002
0FC30776	JAL	7F0C1DD8	;V0=p->text A0
3404A01C	ORI	A0,R0,A01C	;A0=1D 9C6D: "head hits:"
0C001149	-JAL	70004524	;V0=view.uly
00023825	*OR	A3,V0,R0	;A3= p->text
24460045	*ADDIU	A2,V0,0045	;A2=ypos
8FA50044	*LW	A1,0044 (SP)	;A1=xpos
AFB00010	*SW	S0,0010 (SP)	;display mode = string, centered
0FC30D68	*JAL	7F0C35A0	;display player data to MP menu
00112025	*OR	A0,S1,R0
//	right hand column does all the stats.
//	display accuracy value--note this is a string
3C100402	LUI	S0,0402
0C001149	-JAL	70004524	;V0=view.uly
00022025	*OR	A0,V0,R0	;S0=V0: p->DL
27A70064	ADDIU	A3,SP,0064	;A3= p->text
24460025	ADDIU	A2,V0,0025	;A2=ypos
8FA5004C	LW	A1,004C (SP)	;A1=xpos
0FC30D68	JAL	7F0C35A0	;display player data to MP menu
AFB00010	SW	S0,0010 (SP)	;display mode = string
//	display shot total value
3C100400	LUI	S0,0400
0C001149	-JAL	70004524	;V0=view.uly
00022025	OR	A0,V0,R0
24460035	ADDIU	A2,V0,0035	;A2=ypos
8FA5004C	LW	A1,004C (SP)	;A1=xpos
AFB00010	SW	S0,0010 (SP)	;display mode = value, default colour
0FC30D68	JAL	7F0C35A0	;display player data to MP menu
8FA70050	LW	A3,0050 (SP)
//	display inning (ms)
00028825	OR	S1,V0,R0
0FC1A9D0	JAL	7F06A740	;retrieve word A0 from stats
24040013	ADDIU	A0,R0,0013	;A0=13: longest inning
0C001149	JAL	70004524	;V0=view.uly
00023825	OR	A3,V0,R0	;A3=V0: time (ms)
24460055	ADDIU	A2,V0,0055	;A2=ypos
8FA50044	LW	A1,0044 (SP)	;A1=xpos
00112025	OR	A0,S1,R0
3C100001	LUI	S0,0001
0FC30D68	JAL	7F0C35A0	;display player data to MP menu
AFB00010	SW	S0,0010 (SP)	;display mode = value, default colour
//	hit the combiner and return, since no more menus apply
1000++++	*BEQ	R0,R0,7F0C6024
00408825	*OR	S1,V0,R0	;S0=V0: p->DL
//


This is the "hits" page
lists head, body, limb, and other hits, not counting objects
Sequential data + text tags makes for one swanky loop...
//7F0C42E0:	F8CE0	page ?--accuracy/hit totals	when finished, returns
//	set up loop--write in reverse!
24100003	ADDIU	S0,R0,0003
//	loopus
34049C6D	ORI	A0,R0,9C6D	;A0=1D 9C6D: "head hits:"
0FC30776	JAL	7F0C1DD8	;V0=p->text A0
00902021	ADDU	A0,A0,S0	;A0=text ID for string
0C001149	JAL	70004524	;V0=view.uly
00023825	OR	A3,V0,R0	;A3= p->text
24460025	ADDIU	A2,V0,0025	;A2=ypos + base offset
00101100	SLL	V0,S0,0x4
00C23021	ADDU	A2,A2,V0
AFA60048	SW	A2,0048 (SP)	;save corrected ypos
8FA50044	LW	A1,0044 (SP)	;A1=xpos
24A5FFFC	ADDIU	A1,A1,FFFC	;xpos correction
3C020202	LUI	V0,0202
AFA20010	SW	V0,0010 (SP)	;display mode = right-align, string
0FC30D68	JAL	7F0C35A0	;display player data to MP menu
00112025	OR	A0,S1,R0
//	display value
00408825	OR	A0,V0,R0	;S0=V0: p->DL
8FA60048	LW	A2,0048 (SP)	;A2=saved ypos
8FA50044	LW	A1,0044 (SP)
24A50004	ADDIU	A1,A1,0004	;A1=corrected xpos
00101080	SLL	V0,S0,0x2
005D1021	ADDU	V0,V0,SP
8C470054	LW	A3,0054 (V0)	;hit type
3C020400	LUI	V0,0400
0FC30D68	JAL	7F0C35A0	;display player data to MP menu
AFA20010	SW	V0,0010 (SP)	;display mode = value, default colour
//	increment and loop
00408825	OR	S1,V0,R0	;S0=V0: p->DL
1600FF--	BNE	S0,R0,-loopus
2610FFFF	ADDIU	S0,S0,FFFF
//	hit the combiner and return, since no more menus apply
1000++++	BEQ	R0,R0,7F0C6024
00000000	NOP
//


+_+

slight interface hack to allow switching to this menu...
Remind me to strip the ears off that stupid routine sometime...
First thing would be hacking that stupid thing to just store the current menu #

//7F0C3304:	F7E34	page 5 and confirm
10400052	*BEQ	V0,R0,7F0C3450	;branch if B not pressed

//7F0C3450:	F7F80	cleared room for menu up/down
3C078008	LUI	A3,8008
8CEBA0B0	LW	T3,A0B0 (A3)	;T3=p->BONDdata
816C29CB	LB	T4,29CB (T3)	;T4=BONDdata+29CB: MP page
15800010	BNE	T4,R0,7F0C34A0	;branch if not menu 0
816C29CA	LB	T4,29CA (T3)	;T4=BONDdata+29CA: stats page
0FC307C7	JAL	7F0C1F1C	;TRUE if pressed down
83A4001B	LB	A0,001B (SP)	;A0=cur.player#
14400005	BNEZ	V0,+increment
2405FFFF	ADDIU	A1,R0,FFFF
0FC307C4	JAL	7F0C1F10	;TRUE if pressed up
83A4001B	LB	A0,001B (SP)	;A0=cur.player#
//7F0C347C:	F7FAC	increment
1040001B	BEQ	V0,R0,7F0C3508
00022825	OR	A1,V0,R0
3C048008	LUI	A0,8008
8C84A0B0	LW	A0,A0B0 (A0)
248429CA	ADDIU	A0,A0,29CA
0FC04F5E	JAL	7F013D78	;general inc/dec A0 by A1, ceil A2, floor default
24060003	ADDIU	A2,R0,0003
10000015	BEQ	R0,R0,7F0C3500
AFA6002C	SW	A2,002C (SP)	;crude method of forcing control stick press register which doesn't work, I may add...
//7F0C34A0:	F7FD0	test if pressed select on page 5
83A4001B	LB	A0,001B (SP)	;A0=cur.player#
0C0030EB	JAL	7000C3AC	;V0= player A0's buttons A1 pressed
34059000	ORI	A1,R0,9000	;A1=A, Start button
10400012	*BEQ	V0,R0,7F0C3508	;branch if didn't press buttons
3C078008	LUI	A3,8008
8CEBA0B0	*LW	T3,A0B0 (A3)	;T3=p->BONDdata
24010005	ADDIU	AT,R0,0005
816C29CB	LB	T4,29CB (T3)	;T4=BONDdata+29C8: MP page
15810004	*BNE	T4,AT,7F0C34E4	;branch if not page 5--exit
24010006	*ADDIU	AT,R0,0006
//7F0C34C8:	F7FF8	swap page 5 for 6
A16129CB	*SB	AT,29CB (T3)	;6->BONDdata+29C8: set page 6--cancel/confirm
10000008	*BEQ	R0,R0,7F0C3500
AD6029CC	*SW	R0,29CC (T3)	;0->BONDdata+29CC: select "CANCEL"
//7F0C34E4:	test if pressed select on page 6
15810008	*BNE	T4,AT,7F0C3508	;branch if not page 6--cancel/confirm
8D6C29CC	*LW	T4,29CC (T3)	;T9=BONDdata+29CC: selected page 6 option
//7F0C34EC:	cancel or confirm
11800006	*BEQ	T4,R0,7F0C3508	;branch if "CONFIRM" not selected
00002025	OR	A0,R0,R0
//7F0C34F4:	"CONFIRM" selected
AD6029C4	*SW	R0,29C4 (T3)	;0->BONDdata+29C4: disable MP menu
0FC3094C	JAL	7F0C2530	;determines and sets MP awards
AD602A00	*SW	R0,2A00 (T3)	;0->BONDdata+2A00: hide health display
//7F0C3500:	play sound
0FC307F7	JAL	7F0C1FDC	;play watch beep SE
00000000	NOP
//7F0C34F8:	F8028	get vert state
83A4001B	*LB	A0,001B (SP)
2405FFFE	*ADDIU	A1,R0,FFFE
0C00314A	*JAL	7000C528	;V0=vert.state
24060001	*ADDIU	A2,R0,0001
//7F0C3508:	F8038	update press register
24420001	*ADDIU	V0,V0,0001	;-2~1 becomes -1~2
2C430002	*SLTIU	V1,V0,0002	;TRUE if -1,0
8FA2002C	-LW	V0,002C (SP)	;V0=horz.state
24420001	*ADDIU	V0,V0,0001	;-2~1 becomes -1~2
//7F0C3518:	F8048	reset to 1 if 0 or -1
2C410002	*SLTIU	AT,V0,0002	;TRUE if -1,0
00610824	*AND	AT,AT,V1	;AT=TRUE only if both in happy state
3C038008	-LUI	V1,8008
8C63A0B0	-LW	V1,A0B0 (V1)	;V1=p->BONDdata
10000019	BEQ	R0,R0,7F0C3590
AC6129D0	*SW	AT,29D0 (V1)
00000000	*NOP
//7F0C3534:	F8064	test if activating the menu
