This allows cycling options backward
Ls and Z button cycle back
Rs and A button cycle formward

//7F010B2C:	4565C	detect selecting currently highlighted option
00002025	OR	A0,R0,R0
0C0030EB	JAL	7000C3AC	;TRUE if player 1 pressed A or Z
3405AF3F	*ORI	A1,R0,AF3F	;A1=mask: A + Z button
10400051	BEQ	V0,R0,7F010C80	;branch if neither button pressed
//7F010B3C:	4566C	set forward or backward.  back has precedence
30432626	*ANDI	V1,V0,2626
10600002	*BEQL	V1,R0,+2
24030001	*ADDIU	V1,R0,0001	;forward
2403FFFF	*ADDIU	V1,R0,FFFF	;backward.  still throws nonzero if needed ;*)
//7F010B4C:	detect if tab 3 selected
3C018003	-LUI	AT,8003
8C38A8E4	*LW	T8,A8E4 (AT)	;T6=8002A8E4: TRUE if folder tab 3 highlighted
57000021	*BNEZL	T8,R0,7F010BDC	;branch if tab 3 highlighted
AC23A8D8	SW	V1,A8D8 (AT)	;1->8002A8D8: tab3 selected
//7F010B5C:	detect if tab 1 selected
8C38A8DC	*LW	T8,A8DC (AT)	;T7=8002A8DC: TRUE if folder tab 1 highlighted
5700001E	*BNEZL	T8,R0,7F010BDC	;branch if tab 1 highlighted
AC23A8D0	SW	V1,A8D0 (AT)	;1->8002A8D0: tab1 selected
//7F010B68:	detect if players selected
3C018007	*LUI	AT,8007
8C3897C8	*LW	T8,97C8 (AT)	;T8=800697C8: TRUE if #players highlighted
5700001A	*BNEZL	T8,R0,7F010BDC	;branch if highlighted
AFA3003C	*SW	V1,003C (SP)	;1->SP+3C: #players selected
//7F010B78:	detect if scenario selected
8C3897CC	*LW	T8,97CC (AT)	;T0=800697CC: TRUE if scenario highlighted
57000017	*BNEZL	T8,R0,7F010BDC
AFA30038	*SW	V1,0038 (SP)	;1->SP+38: scenario selected
//7F010B84:	detect if stage select selected
8C3897D0	*LW	T8,97D0 (AT)	;T2=800697D0: TRUE if stage select highlighted
57000014	*BNEZL	T8,R0,7F010BDC
AFA30034	*SW	V1,0034 (SP)	;1->SP+34: stage select selected
//7F010B90:	detect if game length selected
8C3897D4	*LW	T8,97D4 (AT)	;T4=800697D4: TRUE if game length highlighted
57000011	*BNEZL	T8,R0,7F010BDC
AFA30030	*SW	V1,0030 (SP)	;1->SP+30: game length selected
//7F010B9C:	detect if character selected
8C3897D8	*LW	T8,97D8 (AT)	;T6=800697D8: TRUE if character highlighted
5700000E	*BNEZL	T8,R0,7F010BDC
AFA3002C	*SW	V1,002C (SP)	;1->SP+2C: character selected
//7F010BA8:	detect if weapon select selected
8C3897DC	*LW	T8,97DC (AT)	;T8=800697DC: TRUE if weapon select highlighted
5700000B	*BNEZL	T8,R0,7F010BDC
AFA30028	*SW	V1,0028 (SP)	;1->SP+28: weapon select selected
//7F010BB4:	detect if health selected
8C3897E0	LW	T8,97E0 (AT)	;T0=800697E0: TRUE if health highlighted
57000008	*BNEZL	T8,R0,7F010BDC
AFA30024	*SW	V1,0024 (SP)	;1->SP+24: health selected
//7F010BC0:	detect if control style selected
8C3897E4	*LW	T8,97E4 (AT)	;T2=800697E4: TRUE if control style highlighted
57000005	*BNEZL	T8,R0,7F010BDC
AFA30020	*SW	V1,0020 (SP)	;1->SP+20: control style selected
//7F010BCC:	detect if aim adjustment selected
8C3897E8	*LW	T8,97E8 (AT)	;T4=800697E8: TRUE if aim adjustment highlighted
1300002B	*BEQ	T8,R0,7F010C80
00000000	*NOP
AFA3001C	*SW	V1,001C (SP)	;1->SP+1C: aim adjustment selected
//7F010BDC:	45798	play selected sound effect
00003025	-OR	A2,R0,R0	;A2=0: NULL pointer to data (no SE source)
240500C7	-ADDIU	A1,R0,00C7	;A1=0C7: folder switch SE
3C048006	-LUI	A0,8006
0C002382	JAL	70008E08	;play SE 0C7: selected folder option
8C843720	LW	A0,3720 (A0)	;A0=80063720: p->SE buffer
1000002F	*BEQ	R0,R0,7F010CB0	;proceed to figure out what to do with selected option
00000000	NOP
//7F010C80:	detect if B button pressed
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	NOP
	*NOP
	*NOP
	*NOP
	NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP

+_+

set individual routines to use the new values
//7F010DF4:	45924	press A: 'Players' selected
1160000F	BEQ	T3,R0,7F010E34
8FAC0038	LW	T4,0038 (SP)
0C002E7E	JAL	7000B9F8	;V0= # controllers plugged in; T3 safe
240C0001	*ADDIU	T4,R0,0001
3C038003	LUI	V1,8003
8C63B520	LW	V1,B520 (V1)	;V1=8002B520: # players selected on MP menu
006B2021	*ADDU	A0,V1,T3	;V1+-1
0044082A	*SLT	AT,V0,A0	;AT=TRUE if #controllers < #selected
54200003	*BNEL	AT,R0,7F010E24	;branch if false
24040002	-ADDIU	A0,R0,0002	;A0=2: 2 players default
508C0001	*BEQL	A0,T4,7F010E24
00022021	*OR	A0,R0,V0	;A0=V0: roll around
//7F010E24:
0FC04182	JAL	7F010608	;initialize MP menu
00000000	NOP
10000034	*BEQ	R0,R0,7F010F00
00000000	*NOP
//7F010E34:	press A: 'Scenario' selected
	BEQ	T4,R0,7F010E50
	LW	T5,0034 (SP)
	ADDIU	A0,R0,0013	;A0=13: menu 13: scenario select
	JAL	7F01A5D4	;set to menu A0 in mode A1
	OR	A1,R0,R0	;A1=0: current menu
	BEQ	R0,R0,7F010F04
	LW	RA,0014 (SP)
//7F010E50:	press A: 'Level' selected
	BEQ	T5,R0,7F010E6C
	LW	T6,0030 (SP)
	ADDIU	A0,R0,0012	;A0=12: menu 12: MP stage select
	JAL	7F01A5D4	;set to menu A0 in mode A1
	OR	A1,R0,R0	;A1=0: current menu
	BEQ	R0,R0,7F010F04
	LW	RA,0014 (SP)
//7F010E6C:	4599C	press A: 'Game Length' selected
	BEQ	T6,R0,7F010E84
	LW	T7,002C (SP)
	JAL	7F010170	;selects next game length accounting for scenarios
000E2025	*OR	A0,R0,T7
	BEQ	R0,R0,7F010F04
	LW	RA,0014 (SP)
//7F010E84:	press A: 'Select Character' selected
	BEQ	T7,R0,7F010EA0
	LW	T8,0028 (SP)
	ADDIU	A0,R0,000F	;A0=F: menu F: character select
	JAL	7F01A5D4	;set to menu A0 in mode A1
	OR	A1,R0,R0	;A1=0: current menu
	BEQ	R0,R0,7F010F04
	LW	RA,0014 (SP)
//7F010EA0:	459D0	press A: 'Weapons' selected
	BEQ	T8,R0,7F010EB8
	LW	T9,0024 (SP)
	JAL	7F0C65CC	;advance MP weapon set menu one option
00182025	*OR	A0,R0,T8
	BEQ	R0,R0,7F010F04
	LW	RA,0014 (SP)
//7F010EB8:	press A: 'Health' selected
	BEQ	T9,R0,7F010ED4
	LW	T0,0020 (SP)
	ADDIU	A0,R0,0010	;A0=10: menu 10: handicap settings
	JAL	7F01A5D4	;set to menu A0 in mode A1
	OR	A1,R0,R0	;A1=0: current menu
	BEQ	R0,R0,7F010F04
	LW	RA,0014 (SP)
//7F010ED4	press A: 'Control Style' selected
	BEQ	T0,R0,7F010EF0
	LW	T1,001C (SP)
	ADDIU	A0,R0,0011	;A0=11: menu 11: MP control settings
	JAL	7F01A5D4	;set to menu A0 in mode A1
	OR	A1,R0,R0	;A1=0: current menu
	BEQ	R0,R0,7F010F04
	LW	RA,0014 (SP)
//7F010EF0:	45A20	press A: 'Aim' selected
	BEQL	T1,R0,7F010F04
	LW	RA,0014 (SP)
	JAL	7F01023C	;advance aim settings selection
00092025	*OR	A0,R0,T1
//7F010F00:		return!

+_+

7F01023C:	44D6C	advance aim settings selection
	accepts: A0=inc/decrement
3C028003	LUI	V0,8003
904EB53C	*LBU	T6,B53C (V0)	;T6=current setting
27BDFFE8	ADDIU	SP,SP,FFE8
AFBF0014	SW	RA,0014 (SP)
01C47021	*ADDU	T6,T6,A0	;T7=T6+1: next setting
05C20001	*BLTZL	T6,+1
240E0003	*ADDIU	T6,R0,0003
2DC10004	*SLTIU	AT,T6,0004	;T8=next & 3
50200001	*BEQL	AT,R0,+1	;branch if equal to 0 (which is what you'd want to reset to
00007025	*OR	T6,R0,R0
//7F010268:
0FC04076	JAL	7F0101D8	;copy autoaim and sight settings to player stats
A04EB53C	*SB	T6,B53C (V0)	;T8->V0: save new setting
8FBF0014	LW	RA,0014 (SP)
03E00008	JR	RA
27BD0018	ADDIU	SP,SP,0018
	NOP
	*NOP

game length updater!
7F010170:	44CA0	advance game length selection
	accepts: A0=inc/decrement
3C028003	*LUI	V0,8003
8C4EB540	*LW	T6,B540 (V0)	;T6=8002B540: scenario
24010002	ADDIU	AT,R0,0002
51C10002	*BEQL	T6,AT,+2	;branch if scenario 2: Flag Tag
24010004	*ADDIU	AT,R0,0004
24010007	*ADDIU	AT,R0,0007
//7F010188:	normal select - time and points
8C4EB538	*LW	T6,B538 (V0)	;T7=8002B538: game length
01C47021	*ADDU	T6,T6,A0	;T8=game length + 1
05C20003	*BLTZL	T6,+3
00247021	*ADDU	T6,AT,A0
01C1001A	*DIV	T6,AT
00007010	*MFHI	T6		;T9=(length+1) % 7
03E00008	JR	RA
AC4EB538	*SW	T6,B538 (V0)	;new length -> 8002B538
//7F0101A8:	44CD8	free!
	

7F0C65CC:	FB0FC	0FC31973	advance MP weapon set menu one option; saves updated value
	revised to account for variable entry numbers...
	accepts: A0=inc/decrement
	fries: AT,V0,T6,T7
3C028005	LUI	V0,8005
804E9162	LB	T6,9162 (V0)	;T6=cur selection
80419160	LB	AT,9160 (V0)	;AT=max entries
01C47021	*ADDU	T6,T6,A0	;T7=T6+1: set++
05C20001	+BLTZL	T6,+1
00017025	+OR	T6,R0,AT
24210001	ADDIU	AT,AT,0001	;accounts for random entry
01C1001A	DIV	T6,AT
3C018003	LUI	AT,8003
8C2FB540	LW	T7,B540 (AT)	;AT=8002B540: scenario bits
24010003	ADDIU	AT,R0,0003
142F0003	BNE	AT,T7,+3	;skip if not MwtGX
00007010	MFHI	T6		;T6=set % total
51C00001	BEQL	T6,R0,+1
904E915F	LBU	T6,915F (V0)	;minimum value for scenario
03E00008	JR	RA
A04E9162	SB	T6,9162 (V0)	;save revised set number

3C028005	LUI	V0,8005
804E9162	LB	T6,9162 (V0)	;T6=cur selection
01C47021	*ADDU	T6,T6,A0	;T7=T6+1: set++
3C018003	LUI	AT,8003
8C2FB540	LW	T7,B540 (AT)	;AT=8002B540: scenario bits
24010003	ADDIU	AT,R0,0003
542F0002	BNEL	AT,T7,+2	;skip if not MwtGX
00007821	OR	T7,R0,R0
904F915F	LBU	T7,915F (V0)	;minimum value for scenario
01CF082A	SLT	AT,T6,T7	;true if new < min
54200001	BNEZL	AT,+1
804E9160	LB	T6,9160 (V0)	;AT=max entries
80419160	LB	AT,9160 (V0)	;AT=max entries
002E082A	SLT	AT,AT,T6	;true if max < cur
54200001	BNEZL	AT,+1
000F7021	OR	T6,R0,T7
03E00008	JR	RA
A04E9162	SB	T6,9162 (V0)	;save revised set number


MOVING THESE:
7F0C6608 FB138 0FC31982		->	7F0C6614 FB144 0FC31985	
7F0C6614 FB144 0FC31985		->	7F0C6620 FB150 0FC31988
7F0C6620 FB150 0FC31988		->	7F0C662C FB15C 0FC3198B
7F0C6640 FB170 0FC31990		->	7F0C664C FB17C 0FC31993	
7F0C664C FB17C 0FC31993		->	7F0104F4 45024 0FC0413D

+_+

7F0101D8:	44D08	set player aim settings revision allowing independant player settings
3C018008	LUI	AT,8008
3C028003	LUI	V0,8003
240E0003	*ADDIU	T6,R0,0003
//7F0101E4:	set settings
9044B53C	*LBU	A0,B53C (V0)	//T6=selected aim settings
00041842	*SRL	V1,A0,0x1
30630001	*ANDI	V1,V1,0001
30840001	*ANDI	A0,A0,0001
A0239F5A	SB	V1,9F5A (AT)	//set player 1 autoaim	80079F5A
A0249F5B	SB	A0,9F5B (AT)	//set player 1 sight	80079F5B
24210070	*ADDIU	AT,AT,0070
24420001	*ADDIU	V0,V0,0001
15C0FFF7	*BNEZ	T6,-9
25CEFFFF	*ADDIU	T6,T6,FFFF
//7F01020C:	return
03E00008	JR	RA
00000000	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP
	*NOP

//7F011B08:	46638
	LUI	T8,8003
	LBU	T8,B53C (T8)
34049C48	*ORI	A0,R0,9C48
	OR	S0,V0,R0
00000000	*NOP
00982021	*ADDU	A0,A0,T8
	JAL	7F0C1DD8
00000000	*NOP

